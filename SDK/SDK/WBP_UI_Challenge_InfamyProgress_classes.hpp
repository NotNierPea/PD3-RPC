#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenge_InfamyProgress

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Challenge_InfamyProgress.WBP_UI_Challenge_InfamyProgress_C
// 0x00B8 (0x0360 - 0x02A8)
class UWBP_UI_Challenge_InfamyProgress_C final : public USBZInfamyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Frame_DynamicMaterial;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ProgressBar;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_ExperienceProgress;                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UI_InfamyCircularWidget_C*         WBP_UI_InfamyCircularWidget;                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ProgressBarMaterial;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MaxLevelColor;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         FontBrush;                                         // 0x02F8(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FrameText;                                         // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_Challenge_InfamyProgress(int32 EntryPoint);
	void OnInfamyValuesRefreshed();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Set_Infamy_Visuals();
	struct FSlateBrush Get_Image_ProgressBar_Brush_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Challenge_InfamyProgress_C">();
	}
	static class UWBP_UI_Challenge_InfamyProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Challenge_InfamyProgress_C>();
	}
};
static_assert(alignof(UWBP_UI_Challenge_InfamyProgress_C) == 0x000008, "Wrong alignment on UWBP_UI_Challenge_InfamyProgress_C");
static_assert(sizeof(UWBP_UI_Challenge_InfamyProgress_C) == 0x000360, "Wrong size on UWBP_UI_Challenge_InfamyProgress_C");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, UberGraphFrame) == 0x0002A8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, Frame_DynamicMaterial) == 0x0002B0, "Member 'UWBP_UI_Challenge_InfamyProgress_C::Frame_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, Image_ProgressBar) == 0x0002B8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::Image_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, Text_ExperienceProgress) == 0x0002C0, "Member 'UWBP_UI_Challenge_InfamyProgress_C::Text_ExperienceProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, WBP_UI_InfamyCircularWidget) == 0x0002C8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::WBP_UI_InfamyCircularWidget' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, ProgressBarMaterial) == 0x0002D0, "Member 'UWBP_UI_Challenge_InfamyProgress_C::ProgressBarMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, Color) == 0x0002D8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::Color' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, MaxLevelColor) == 0x0002E8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::MaxLevelColor' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, FontBrush) == 0x0002F8, "Member 'UWBP_UI_Challenge_InfamyProgress_C::FontBrush' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_InfamyProgress_C, FrameText) == 0x000358, "Member 'UWBP_UI_Challenge_InfamyProgress_C::FrameText' has a wrong offset!");

}

