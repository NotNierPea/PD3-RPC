#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Zipline_BasesOnly

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Zipline_BasesOnly.BP_Zipline_BasesOnly_C
// 0x0048 (0x0378 - 0x0330)
class ABP_Zipline_BasesOnly_C final : public ASBZZipline
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_ZiplineRibbon;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_1;                                              // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ZiplineEndPoint;                                   // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ZiplineStartPoint;                                 // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           SplineMesh;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         SplineLength;                                      // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZiplineUnfold_Duration;                            // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Zipline_BasesOnly(int32 EntryPoint);
	void BP_OnZiplineEnabledChanged(bool bEnabled, bool bDoCosmetics);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Zipline_BasesOnly_C">();
	}
	static class ABP_Zipline_BasesOnly_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Zipline_BasesOnly_C>();
	}
};
static_assert(alignof(ABP_Zipline_BasesOnly_C) == 0x000008, "Wrong alignment on ABP_Zipline_BasesOnly_C");
static_assert(sizeof(ABP_Zipline_BasesOnly_C) == 0x000378, "Wrong size on ABP_Zipline_BasesOnly_C");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, UberGraphFrame) == 0x000330, "Member 'ABP_Zipline_BasesOnly_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, FX_ZiplineRibbon) == 0x000338, "Member 'ABP_Zipline_BasesOnly_C::FX_ZiplineRibbon' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, Ak_1) == 0x000340, "Member 'ABP_Zipline_BasesOnly_C::Ak_1' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, Ak) == 0x000348, "Member 'ABP_Zipline_BasesOnly_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, ZiplineEndPoint) == 0x000350, "Member 'ABP_Zipline_BasesOnly_C::ZiplineEndPoint' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, ZiplineStartPoint) == 0x000358, "Member 'ABP_Zipline_BasesOnly_C::ZiplineStartPoint' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, SplineMesh) == 0x000360, "Member 'ABP_Zipline_BasesOnly_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, SplineLength) == 0x000370, "Member 'ABP_Zipline_BasesOnly_C::SplineLength' has a wrong offset!");
static_assert(offsetof(ABP_Zipline_BasesOnly_C, ZiplineUnfold_Duration) == 0x000374, "Member 'ABP_Zipline_BasesOnly_C::ZiplineUnfold_Duration' has a wrong offset!");

}

