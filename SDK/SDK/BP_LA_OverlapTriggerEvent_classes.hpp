#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LA_OverlapTriggerEvent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C
// 0x00A8 (0x0350 - 0x02A8)
class ABP_LA_OverlapTriggerEvent_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ExitTrigger;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EnterTrigger;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionSlot*                     SBZLifeActionSlot;                                 // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 SBZLifeActionInstance;                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionComponent*                SBZLifeAction;                                     // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeginOverlapSectionName;                           // 0x02D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EndOverlapSectionName;                             // 0x02E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OverlappingActors;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   TargetOverlapSectionName;                          // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BlockingTargetOverlapSectionName;                  // 0x030C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteruptAnimation;                              // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           EnterTriggerBlockingSectionNames;                  // 0x0320(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           ExitTriggerBlockingSectionNames;                   // 0x0330(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           BlockingSwitches;                                  // 0x0340(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_LA_OverlapTriggerEvent(int32 EntryPoint);
	void BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature(class ASBZCharacter* Character, class USBZLifeActionInstance* ActionInstance, class USBZLifeActionSlot* ActionSlot);
	void BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature(class ASBZCharacter* Character, class USBZLifeActionInstance* ActionInstance, class USBZLifeActionSlot* ActionSlot, ESBZLifeActionStopReason Result);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SetTriggerEnable(bool Enable);
	void GetCurrentSectionName(class FName* SectionName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LA_OverlapTriggerEvent_C">();
	}
	static class ABP_LA_OverlapTriggerEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LA_OverlapTriggerEvent_C>();
	}
};
static_assert(alignof(ABP_LA_OverlapTriggerEvent_C) == 0x000008, "Wrong alignment on ABP_LA_OverlapTriggerEvent_C");
static_assert(sizeof(ABP_LA_OverlapTriggerEvent_C) == 0x000350, "Wrong size on ABP_LA_OverlapTriggerEvent_C");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LA_OverlapTriggerEvent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, ExitTrigger) == 0x0002B0, "Member 'ABP_LA_OverlapTriggerEvent_C::ExitTrigger' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, EnterTrigger) == 0x0002B8, "Member 'ABP_LA_OverlapTriggerEvent_C::EnterTrigger' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, SBZLifeActionSlot) == 0x0002C0, "Member 'ABP_LA_OverlapTriggerEvent_C::SBZLifeActionSlot' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, SBZLifeActionInstance) == 0x0002C8, "Member 'ABP_LA_OverlapTriggerEvent_C::SBZLifeActionInstance' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, SBZLifeAction) == 0x0002D0, "Member 'ABP_LA_OverlapTriggerEvent_C::SBZLifeAction' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, BeginOverlapSectionName) == 0x0002D8, "Member 'ABP_LA_OverlapTriggerEvent_C::BeginOverlapSectionName' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, EndOverlapSectionName) == 0x0002E4, "Member 'ABP_LA_OverlapTriggerEvent_C::EndOverlapSectionName' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, OverlappingActors) == 0x0002F0, "Member 'ABP_LA_OverlapTriggerEvent_C::OverlappingActors' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, TargetOverlapSectionName) == 0x000300, "Member 'ABP_LA_OverlapTriggerEvent_C::TargetOverlapSectionName' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, BlockingTargetOverlapSectionName) == 0x00030C, "Member 'ABP_LA_OverlapTriggerEvent_C::BlockingTargetOverlapSectionName' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, CanInteruptAnimation) == 0x000318, "Member 'ABP_LA_OverlapTriggerEvent_C::CanInteruptAnimation' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, EnterTriggerBlockingSectionNames) == 0x000320, "Member 'ABP_LA_OverlapTriggerEvent_C::EnterTriggerBlockingSectionNames' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, ExitTriggerBlockingSectionNames) == 0x000330, "Member 'ABP_LA_OverlapTriggerEvent_C::ExitTriggerBlockingSectionNames' has a wrong offset!");
static_assert(offsetof(ABP_LA_OverlapTriggerEvent_C, BlockingSwitches) == 0x000340, "Member 'ABP_LA_OverlapTriggerEvent_C::BlockingSwitches' has a wrong offset!");

}

