#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ProgressBarAnimate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.ExecuteUbergraph_WBP_UI_ProgressBarAnimate
// 0x0050 (0x0050 - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate) == 0x000008, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate) == 0x000050, "Wrong size on WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, EntryPoint) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, CallFunc_FInterpTo_ReturnValue) == 0x000048, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'WBP_UI_ProgressBarAnimate_C_ExecuteUbergraph_WBP_UI_ProgressBarAnimate::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_Tick) == 0x000004, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_Tick");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_Tick) == 0x00003C, "Wrong size on WBP_UI_ProgressBarAnimate_C_Tick");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_UI_ProgressBarAnimate_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_PreConstruct");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_ProgressBarAnimate_C_PreConstruct");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.UpdateProgress
// 0x0040 (0x0040 - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_UpdateProgress final
{
public:
	float                                         Divider;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0014(0x0008)(NoDestructor)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x001C(0x0008)(NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_2;                // 0x0028(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_UpdateProgress) == 0x000008, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_UpdateProgress");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_UpdateProgress) == 0x000040, "Wrong size on WBP_UI_ProgressBarAnimate_C_UpdateProgress");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, Divider) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::Divider' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000008, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, K2Node_MakeStruct_SlateChildSize) == 0x000014, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, K2Node_MakeStruct_SlateChildSize_1) == 0x00001C, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000024, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, K2Node_MakeStruct_SlateChildSize_2) == 0x000028, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::K2Node_MakeStruct_SlateChildSize_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000030, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_UpdateProgress, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2) == 0x000038, "Member 'WBP_UI_ProgressBarAnimate_C_UpdateProgress::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2' has a wrong offset!");

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.SetProgress
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_SetProgress final
{
public:
	float                                         InPreviousProgress;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InNewPercent;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_SetProgress) == 0x000004, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_SetProgress");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_SetProgress) == 0x000010, "Wrong size on WBP_UI_ProgressBarAnimate_C_SetProgress");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_SetProgress, InPreviousProgress) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_SetProgress::InPreviousProgress' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_SetProgress, InNewPercent) == 0x000004, "Member 'WBP_UI_ProgressBarAnimate_C_SetProgress::InNewPercent' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_SetProgress, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_UI_ProgressBarAnimate_C_SetProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_SetProgress, CallFunc_FClamp_ReturnValue_1) == 0x00000C, "Member 'WBP_UI_ProgressBarAnimate_C_SetProgress::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C.AnimateProgress
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_ProgressBarAnimate_C_AnimateProgress final
{
public:
	int32                                         CallFunc_Play2DSound_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ProgressBarAnimate_C_AnimateProgress) == 0x000008, "Wrong alignment on WBP_UI_ProgressBarAnimate_C_AnimateProgress");
static_assert(sizeof(WBP_UI_ProgressBarAnimate_C_AnimateProgress) == 0x000028, "Wrong size on WBP_UI_ProgressBarAnimate_C_AnimateProgress");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_AnimateProgress, CallFunc_Play2DSound_ReturnValue) == 0x000000, "Member 'WBP_UI_ProgressBarAnimate_C_AnimateProgress::CallFunc_Play2DSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_AnimateProgress, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_UI_ProgressBarAnimate_C_AnimateProgress::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_AnimateProgress, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_UI_ProgressBarAnimate_C_AnimateProgress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UI_ProgressBarAnimate_C_AnimateProgress, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_UI_ProgressBarAnimate_C_AnimateProgress::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

