#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConnectedCableBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConnectedCableBox.BP_ConnectedCableBox_C
// 0x0128 (0x0478 - 0x0350)
class ABP_ConnectedCableBox_C final : public ASBZConnectedCableBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   OutlineDoor;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZRenderTargetWidgetComponent*        SBZRenderTargetWidget;                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorCollision;                                     // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutlineMesh;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              DoorInteractable_1;                                // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   RedOutline;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   GreenOutline;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   WhiteOutline;                                      // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   BlueOutline;                                       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   DoorOutline;                                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Red;                                               // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          White;                                             // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Blue;                                              // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Green;                                             // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CableBox_1;                                        // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_4;                           // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_3;                           // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_2;                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_1;                           // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DoorTimeline_DoorRotationTrack_4B6AA24E4D7DAD0E105999BD3338BF7C; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DoorTimeline__Direction_4B6AA24E4D7DAD0E105999BD3338BF7C; // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DoorTimeline;                                      // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchTimeline_SwitchRollTrack_660CABE148316D18AD71498E502EFCEE; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SwitchTimeline__Direction_660CABE148316D18AD71498E502EFCEE; // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SwitchTimeline;                                    // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurrentCable;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLineNewTime;                                   // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RenderTargetName;                                  // 0x0430(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ModelNumber;                                       // 0x0440(0x0018)(Edit, BlueprintVisible)
	class FText                                   ScreenText;                                        // 0x0458(0x0018)(Edit, BlueprintVisible)
	bool                                          bForceEditing;                                     // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisableTextModel;                                 // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ConnectedCableBox(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BP_OnComplete(bool bWasSuccess);
	void BP_FlipSwitch(int32 Index_0, bool bDoCosmetics, bool bReset);
	void BP_UpdateModelNumber(const class FText& ModelNumberText);
	void BP_OpenDoor(bool bDoCosmetics);
	void SwitchTimeline__UpdateFunc();
	void SwitchTimeline__FinishedFunc();
	void DoorTimeline__UpdateFunc();
	void DoorTimeline__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConnectedCableBox_C">();
	}
	static class ABP_ConnectedCableBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ConnectedCableBox_C>();
	}
};
static_assert(alignof(ABP_ConnectedCableBox_C) == 0x000008, "Wrong alignment on ABP_ConnectedCableBox_C");
static_assert(sizeof(ABP_ConnectedCableBox_C) == 0x000478, "Wrong size on ABP_ConnectedCableBox_C");
static_assert(offsetof(ABP_ConnectedCableBox_C, UberGraphFrame) == 0x000350, "Member 'ABP_ConnectedCableBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, OutlineDoor) == 0x000358, "Member 'ABP_ConnectedCableBox_C::OutlineDoor' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SBZRenderTargetWidget) == 0x000360, "Member 'ABP_ConnectedCableBox_C::SBZRenderTargetWidget' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorCollision) == 0x000368, "Member 'ABP_ConnectedCableBox_C::DoorCollision' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, OutlineMesh) == 0x000370, "Member 'ABP_ConnectedCableBox_C::OutlineMesh' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorInteractable_1) == 0x000378, "Member 'ABP_ConnectedCableBox_C::DoorInteractable_1' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, RedOutline) == 0x000380, "Member 'ABP_ConnectedCableBox_C::RedOutline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, GreenOutline) == 0x000388, "Member 'ABP_ConnectedCableBox_C::GreenOutline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, WhiteOutline) == 0x000390, "Member 'ABP_ConnectedCableBox_C::WhiteOutline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, BlueOutline) == 0x000398, "Member 'ABP_ConnectedCableBox_C::BlueOutline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorOutline) == 0x0003A0, "Member 'ABP_ConnectedCableBox_C::DoorOutline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, Red) == 0x0003A8, "Member 'ABP_ConnectedCableBox_C::Red' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, White) == 0x0003B0, "Member 'ABP_ConnectedCableBox_C::White' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, Blue) == 0x0003B8, "Member 'ABP_ConnectedCableBox_C::Blue' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, Green) == 0x0003C0, "Member 'ABP_ConnectedCableBox_C::Green' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, CableBox_1) == 0x0003C8, "Member 'ABP_ConnectedCableBox_C::CableBox_1' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, Ak) == 0x0003D0, "Member 'ABP_ConnectedCableBox_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SBZInteractable_Cable_4) == 0x0003D8, "Member 'ABP_ConnectedCableBox_C::SBZInteractable_Cable_4' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SBZInteractable_Cable_3) == 0x0003E0, "Member 'ABP_ConnectedCableBox_C::SBZInteractable_Cable_3' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SBZInteractable_Cable_2) == 0x0003E8, "Member 'ABP_ConnectedCableBox_C::SBZInteractable_Cable_2' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SBZInteractable_Cable_1) == 0x0003F0, "Member 'ABP_ConnectedCableBox_C::SBZInteractable_Cable_1' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorTimeline_DoorRotationTrack_4B6AA24E4D7DAD0E105999BD3338BF7C) == 0x0003F8, "Member 'ABP_ConnectedCableBox_C::DoorTimeline_DoorRotationTrack_4B6AA24E4D7DAD0E105999BD3338BF7C' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorTimeline__Direction_4B6AA24E4D7DAD0E105999BD3338BF7C) == 0x0003FC, "Member 'ABP_ConnectedCableBox_C::DoorTimeline__Direction_4B6AA24E4D7DAD0E105999BD3338BF7C' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DoorTimeline) == 0x000400, "Member 'ABP_ConnectedCableBox_C::DoorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SwitchTimeline_SwitchRollTrack_660CABE148316D18AD71498E502EFCEE) == 0x000408, "Member 'ABP_ConnectedCableBox_C::SwitchTimeline_SwitchRollTrack_660CABE148316D18AD71498E502EFCEE' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SwitchTimeline__Direction_660CABE148316D18AD71498E502EFCEE) == 0x00040C, "Member 'ABP_ConnectedCableBox_C::SwitchTimeline__Direction_660CABE148316D18AD71498E502EFCEE' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, SwitchTimeline) == 0x000410, "Member 'ABP_ConnectedCableBox_C::SwitchTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, CurrentCable) == 0x000418, "Member 'ABP_ConnectedCableBox_C::CurrentCable' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, TimeLineNewTime) == 0x000420, "Member 'ABP_ConnectedCableBox_C::TimeLineNewTime' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, DynamicMaterial) == 0x000428, "Member 'ABP_ConnectedCableBox_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, RenderTargetName) == 0x000430, "Member 'ABP_ConnectedCableBox_C::RenderTargetName' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, ModelNumber) == 0x000440, "Member 'ABP_ConnectedCableBox_C::ModelNumber' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, ScreenText) == 0x000458, "Member 'ABP_ConnectedCableBox_C::ScreenText' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, bForceEditing) == 0x000470, "Member 'ABP_ConnectedCableBox_C::bForceEditing' has a wrong offset!");
static_assert(offsetof(ABP_ConnectedCableBox_C, bDisableTextModel) == 0x000471, "Member 'ABP_ConnectedCableBox_C::bDisableTextModel' has a wrong offset!");

}

