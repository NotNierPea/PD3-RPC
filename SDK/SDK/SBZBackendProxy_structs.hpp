#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SBZBackendProxy

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct SBZBackendProxy.SBZBackendProxyConfig
// 0x0030 (0x0030 - 0x0000)
struct FSBZBackendProxyConfig final
{
public:
	class FString                                 Base_Url;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Retry_Limit_Count;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Retry_Timeout_Seconds;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Retry_Response_Codes;                              // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSBZBackendProxyConfig) == 0x000008, "Wrong alignment on FSBZBackendProxyConfig");
static_assert(sizeof(FSBZBackendProxyConfig) == 0x000030, "Wrong size on FSBZBackendProxyConfig");
static_assert(offsetof(FSBZBackendProxyConfig, Base_Url) == 0x000000, "Member 'FSBZBackendProxyConfig::Base_Url' has a wrong offset!");
static_assert(offsetof(FSBZBackendProxyConfig, Retry_Limit_Count) == 0x000010, "Member 'FSBZBackendProxyConfig::Retry_Limit_Count' has a wrong offset!");
static_assert(offsetof(FSBZBackendProxyConfig, Retry_Timeout_Seconds) == 0x000018, "Member 'FSBZBackendProxyConfig::Retry_Timeout_Seconds' has a wrong offset!");
static_assert(offsetof(FSBZBackendProxyConfig, Retry_Response_Codes) == 0x000020, "Member 'FSBZBackendProxyConfig::Retry_Response_Codes' has a wrong offset!");

}

