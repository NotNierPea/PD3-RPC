#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_WeaponSlotButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton
// 0x0030 (0x0030 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPresetWeaponSlot_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsActiveWeaponSlot;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZInventoryBaseData*            CallFunc_GetWeaponInventoryData_ReturnValue;       // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZEquippableLoadoutSlot                     CallFunc_GetEquippableSlot_ReturnValue;            // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponSlotIndex_ReturnValue;           // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton) == 0x000008, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton) == 0x000030, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_byte_Variable) == 0x000005, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Event_bInHasFocus) == 0x00000A, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Event_bInIsHovered) == 0x00000B, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_IsPresetWeaponSlot_ReturnValue) == 0x00000D, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_IsPresetWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Event_bIsActiveWeaponSlot) == 0x00000E, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Event_bIsActiveWeaponSlot' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Select_Default) == 0x00000F, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_GetWeaponInventoryData_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_GetWeaponInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_GetEquippableSlot_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_GetEquippableSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_GetWeaponSlotIndex_ReturnValue) == 0x00001C, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_GetWeaponSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, K2Node_Select_Default_1) == 0x000025, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_WeaponSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.SetActiveWeaponSlot
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot final
{
public:
	bool                                          bIsActiveWeaponSlot;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot) == 0x000001, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot, bIsActiveWeaponSlot) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetActiveWeaponSlot::bIsActiveWeaponSlot' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_OnFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused) == 0x000008, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_OnFocused");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused) == 0x000028, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_OnFocused");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_OnFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_OnFocused::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_OnFocused::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_OnFocused, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_OnFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.InitializeItem
// 0x0040 (0x0040 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem final
{
public:
	class USBZInventoryBaseData*                  InInventoryData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0008(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponInSlotLevel_ReturnValue;         // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem) == 0x000008, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem) == 0x000040, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, InInventoryData) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::InInventoryData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, CallFunc_GetDisplayName_OutDisplayName) == 0x000008, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, CallFunc_GetDisplayName_OutHasText) == 0x000020, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, CallFunc_GetWeaponInSlotLevel_ReturnValue) == 0x000024, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::CallFunc_GetWeaponInSlotLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_InitializeItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.SetEquipped
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped final
{
public:
	bool                                          bIsEquipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped) == 0x000001, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped) == 0x000005, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped, bIsEquipped) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped::bIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetEquipped::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Inventory_WeaponSlotButton.WBP_UI_Inventory_WeaponSlotButton_C.SetWeaponTextColour
// 0x0090 (0x0090 - 0x0000)
struct WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour final
{
public:
	struct FLinearColor                           InColour;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0028)()
	const class USBZEquippableData*               CallFunc_GetWeaponInSlot_ReturnValue;              // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0070(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour) == 0x000008, "Wrong alignment on WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour");
static_assert(sizeof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour) == 0x000090, "Wrong size on WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, InColour) == 0x000000, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::InColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, CallFunc_GetWeaponInSlot_ReturnValue) == 0x000060, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::CallFunc_GetWeaponInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, CallFunc_GetDisplayName_OutDisplayName) == 0x000070, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour, CallFunc_GetDisplayName_OutHasText) == 0x000088, "Member 'WBP_UI_Inventory_WeaponSlotButton_C_SetWeaponTextColour::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");

}

