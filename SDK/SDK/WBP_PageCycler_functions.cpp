#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PageCycler

#include "Basic.hpp"

#include "WBP_PageCycler_classes.hpp"
#include "WBP_PageCycler_parameters.hpp"


namespace SDK
{

// Function WBP_PageCycler.WBP_PageCycler_C.ExecuteUbergraph_WBP_PageCycler
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PageCycler_C::ExecuteUbergraph_WBP_PageCycler(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "ExecuteUbergraph_WBP_PageCycler");

	Params::WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_PageCycler_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "PreConstruct");

	Params::WBP_PageCycler_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.OnInputTypeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bKeyboardMouseInput                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_PageCycler_C::OnInputTypeChanged(bool bKeyboardMouseInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "OnInputTypeChanged");

	Params::WBP_PageCycler_C_OnInputTypeChanged Parms{};

	Parms.bKeyboardMouseInput = bKeyboardMouseInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.DisableActionNavigation
// (BlueprintCallable, BlueprintEvent)

void UWBP_PageCycler_C::DisableActionNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "DisableActionNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PageCycler.WBP_PageCycler_C.EnableActionNavigation
// (BlueprintCallable, BlueprintEvent)

void UWBP_PageCycler_C::EnableActionNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "EnableActionNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PageCycler.WBP_PageCycler_C.OnRightNavigationPressed
// (BlueprintCallable, BlueprintEvent)

void UWBP_PageCycler_C::OnRightNavigationPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "OnRightNavigationPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PageCycler.WBP_PageCycler_C.OnLeftNavigationPressed
// (BlueprintCallable, BlueprintEvent)

void UWBP_PageCycler_C::OnLeftNavigationPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "OnLeftNavigationPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PageCycler.WBP_PageCycler_C.UpdateActiveIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNewIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PageCycler_C::UpdateActiveIndex(int32 InNewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "UpdateActiveIndex");

	Params::WBP_PageCycler_C_UpdateActiveIndex Parms{};

	Parms.InNewIndex = InNewIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.OnAddedPage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PageCycler_C::OnAddedPage(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "OnAddedPage");

	Params::WBP_PageCycler_C_OnAddedPage Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.OnNavItemClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PageCycler_C::OnNavItemClicked(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "OnNavItemClicked");

	Params::WBP_PageCycler_C_OnNavItemClicked Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PageCycler.WBP_PageCycler_C.CreateAndAddPageCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PageCycler_C::CreateAndAddPageCount(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PageCycler_C", "CreateAndAddPageCount");

	Params::WBP_PageCycler_C_CreateAndAddPageCount Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

