#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_CrosshairVisuals

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals) == 0x00000C, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_UI_Widget_CrosshairVisuals_C_ExecuteUbergraph_WBP_UI_Widget_CrosshairVisuals::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_PreConstruct");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_PreConstruct");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.SetBarSize
// 0x0030 (0x0030 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_SetBarSize final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_SetBarSize");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize) == 0x000030, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_SetBarSize");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, Length) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::Length' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, Width) == 0x000004, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::Width' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_FMax_ReturnValue_1) == 0x00000C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_GetViewportScale_ReturnValue_1) == 0x000020, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetBarSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetBarSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.SetDotSize
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_SetDotSize final
{
public:
	float                                         DotSize_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_SetDotSize");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize) == 0x000018, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_SetDotSize");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize, DotSize_0) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetDotSize::DotSize_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize, CallFunc_GetViewportScale_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetDotSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetDotSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetDotSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetDotSize, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetDotSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.SetCrosshairColour
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour final
{
public:
	struct FLinearColor                           InNewBarColour;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InNewDotColor;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour) == 0x000020, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour, InNewBarColour) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour::InNewBarColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour, InNewDotColor) == 0x000010, "Member 'WBP_UI_Widget_CrosshairVisuals_C_SetCrosshairColour::InNewDotColor' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.UpdateScale
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_UpdateScale final
{
public:
	float                                         CurrentScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrosshairsShowAccuracy_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCrosshairsCenterGap_ReturnValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0024(0x001C)(NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0048(0x001C)(NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_2;               // 0x006C(0x001C)(NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_3;               // 0x0094(0x001C)(NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_UpdateScale");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale) == 0x0000B0, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_UpdateScale");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CurrentScale) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CurrentScale' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_GetCrosshairsShowAccuracy_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_GetCrosshairsShowAccuracy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_GetCrosshairsCenterGap_ReturnValue) == 0x00000C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_GetCrosshairsCenterGap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, K2Node_MakeStruct_WidgetTransform) == 0x000024, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, K2Node_MakeStruct_WidgetTransform_1) == 0x000048, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_MakeVector2D_ReturnValue_2) == 0x000064, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, K2Node_MakeStruct_WidgetTransform_2) == 0x00006C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::K2Node_MakeStruct_WidgetTransform_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000088, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, CallFunc_MakeVector2D_ReturnValue_3) == 0x00008C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateScale, K2Node_MakeStruct_WidgetTransform_3) == 0x000094, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateScale::K2Node_MakeStruct_WidgetTransform_3' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.UpdateSettings
// 0x003C (0x003C - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings final
{
public:
	struct FSBZCrosshairSettings                  InCrosshairSettings;                               // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings) == 0x00003C, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings, InCrosshairSettings) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateSettings::InCrosshairSettings' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.UpdateVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility) == 0x000001, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility) == 0x000005, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility, IsVisible_0) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_Widget_CrosshairVisuals_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.OnGeometeryUpdated
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated) == 0x000008, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated) == 0x000028, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_CrosshairVisuals_C_OnGeometeryUpdated::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_CrosshairVisuals.WBP_UI_Widget_CrosshairVisuals_C.GetCurrentCrosshairSettings
// 0x003C (0x003C - 0x0000)
struct WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings final
{
public:
	struct FSBZCrosshairSettings                  CrosshairSettings;                                 // 0x0000(0x003C)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings) == 0x000004, "Wrong alignment on WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings");
static_assert(sizeof(WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings) == 0x00003C, "Wrong size on WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings");
static_assert(offsetof(WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings, CrosshairSettings) == 0x000000, "Member 'WBP_UI_Widget_CrosshairVisuals_C_GetCurrentCrosshairSettings::CrosshairSettings' has a wrong offset!");

}

