#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_PartyMemberWeaponStatus

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEquippedNewValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AmmoTotalChanged;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3AmmoState                                 K2Node_Event_NewState;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AmmoAddedCount;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus) == 0x000008, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus) == 0x000020, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, K2Node_Event_bIsEquippedNewValue) == 0x000004, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::K2Node_Event_bIsEquippedNewValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, K2Node_Event_AmmoTotalChanged) == 0x000008, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::K2Node_Event_AmmoTotalChanged' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, K2Node_Event_NewState) == 0x00000C, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, K2Node_Event_AmmoAddedCount) == 0x000010, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::K2Node_Event_AmmoAddedCount' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_ExecuteUbergraph_WBP_UI_Widget_PartyMemberWeaponStatus::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.OnAmmoAdded
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded final
{
public:
	int32                                         AmmoAddedCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded) == 0x000004, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded) == 0x000004, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded, AmmoAddedCount) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoAdded::AmmoAddedCount' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.OnAmmoTotalStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged final
{
public:
	EPD3AmmoState                                 NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged) == 0x000001, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged, NewState) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalStateChanged::NewState' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.OnAmmoTotalChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged final
{
public:
	int32                                         AmmoTotalChanged;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged) == 0x000004, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged, AmmoTotalChanged) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_OnAmmoTotalChanged::AmmoTotalChanged' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.OnEquippedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged final
{
public:
	bool                                          bIsEquippedNewValue;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged) == 0x000001, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged, bIsEquippedNewValue) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_OnEquippedChanged::bIsEquippedNewValue' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.SetEquipped
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped) == 0x000004, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped) == 0x000008, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped, IsEquipped) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped::IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetEquipped::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.SetAmmoState
// 0x0038 (0x0038 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3AmmoState                                 Index_0;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3AmmoState                                 Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0010(0x0028)()
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState) == 0x000008, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState) == 0x000038, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState, TextBlock) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState::TextBlock' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState, Index_0) == 0x000008, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState, Temp_byte_Variable) == 0x000009, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState, K2Node_Select_Default) == 0x000010, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetAmmoState::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Widget_PartyMemberWeaponStatus.WBP_UI_Widget_PartyMemberWeaponStatus_C.SetText
// 0x0060 (0x0060 - 0x0000)
struct WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText final
{
public:
	int32                                         AmmoValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatIntToText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatIntToText_ReturnValue_1;            // 0x0028(0x0018)()
	class FText                                   CallFunc_FormatIntToText_ReturnValue_2;            // 0x0040(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText) == 0x000008, "Wrong alignment on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText");
static_assert(sizeof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText) == 0x000060, "Wrong size on WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, AmmoValue) == 0x000000, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::AmmoValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, CallFunc_FormatIntToText_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::CallFunc_FormatIntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, CallFunc_FormatIntToText_ReturnValue_1) == 0x000028, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::CallFunc_FormatIntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, CallFunc_FormatIntToText_ReturnValue_2) == 0x000040, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::CallFunc_FormatIntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000058, "Member 'WBP_UI_Widget_PartyMemberWeaponStatus_C_SetText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

}

