#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ServerDecrypter

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ServerDecrypter.BP_ServerDecrypter_C
// 0x0198 (0x05F0 - 0x0458)
class ABP_ServerDecrypter_C final : public ASBZCombiningLootProcessor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZAIObjectiveComponent*               SBZAIObjective;                                    // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_R_05;                                       // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_R_04;                                       // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_R_03;                                       // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_R_02;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_R_01;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_2;                                           // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_05;                                         // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lights_working;                                    // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lights_03;                                         // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lights_02;                                         // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   lights_01;                                         // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_04;                                         // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_03;                                         // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_02;                                         // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   server_01;                                         // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_1;                                           // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   serverCombined;                                    // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZRenderTargetWidgetComponent*        SBZRenderTargetWidget;                             // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DAT_DecryptionMachine_01_B_Left;                   // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DAT_DecryptionMachine_01_C_Right;                  // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline_combined;                               // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline_single;                                 // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         animateEjectServerTimeline_alpha_D170246A44C0030C59AD378530FC35D2; // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            animateEjectServerTimeline__Direction_D170246A44C0030C59AD378530FC35D2; // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     animateEjectServerTimeline;                        // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         animateInsertServerTimeline_alpha_73B008DC48FC4BD2135F558974FE9D19; // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            animateInsertServerTimeline__Direction_73B008DC48FC4BD2135F558974FE9D19; // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     animateInsertServerTimeline;                       // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         animateProgressBarTimeline_alpha_B80F2EC44C1ADFB0306F819DF53C2159; // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            animateProgressBarTimeline__Direction_B80F2EC44C1ADFB0306F819DF53C2159; // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     animateProgressBarTimeline;                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               ColorIdle;                                         // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               ColorRunning;                                      // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               ColorComplete;                                     // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ServerDecrypter_C*                 displayWidget;                                     // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          serverCombinedCollected;                           // 0x0598(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         numCombinedBags;                                   // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          serverBeingEjected;                                // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           servers;                                           // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           serversToInsert;                                   // 0x05B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           serversToEject;                                    // 0x05C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         numInsertedServers;                                // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         numBags;                                           // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZLootProcessorState                        decryptState;                                      // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               lightWorking_DMI;                                  // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ServerDecrypter(int32 EntryPoint);
	void BP_OnCombinedBagCountUpdated(int32 Count);
	void BP_OnRunningStateChanged(ESBZLootProcessorState NewState, bool bDoCosmetics, bool bIsDedicatedServer);
	void BP_BagCountUpdated(int32 NumOfBags);
	void hideServer(int32 slot);
	void BndEvt__BP_ServerDecrypter_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__BP_ServerDecrypter_ClaimCombinedBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void animateEjectServerTimeline__UpdateFunc();
	void animateEjectServerTimeline__FinishedFunc();
	void animateProgressBarTimeline__UpdateFunc();
	void animateProgressBarTimeline__FinishedFunc();
	void animateInsertServerTimeline__UpdateFunc();
	void animateInsertServerTimeline__FinishedFunc();
	void UserConstructionScript();
	void updateDisplay(const class FText& mainText, const class FText& descriptionText, int32 State, bool Flickering);
	void ejectServer(int32 slot);
	void insertServer(int32 slot);
	void OnRep_serverCombinedCollected();
	void Set_Lights(int32 amount, bool working);
	void updateServerVisibility();
	void getNumInsertedServers(int32* insertedServers);
	void forceServersFullyInserted(bool includeCombinedServer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ServerDecrypter_C">();
	}
	static class ABP_ServerDecrypter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ServerDecrypter_C>();
	}
};
static_assert(alignof(ABP_ServerDecrypter_C) == 0x000010, "Wrong alignment on ABP_ServerDecrypter_C");
static_assert(sizeof(ABP_ServerDecrypter_C) == 0x0005F0, "Wrong size on ABP_ServerDecrypter_C");
static_assert(offsetof(ABP_ServerDecrypter_C, UberGraphFrame) == 0x000458, "Member 'ABP_ServerDecrypter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, SBZAIObjective) == 0x000460, "Member 'ABP_ServerDecrypter_C::SBZAIObjective' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_R_05) == 0x000468, "Member 'ABP_ServerDecrypter_C::server_R_05' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_R_04) == 0x000470, "Member 'ABP_ServerDecrypter_C::server_R_04' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_R_03) == 0x000478, "Member 'ABP_ServerDecrypter_C::server_R_03' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_R_02) == 0x000480, "Member 'ABP_ServerDecrypter_C::server_R_02' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_R_01) == 0x000488, "Member 'ABP_ServerDecrypter_C::server_R_01' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, Scene_2) == 0x000490, "Member 'ABP_ServerDecrypter_C::Scene_2' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_05) == 0x000498, "Member 'ABP_ServerDecrypter_C::server_05' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, lights_working) == 0x0004A0, "Member 'ABP_ServerDecrypter_C::lights_working' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, lights_03) == 0x0004A8, "Member 'ABP_ServerDecrypter_C::lights_03' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, lights_02) == 0x0004B0, "Member 'ABP_ServerDecrypter_C::lights_02' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, lights_01) == 0x0004B8, "Member 'ABP_ServerDecrypter_C::lights_01' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_04) == 0x0004C0, "Member 'ABP_ServerDecrypter_C::server_04' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, Scene) == 0x0004C8, "Member 'ABP_ServerDecrypter_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_03) == 0x0004D0, "Member 'ABP_ServerDecrypter_C::server_03' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_02) == 0x0004D8, "Member 'ABP_ServerDecrypter_C::server_02' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, server_01) == 0x0004E0, "Member 'ABP_ServerDecrypter_C::server_01' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, Scene_1) == 0x0004E8, "Member 'ABP_ServerDecrypter_C::Scene_1' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, serverCombined) == 0x0004F0, "Member 'ABP_ServerDecrypter_C::serverCombined' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, Plane) == 0x0004F8, "Member 'ABP_ServerDecrypter_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, SBZRenderTargetWidget) == 0x000500, "Member 'ABP_ServerDecrypter_C::SBZRenderTargetWidget' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, DAT_DecryptionMachine_01_B_Left) == 0x000508, "Member 'ABP_ServerDecrypter_C::DAT_DecryptionMachine_01_B_Left' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, DAT_DecryptionMachine_01_C_Right) == 0x000510, "Member 'ABP_ServerDecrypter_C::DAT_DecryptionMachine_01_C_Right' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, SBZOutline_combined) == 0x000518, "Member 'ABP_ServerDecrypter_C::SBZOutline_combined' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, SBZOutline_single) == 0x000520, "Member 'ABP_ServerDecrypter_C::SBZOutline_single' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, StaticMesh) == 0x000528, "Member 'ABP_ServerDecrypter_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateEjectServerTimeline_alpha_D170246A44C0030C59AD378530FC35D2) == 0x000530, "Member 'ABP_ServerDecrypter_C::animateEjectServerTimeline_alpha_D170246A44C0030C59AD378530FC35D2' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateEjectServerTimeline__Direction_D170246A44C0030C59AD378530FC35D2) == 0x000534, "Member 'ABP_ServerDecrypter_C::animateEjectServerTimeline__Direction_D170246A44C0030C59AD378530FC35D2' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateEjectServerTimeline) == 0x000538, "Member 'ABP_ServerDecrypter_C::animateEjectServerTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateInsertServerTimeline_alpha_73B008DC48FC4BD2135F558974FE9D19) == 0x000540, "Member 'ABP_ServerDecrypter_C::animateInsertServerTimeline_alpha_73B008DC48FC4BD2135F558974FE9D19' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateInsertServerTimeline__Direction_73B008DC48FC4BD2135F558974FE9D19) == 0x000544, "Member 'ABP_ServerDecrypter_C::animateInsertServerTimeline__Direction_73B008DC48FC4BD2135F558974FE9D19' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateInsertServerTimeline) == 0x000548, "Member 'ABP_ServerDecrypter_C::animateInsertServerTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateProgressBarTimeline_alpha_B80F2EC44C1ADFB0306F819DF53C2159) == 0x000550, "Member 'ABP_ServerDecrypter_C::animateProgressBarTimeline_alpha_B80F2EC44C1ADFB0306F819DF53C2159' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateProgressBarTimeline__Direction_B80F2EC44C1ADFB0306F819DF53C2159) == 0x000554, "Member 'ABP_ServerDecrypter_C::animateProgressBarTimeline__Direction_B80F2EC44C1ADFB0306F819DF53C2159' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, animateProgressBarTimeline) == 0x000558, "Member 'ABP_ServerDecrypter_C::animateProgressBarTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, ColorIdle) == 0x000560, "Member 'ABP_ServerDecrypter_C::ColorIdle' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, ColorRunning) == 0x000570, "Member 'ABP_ServerDecrypter_C::ColorRunning' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, ColorComplete) == 0x000580, "Member 'ABP_ServerDecrypter_C::ColorComplete' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, displayWidget) == 0x000590, "Member 'ABP_ServerDecrypter_C::displayWidget' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, serverCombinedCollected) == 0x000598, "Member 'ABP_ServerDecrypter_C::serverCombinedCollected' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, numCombinedBags) == 0x00059C, "Member 'ABP_ServerDecrypter_C::numCombinedBags' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, serverBeingEjected) == 0x0005A0, "Member 'ABP_ServerDecrypter_C::serverBeingEjected' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, servers) == 0x0005A8, "Member 'ABP_ServerDecrypter_C::servers' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, serversToInsert) == 0x0005B8, "Member 'ABP_ServerDecrypter_C::serversToInsert' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, serversToEject) == 0x0005C8, "Member 'ABP_ServerDecrypter_C::serversToEject' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, numInsertedServers) == 0x0005D8, "Member 'ABP_ServerDecrypter_C::numInsertedServers' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, numBags) == 0x0005DC, "Member 'ABP_ServerDecrypter_C::numBags' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, decryptState) == 0x0005E0, "Member 'ABP_ServerDecrypter_C::decryptState' has a wrong offset!");
static_assert(offsetof(ABP_ServerDecrypter_C, lightWorking_DMI) == 0x0005E8, "Member 'ABP_ServerDecrypter_C::lightWorking_DMI' has a wrong offset!");

}

