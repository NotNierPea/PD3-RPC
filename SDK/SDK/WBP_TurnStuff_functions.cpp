#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TurnStuff

#include "Basic.hpp"

#include "WBP_TurnStuff_classes.hpp"
#include "WBP_TurnStuff_parameters.hpp"


namespace SDK
{

// Function WBP_TurnStuff.WBP_TurnStuff_C.ExecuteUbergraph_WBP_TurnStuff
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::ExecuteUbergraph_WBP_TurnStuff(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "ExecuteUbergraph_WBP_TurnStuff");

	Params::WBP_TurnStuff_C_ExecuteUbergraph_WBP_TurnStuff Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.OnMiniGameWidgetPlaced
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAkComponent*                     AkComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::OnMiniGameWidgetPlaced(class UAkComponent* AkComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "OnMiniGameWidgetPlaced");

	Params::WBP_TurnStuff_C_OnMiniGameWidgetPlaced Parms{};

	Parms.AkComponent = AkComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.BP_OnXAxisChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::BP_OnXAxisChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "BP_OnXAxisChanged");

	Params::WBP_TurnStuff_C_BP_OnXAxisChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.BP_OnYAxisChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::BP_OnYAxisChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "BP_OnYAxisChanged");

	Params::WBP_TurnStuff_C_BP_OnYAxisChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Index Interacted
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Index_Interacted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Index Interacted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.MiniGameStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EPD3MiniGameState                       NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::MiniGameStateChanged(EPD3MiniGameState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "MiniGameStateChanged");

	Params::WBP_TurnStuff_C_MiniGameStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.OnMiniGameDifficulty
// (Event, Public, BlueprintEvent)
// Parameters:
// ESBZDifficulty                          HeistDifficulty                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   MiniGameDifficulty                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::OnMiniGameDifficulty(ESBZDifficulty HeistDifficulty, uint8 MiniGameDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "OnMiniGameDifficulty");

	Params::WBP_TurnStuff_C_OnMiniGameDifficulty Parms{};

	Parms.HeistDifficulty = HeistDifficulty;
	Parms.MiniGameDifficulty = MiniGameDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Resume
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Resume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.CounterRot
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::CounterRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "CounterRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_TurnStuff_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "PreConstruct");

	Params::WBP_TurnStuff_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.ClockRot
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::ClockRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "ClockRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.CoolDown
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::CoolDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "CoolDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.TimerCount
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::TimerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "TimerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Play Blink
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Play_Blink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Play Blink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Finished_167BD88B4F667EA7028D92A5B7AB9CE6
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Finished_167BD88B4F667EA7028D92A5B7AB9CE6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Finished_167BD88B4F667EA7028D92A5B7AB9CE6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Finished_526358C4467BB346D6980EAA6A34A585
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Finished_526358C4467BB346D6980EAA6A34A585()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Finished_526358C4467BB346D6980EAA6A34A585");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Finished_5108EE7E40DB4963C7EA10BF93F95D06
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Finished_5108EE7E40DB4963C7EA10BF93F95D06()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Finished_5108EE7E40DB4963C7EA10BF93F95D06");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Finished_915C53CC435C34C1E3A47F97F6282F27
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Finished_915C53CC435C34C1E3A47F97F6282F27()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Finished_915C53CC435C34C1E3A47F97F6282F27");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Finished_384C34FC4D12BC46D82645B58C23D4A3
// (BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::Finished_384C34FC4D12BC46D82645B58C23D4A3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Finished_384C34FC4D12BC46D82645B58C23D4A3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.W
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::W()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "W");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.S
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::S()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "S");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.A
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.D
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetArrays
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::SetArrays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetArrays");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.CalcAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_TurnStuff_C::CalcAnim(class UWidget* self2, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "CalcAnim");

	Params::WBP_TurnStuff_C_CalcAnim Parms{};

	Parms.self2 = self2;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetBoard
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<float>&                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<float>&                          End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UTexture*>&                Images                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_TurnStuff_C::SetBoard(TArray<float>& Start, TArray<float>& End, TArray<class UTexture*>& Images)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetBoard");

	Params::WBP_TurnStuff_C_SetBoard Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Images = std::move(Images);

	UObject::ProcessEvent(Func, &Parms);

	Start = std::move(Parms.Start);
	End = std::move(Parms.End);
	Images = std::move(Parms.Images);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.CheckCorrect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<float>&                          Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_TurnStuff_C::CheckCorrect(TArray<float>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "CheckCorrect");

	Params::WBP_TurnStuff_C_CheckCorrect Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetMarker
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::SetMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Func
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    StopFunction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    StartFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::Func_0(const class FString& StopFunction, const class FString& StartFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Func");

	Params::WBP_TurnStuff_C_Func_0 Parms{};

	Parms.StopFunction = std::move(StopFunction);
	Parms.StartFunction = std::move(StartFunction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.NewRound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::NewRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "NewRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.ReverseAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::ReverseAnim(class UWidget* self2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "ReverseAnim");

	Params::WBP_TurnStuff_C_ReverseAnim Parms{};

	Parms.self2 = self2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetBoardSize
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::SetBoardSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetBoardSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Set Random 3x3
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FThreex3_Turn_Puzzle_Struct>&TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_TurnStuff_C::Set_Random_3x3(const TArray<struct FThreex3_Turn_Puzzle_Struct>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Set Random 3x3");

	Params::WBP_TurnStuff_C_Set_Random_3x3 Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.Set Random 4x4
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FFourx4_minigame_Struct>&TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_TurnStuff_C::Set_Random_4x4(const TArray<struct FFourx4_minigame_Struct>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "Set Random 4x4");

	Params::WBP_TurnStuff_C_Set_Random_4x4 Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetLevelsInHack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_TurnStuff_C::SetLevelsInHack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetLevelsInHack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.SetDifficulty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Minigame_Dif                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESBZDifficulty                          Heist_Dif                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TurnStuff_C::SetDifficulty(uint8 Minigame_Dif, ESBZDifficulty Heist_Dif)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "SetDifficulty");

	Params::WBP_TurnStuff_C_SetDifficulty Parms{};

	Parms.Minigame_Dif = Minigame_Dif;
	Parms.Heist_Dif = Heist_Dif;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TurnStuff.WBP_TurnStuff_C.NewFunction_1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FTwox2_Minigame_Structs>&TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_TurnStuff_C::NewFunction_1(const TArray<struct FTwox2_Minigame_Structs>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TurnStuff_C", "NewFunction_1");

	Params::WBP_TurnStuff_C_NewFunction_1 Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);
}

}

