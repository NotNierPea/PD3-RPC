#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengesContainer

#include "Basic.hpp"

#include "WBP_DailyChallengesContainer_classes.hpp"
#include "WBP_DailyChallengesContainer_parameters.hpp"


namespace SDK
{

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.ExecuteUbergraph_WBP_DailyChallengesContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DailyChallengesContainer_C::ExecuteUbergraph_WBP_DailyChallengesContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "ExecuteUbergraph_WBP_DailyChallengesContainer");

	Params::WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_DailyChallengesContainer_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "PreConstruct");

	Params::WBP_DailyChallengesContainer_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_DailyChallengesContainer_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.CreateChallengeButton
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DailyChallengeItem_C**       OutChallengeButtonWidget                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DailyChallengesContainer_C::CreateChallengeButton(class UWBP_DailyChallengeItem_C** OutChallengeButtonWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "CreateChallengeButton");

	Params::WBP_DailyChallengesContainer_C_CreateChallengeButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutChallengeButtonWidget != nullptr)
		*OutChallengeButtonWidget = Parms.OutChallengeButtonWidget;
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.OnChallengeRerollPressed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DailyChallengeItem_C*        ChallengeButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DailyChallengesContainer_C::OnChallengeRerollPressed(class UWBP_DailyChallengeItem_C* ChallengeButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "OnChallengeRerollPressed");

	Params::WBP_DailyChallengesContainer_C_OnChallengeRerollPressed Parms{};

	Parms.ChallengeButton = ChallengeButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.OnChallengeRerollPopupClosed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClosingActionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DailyChallengesContainer_C::OnChallengeRerollPopupClosed(class FName ClosingActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "OnChallengeRerollPopupClosed");

	Params::WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed Parms{};

	Parms.ClosingActionName = ClosingActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.OnDailyChallengesUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_DailyChallengesContainer_C::OnDailyChallengesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "OnDailyChallengesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.InitializeDailyChallenges
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DailyChallengesContainer_C::InitializeDailyChallenges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "InitializeDailyChallenges");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.UpdateTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DailyChallengesContainer_C::UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DailyChallengesContainer_C", "UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

