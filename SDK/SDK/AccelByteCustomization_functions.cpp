#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AccelByteCustomization

#include "Basic.hpp"

#include "AccelByteCustomization_classes.hpp"
#include "AccelByteCustomization_parameters.hpp"


namespace SDK
{

// Function AccelByteCustomization.AccelByteBlueprintsCustomizationSettings.GetChallengeServerUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAccelByteBlueprintsCustomizationSettings::GetChallengeServerUrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AccelByteBlueprintsCustomizationSettings", "GetChallengeServerUrl");

	Params::AccelByteBlueprintsCustomizationSettings_GetChallengeServerUrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AccelByteCustomization.AccelByteBlueprintsCustomizationSettings.SetChallengeServerUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ChallengeServerUrl                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAccelByteBlueprintsCustomizationSettings::SetChallengeServerUrl(const class FString& ChallengeServerUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AccelByteBlueprintsCustomizationSettings", "SetChallengeServerUrl");

	Params::AccelByteBlueprintsCustomizationSettings_SetChallengeServerUrl Parms{};

	Parms.ChallengeServerUrl = std::move(ChallengeServerUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

