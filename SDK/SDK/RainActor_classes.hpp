#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RainActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ModActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RainActor.RainActor_C
// 0x0078 (0x0340 - 0x02C8)
class ARainActor_C final : public AModActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_RainActor_C;                        // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NG_Rain;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnRate;                                         // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SpawnLevelName;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FString>                         HideRainRoomNames;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         MinimumRainIntensity;                              // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MaximumRainIntensity;                              // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ExtraZOffset;                                      // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FColor                                 RainColor;                                         // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FColor                                 SplashColor;                                       // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZCharacter*                          PlayerCharacter;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreRaycast;                                     // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UWP_VariationSelector_C*                DebugUI;                                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RainDirection;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_RainActor(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SetRainIntensity(int32 AddSpawnRate);
	void SetRainDirection(float X, float Y);
	void SetRainColors(const struct FColor& RainColor_0, const struct FColor& SplashColor_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RainActor_C">();
	}
	static class ARainActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARainActor_C>();
	}
};
static_assert(alignof(ARainActor_C) == 0x000008, "Wrong alignment on ARainActor_C");
static_assert(sizeof(ARainActor_C) == 0x000340, "Wrong size on ARainActor_C");
static_assert(offsetof(ARainActor_C, UberGraphFrame_RainActor_C) == 0x0002C8, "Member 'ARainActor_C::UberGraphFrame_RainActor_C' has a wrong offset!");
static_assert(offsetof(ARainActor_C, NG_Rain) == 0x0002D0, "Member 'ARainActor_C::NG_Rain' has a wrong offset!");
static_assert(offsetof(ARainActor_C, SpawnRate) == 0x0002D8, "Member 'ARainActor_C::SpawnRate' has a wrong offset!");
static_assert(offsetof(ARainActor_C, SpawnLevelName) == 0x0002E0, "Member 'ARainActor_C::SpawnLevelName' has a wrong offset!");
static_assert(offsetof(ARainActor_C, HideRainRoomNames) == 0x0002F0, "Member 'ARainActor_C::HideRainRoomNames' has a wrong offset!");
static_assert(offsetof(ARainActor_C, MinimumRainIntensity) == 0x000300, "Member 'ARainActor_C::MinimumRainIntensity' has a wrong offset!");
static_assert(offsetof(ARainActor_C, MaximumRainIntensity) == 0x000304, "Member 'ARainActor_C::MaximumRainIntensity' has a wrong offset!");
static_assert(offsetof(ARainActor_C, ExtraZOffset) == 0x000308, "Member 'ARainActor_C::ExtraZOffset' has a wrong offset!");
static_assert(offsetof(ARainActor_C, RainColor) == 0x00030C, "Member 'ARainActor_C::RainColor' has a wrong offset!");
static_assert(offsetof(ARainActor_C, SplashColor) == 0x000310, "Member 'ARainActor_C::SplashColor' has a wrong offset!");
static_assert(offsetof(ARainActor_C, PlayerCharacter) == 0x000318, "Member 'ARainActor_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(ARainActor_C, IgnoreRaycast) == 0x000320, "Member 'ARainActor_C::IgnoreRaycast' has a wrong offset!");
static_assert(offsetof(ARainActor_C, DebugUI) == 0x000330, "Member 'ARainActor_C::DebugUI' has a wrong offset!");
static_assert(offsetof(ARainActor_C, RainDirection) == 0x000338, "Member 'ARainActor_C::RainDirection' has a wrong offset!");

}

