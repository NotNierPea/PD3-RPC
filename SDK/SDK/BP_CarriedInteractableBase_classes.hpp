#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarriedInteractableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CarriedInteractableBase.BP_CarriedInteractableBase_C
// 0x0040 (0x0320 - 0x02E0)
class ABP_CarriedInteractableBase_C : public ASBZCarriedStaticInteractionActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZOutlineComponent*                   SBZOutline_1;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZSensorComponent*                    SBZSensor;                                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZAIObjectiveComponent*               SBZAIObjective;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CarriedInteractableBase(int32 EntryPoint);
	void BndEvt__BP_CarriedInteractableBase_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	class USBZOutlineComponent* GetSensorOutlineComponent();
	class USBZSensorComponent* GetSensorComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CarriedInteractableBase_C">();
	}
	static class ABP_CarriedInteractableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CarriedInteractableBase_C>();
	}
};
static_assert(alignof(ABP_CarriedInteractableBase_C) == 0x000008, "Wrong alignment on ABP_CarriedInteractableBase_C");
static_assert(sizeof(ABP_CarriedInteractableBase_C) == 0x000320, "Wrong size on ABP_CarriedInteractableBase_C");
static_assert(offsetof(ABP_CarriedInteractableBase_C, UberGraphFrame) == 0x0002E0, "Member 'ABP_CarriedInteractableBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, SBZOutline_1) == 0x0002E8, "Member 'ABP_CarriedInteractableBase_C::SBZOutline_1' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, SBZSensor) == 0x0002F0, "Member 'ABP_CarriedInteractableBase_C::SBZSensor' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, TextRender) == 0x0002F8, "Member 'ABP_CarriedInteractableBase_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, Cube) == 0x000300, "Member 'ABP_CarriedInteractableBase_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, SBZAIObjective) == 0x000308, "Member 'ABP_CarriedInteractableBase_C::SBZAIObjective' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, SBZOutline) == 0x000310, "Member 'ABP_CarriedInteractableBase_C::SBZOutline' has a wrong offset!");
static_assert(offsetof(ABP_CarriedInteractableBase_C, StaticMesh) == 0x000318, "Member 'ABP_CarriedInteractableBase_C::StaticMesh' has a wrong offset!");

}

