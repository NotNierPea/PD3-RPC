#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModLoaderManager

#include "Basic.hpp"

#include "UDS_ModActorStruct_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ModLoaderManager.ModLoaderManager_C.ExecuteUbergraph_ModLoaderManager
// 0x0320 (0x0320 - 0x0000)
struct ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EBlackScreenTransitionType BlackScreenTransitionType)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0048(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameEventBroker*                    CallFunc_GetGameEventBroker_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0068(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_CustomEvent_OldState;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_CustomEvent_NewState;                       // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0120(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0148(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPDA_ModMeta_C*                         K2Node_DynamicCast_AsPDA_Mod_Meta;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBlackScreenTransitionType                    K2Node_CustomEvent_BlackScreenTransitionType;      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0198(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActorSpawner_C*                    CallFunc_SpawnModMenu_Return;                      // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPDA_ModMeta_C*                         CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x01CC(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue_1;           // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FARFilter                              K2Node_MakeStruct_ARFilter;                        // 0x0218(0x00F0)()
	TArray<struct FAssetData>                     CallFunc_GetAssets_OutAssetData;                   // 0x0308(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssets_ReturnValue;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager) == 0x000008, "Wrong alignment on ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager");
static_assert(sizeof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager) == 0x000320, "Wrong size on ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, EntryPoint) == 0x000000, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetAssetRegistry_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetGameEventBroker_ReturnValue) == 0x000060, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetGameEventBroker_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Get_Item) == 0x000068, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetAsset_ReturnValue) == 0x0000E8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetPathName_ReturnValue) == 0x0000F8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Replace_ReturnValue) == 0x000108, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CustomEvent_OldState) == 0x000118, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CustomEvent_NewState) == 0x000119, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000120, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_SwitchEnum_CmpSuccess) == 0x000140, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000148, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000178, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_DynamicCast_AsPDA_Mod_Meta) == 0x000180, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_DynamicCast_AsPDA_Mod_Meta' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CustomEvent_BlackScreenTransitionType) == 0x000189, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CustomEvent_BlackScreenTransitionType' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetGameStateMachine_ReturnValue) == 0x000190, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetGameStateMachine_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000198, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_SpawnModMenu_Return) == 0x0001B0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_SpawnModMenu_Return' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_AddUnique_ReturnValue) == 0x0001C0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001C8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001CC, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Max_ReturnValue) == 0x0001E0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Length_ReturnValue_2) == 0x0001E4, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Array_Length_ReturnValue_3) == 0x0001EC, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001F0, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_MakeArray_Array) == 0x0001F8, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetAssetRegistry_ReturnValue_1) == 0x000208, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetAssetRegistry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, K2Node_MakeStruct_ARFilter) == 0x000218, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::K2Node_MakeStruct_ARFilter' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetAssets_OutAssetData) == 0x000308, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetAssets_OutAssetData' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager, CallFunc_GetAssets_ReturnValue) == 0x000318, "Member 'ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager::CallFunc_GetAssets_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.OnHeistStartEvent
// 0x0001 (0x0001 - 0x0000)
struct ModLoaderManager_C_OnHeistStartEvent final
{
public:
	EBlackScreenTransitionType                    BlackScreenTransitionType;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_OnHeistStartEvent) == 0x000001, "Wrong alignment on ModLoaderManager_C_OnHeistStartEvent");
static_assert(sizeof(ModLoaderManager_C_OnHeistStartEvent) == 0x000001, "Wrong size on ModLoaderManager_C_OnHeistStartEvent");
static_assert(offsetof(ModLoaderManager_C_OnHeistStartEvent, BlackScreenTransitionType) == 0x000000, "Member 'ModLoaderManager_C_OnHeistStartEvent::BlackScreenTransitionType' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.HeistStateChangedEvent
// 0x0002 (0x0002 - 0x0000)
struct ModLoaderManager_C_HeistStateChangedEvent final
{
public:
	EPD3HeistState                                OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_HeistStateChangedEvent) == 0x000001, "Wrong alignment on ModLoaderManager_C_HeistStateChangedEvent");
static_assert(sizeof(ModLoaderManager_C_HeistStateChangedEvent) == 0x000002, "Wrong size on ModLoaderManager_C_HeistStateChangedEvent");
static_assert(offsetof(ModLoaderManager_C_HeistStateChangedEvent, OldState) == 0x000000, "Member 'ModLoaderManager_C_HeistStateChangedEvent::OldState' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_HeistStateChangedEvent, NewState) == 0x000001, "Member 'ModLoaderManager_C_HeistStateChangedEvent::NewState' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.AddPersistentMods
// 0x0060 (0x0060 - 0x0000)
struct ModLoaderManager_C_AddPersistentMods final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ModObject_C>      K2Node_DynamicCast_AsBPI_Mod_Object;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModPersistentObjectBase_C*             K2Node_DynamicCast_AsMod_Persistent_Object_Base;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModUserWidgetBase_C*                   K2Node_DynamicCast_AsMod_User_Widget_Base;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_AddPersistentMods) == 0x000008, "Wrong alignment on ModLoaderManager_C_AddPersistentMods");
static_assert(sizeof(ModLoaderManager_C_AddPersistentMods) == 0x000060, "Wrong size on ModLoaderManager_C_AddPersistentMods");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'ModLoaderManager_C_AddPersistentMods::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ModLoaderManager_C_AddPersistentMods::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_AsBPI_Mod_Object) == 0x000028, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_AsBPI_Mod_Object' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, CallFunc_Array_AddUnique_ReturnValue) == 0x00003C, "Member 'ModLoaderManager_C_AddPersistentMods::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_AsMod_Persistent_Object_Base) == 0x000040, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_AsMod_Persistent_Object_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_AsMod_User_Widget_Base) == 0x000050, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_AsMod_User_Widget_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersistentMods, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'ModLoaderManager_C_AddPersistentMods::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.AddHeists
// 0x0170 (0x0170 - 0x0000)
struct ModLoaderManager_C_AddHeists final
{
public:
	class USBZGameStateMachineSettings*           As_SBZGame_State_Machine_Settings;                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZHeistDeveloperSettings*             As_SBZHeist_Developer_Settings;                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                Levels;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSBZHeistDataLevelPair>         Heist_Level_Pair_Array;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FSoftObjectPath                        CurrentLevelPath;                                  // 0x0030(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0060(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x0080(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x00A0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZHeistDeveloperSettings*             K2Node_DynamicCast_AsSBZHeist_Developer_Settings;  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachineSettings*           K2Node_DynamicCast_AsSBZGame_State_Machine_Settings; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPD3HeistDataAsset*                     CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZHeistDataLevelPair                 K2Node_MakeStruct_SBZHeistDataLevelPair;           // 0x0140(0x0028)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_AddHeists) == 0x000008, "Wrong alignment on ModLoaderManager_C_AddHeists");
static_assert(sizeof(ModLoaderManager_C_AddHeists) == 0x000170, "Wrong size on ModLoaderManager_C_AddHeists");
static_assert(offsetof(ModLoaderManager_C_AddHeists, As_SBZGame_State_Machine_Settings) == 0x000000, "Member 'ModLoaderManager_C_AddHeists::As_SBZGame_State_Machine_Settings' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, As_SBZHeist_Developer_Settings) == 0x000008, "Member 'ModLoaderManager_C_AddHeists::As_SBZHeist_Developer_Settings' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, Levels) == 0x000010, "Member 'ModLoaderManager_C_AddHeists::Levels' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, Heist_Level_Pair_Array) == 0x000020, "Member 'ModLoaderManager_C_AddHeists::Heist_Level_Pair_Array' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CurrentLevelPath) == 0x000030, "Member 'ModLoaderManager_C_AddHeists::CurrentLevelPath' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, Temp_int_Array_Index_Variable) == 0x000050, "Member 'ModLoaderManager_C_AddHeists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'ModLoaderManager_C_AddHeists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000060, "Member 'ModLoaderManager_C_AddHeists::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x000080, "Member 'ModLoaderManager_C_AddHeists::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x0000A0, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x0000D0, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000100, "Member 'ModLoaderManager_C_AddHeists::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000108, "Member 'ModLoaderManager_C_AddHeists::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, K2Node_DynamicCast_AsSBZHeist_Developer_Settings) == 0x000110, "Member 'ModLoaderManager_C_AddHeists::K2Node_DynamicCast_AsSBZHeist_Developer_Settings' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'ModLoaderManager_C_AddHeists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, K2Node_DynamicCast_AsSBZGame_State_Machine_Settings) == 0x000120, "Member 'ModLoaderManager_C_AddHeists::K2Node_DynamicCast_AsSBZGame_State_Machine_Settings' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'ModLoaderManager_C_AddHeists::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Array_Get_Item) == 0x000130, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, K2Node_MakeStruct_SBZHeistDataLevelPair) == 0x000140, "Member 'ModLoaderManager_C_AddHeists::K2Node_MakeStruct_SBZHeistDataLevelPair' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Array_AddUnique_ReturnValue) == 0x000168, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddHeists, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00016C, "Member 'ModLoaderManager_C_AddHeists::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.GetAllData
// 0x0040 (0x0040 - 0x0000)
struct ModLoaderManager_C_GetAllData final
{
public:
	class UPDA_ModMeta_C*                         CurrentAsset;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_ModMeta_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_GetAllData) == 0x000008, "Wrong alignment on ModLoaderManager_C_GetAllData");
static_assert(sizeof(ModLoaderManager_C_GetAllData) == 0x000040, "Wrong size on ModLoaderManager_C_GetAllData");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CurrentAsset) == 0x000000, "Member 'ModLoaderManager_C_GetAllData::CurrentAsset' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ModLoaderManager_C_GetAllData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, Temp_int_Array_Index_Variable) == 0x000028, "Member 'ModLoaderManager_C_GetAllData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_Get_Item) == 0x000030, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Array_Contains_ReturnValue_1) == 0x000038, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'ModLoaderManager_C_GetAllData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003A, "Member 'ModLoaderManager_C_GetAllData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_GetAllData, CallFunc_BooleanNAND_ReturnValue) == 0x00003B, "Member 'ModLoaderManager_C_GetAllData::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.ParseModActorStructs
// 0x0040 (0x0040 - 0x0000)
struct ModLoaderManager_C_ParseModActorStructs final
{
public:
	struct FUDS_ModActorStruct                    CurrentMAStruct;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_ModActorStruct                    CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_ParseModActorStructs) == 0x000008, "Wrong alignment on ModLoaderManager_C_ParseModActorStructs");
static_assert(sizeof(ModLoaderManager_C_ParseModActorStructs) == 0x000040, "Wrong size on ModLoaderManager_C_ParseModActorStructs");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CurrentMAStruct) == 0x000000, "Member 'ModLoaderManager_C_ParseModActorStructs::CurrentMAStruct' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ModLoaderManager_C_ParseModActorStructs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ModLoaderManager_C_ParseModActorStructs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000020, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Array_Get_Item) == 0x000028, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003D, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_ParseModActorStructs, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'ModLoaderManager_C_ParseModActorStructs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.SpawnModMenu
// 0x0020 (0x0020 - 0x0000)
struct ModLoaderManager_C_SpawnModMenu final
{
public:
	bool                                          FirstSpawnOfMenu;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActorSpawner_C*                    Return;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActorSpawner_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_SpawnModMenu) == 0x000008, "Wrong alignment on ModLoaderManager_C_SpawnModMenu");
static_assert(sizeof(ModLoaderManager_C_SpawnModMenu) == 0x000020, "Wrong size on ModLoaderManager_C_SpawnModMenu");
static_assert(offsetof(ModLoaderManager_C_SpawnModMenu, FirstSpawnOfMenu) == 0x000000, "Member 'ModLoaderManager_C_SpawnModMenu::FirstSpawnOfMenu' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_SpawnModMenu, Return) == 0x000008, "Member 'ModLoaderManager_C_SpawnModMenu::Return' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_SpawnModMenu, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ModLoaderManager_C_SpawnModMenu::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_SpawnModMenu, CallFunc_Create_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_SpawnModMenu::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.EnsureAllParsed
// 0x0028 (0x0028 - 0x0000)
struct ModLoaderManager_C_EnsureAllParsed final
{
public:
	bool                                          bMissedDataFound;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_ModMeta_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_EnsureAllParsed) == 0x000008, "Wrong alignment on ModLoaderManager_C_EnsureAllParsed");
static_assert(sizeof(ModLoaderManager_C_EnsureAllParsed) == 0x000028, "Wrong size on ModLoaderManager_C_EnsureAllParsed");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, bMissedDataFound) == 0x000000, "Member 'ModLoaderManager_C_EnsureAllParsed::bMissedDataFound' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ModLoaderManager_C_EnsureAllParsed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ModLoaderManager_C_EnsureAllParsed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_EnsureAllParsed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ModLoaderManager_C_EnsureAllParsed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, CallFunc_Array_Get_Item) == 0x000018, "Member 'ModLoaderManager_C_EnsureAllParsed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'ModLoaderManager_C_EnsureAllParsed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_EnsureAllParsed, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'ModLoaderManager_C_EnsureAllParsed::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.PrintToModLoader
// 0x0010 (0x0010 - 0x0000)
struct ModLoaderManager_C_PrintToModLoader final
{
public:
	class FString                                 Print;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_PrintToModLoader) == 0x000008, "Wrong alignment on ModLoaderManager_C_PrintToModLoader");
static_assert(sizeof(ModLoaderManager_C_PrintToModLoader) == 0x000010, "Wrong size on ModLoaderManager_C_PrintToModLoader");
static_assert(offsetof(ModLoaderManager_C_PrintToModLoader, Print) == 0x000000, "Member 'ModLoaderManager_C_PrintToModLoader::Print' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.PreInitExtensions
// 0x0068 (0x0068 - 0x0000)
struct ModLoaderManager_C_PreInitExtensions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MLExtensions_C>   K2Node_DynamicCast_AsBPI_MLExtensions;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MLExtension_Base_C*                 K2Node_DynamicCast_AsBP_MLExtension_Base;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MLExtensionWidget_Base_C*          K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_PreInitExtensions) == 0x000008, "Wrong alignment on ModLoaderManager_C_PreInitExtensions");
static_assert(sizeof(ModLoaderManager_C_PreInitExtensions) == 0x000068, "Wrong size on ModLoaderManager_C_PreInitExtensions");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ModLoaderManager_C_PreInitExtensions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ModLoaderManager_C_PreInitExtensions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_AsBPI_MLExtensions) == 0x000028, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_AsBPI_MLExtensions' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Array_AddUnique_ReturnValue) == 0x00003C, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000040, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_AsBP_MLExtension_Base) == 0x000048, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_AsBP_MLExtension_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base) == 0x000058, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'ModLoaderManager_C_PreInitExtensions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PreInitExtensions, CallFunc_IsValidClass_ReturnValue) == 0x000061, "Member 'ModLoaderManager_C_PreInitExtensions::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.InitExtensions
// 0x0058 (0x0058 - 0x0000)
struct ModLoaderManager_C_InitExtensions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MLExtensions_C>   K2Node_DynamicCast_AsBPI_MLExtensions;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MLExtension_Base_C*                 K2Node_DynamicCast_AsBP_MLExtension_Base;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MLExtensionWidget_Base_C*          K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_InitExtensions) == 0x000008, "Wrong alignment on ModLoaderManager_C_InitExtensions");
static_assert(sizeof(ModLoaderManager_C_InitExtensions) == 0x000058, "Wrong size on ModLoaderManager_C_InitExtensions");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ModLoaderManager_C_InitExtensions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ModLoaderManager_C_InitExtensions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_InitExtensions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_InitExtensions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_InitExtensions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_InitExtensions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_AsBPI_MLExtensions) == 0x000020, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_AsBPI_MLExtensions' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_AsBP_MLExtension_Base) == 0x000038, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_AsBP_MLExtension_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base) == 0x000048, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_InitExtensions, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'ModLoaderManager_C_InitExtensions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.LoadPrimaryMLSave
// 0x0040 (0x0040 - 0x0000)
struct ModLoaderManager_C_LoadPrimaryMLSave final
{
public:
	class FString                                 PrimarySaveName;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MLPrimarySave_C*                    K2Node_DynamicCast_AsBP_MLPrimary_Save;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_LoadPrimaryMLSave) == 0x000008, "Wrong alignment on ModLoaderManager_C_LoadPrimaryMLSave");
static_assert(sizeof(ModLoaderManager_C_LoadPrimaryMLSave) == 0x000040, "Wrong size on ModLoaderManager_C_LoadPrimaryMLSave");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, PrimarySaveName) == 0x000000, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::PrimarySaveName' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000028, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, K2Node_DynamicCast_AsBP_MLPrimary_Save) == 0x000030, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::K2Node_DynamicCast_AsBP_MLPrimary_Save' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadPrimaryMLSave, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ModLoaderManager_C_LoadPrimaryMLSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.CreateNewMLSave
// 0x0010 (0x0010 - 0x0000)
struct ModLoaderManager_C_CreateNewMLSave final
{
public:
	class UClass*                                 MLPrimarySaveClass;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MLPrimarySave_C*                    CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_CreateNewMLSave) == 0x000008, "Wrong alignment on ModLoaderManager_C_CreateNewMLSave");
static_assert(sizeof(ModLoaderManager_C_CreateNewMLSave) == 0x000010, "Wrong size on ModLoaderManager_C_CreateNewMLSave");
static_assert(offsetof(ModLoaderManager_C_CreateNewMLSave, MLPrimarySaveClass) == 0x000000, "Member 'ModLoaderManager_C_CreateNewMLSave::MLPrimarySaveClass' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateNewMLSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_CreateNewMLSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.LoadMLChildSaves
// 0x0088 (0x0088 - 0x0000)
struct ModLoaderManager_C_LoadMLChildSaves final
{
public:
	TArray<int32>                                 EmptySlots;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MLChildSave_C*                      K2Node_DynamicCast_AsBP_MLChild_Save;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModLoaderManager_C_LoadMLChildSaves) == 0x000008, "Wrong alignment on ModLoaderManager_C_LoadMLChildSaves");
static_assert(sizeof(ModLoaderManager_C_LoadMLChildSaves) == 0x000088, "Wrong size on ModLoaderManager_C_LoadMLChildSaves");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, EmptySlots) == 0x000000, "Member 'ModLoaderManager_C_LoadMLChildSaves::EmptySlots' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'ModLoaderManager_C_LoadMLChildSaves::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ModLoaderManager_C_LoadMLChildSaves::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'ModLoaderManager_C_LoadMLChildSaves::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_Get_Item) == 0x000020, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'ModLoaderManager_C_LoadMLChildSaves::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000060, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, K2Node_DynamicCast_AsBP_MLChild_Save) == 0x000068, "Member 'ModLoaderManager_C_LoadMLChildSaves::K2Node_DynamicCast_AsBP_MLChild_Save' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'ModLoaderManager_C_LoadMLChildSaves::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000074, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007D, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_LoadMLChildSaves, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'ModLoaderManager_C_LoadMLChildSaves::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.CreateMLChildSave
// 0x0078 (0x0078 - 0x0000)
struct ModLoaderManager_C_CreateMLChildSave final
{
public:
	class FString                                 SaveSlot;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewSaveSlot;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 ChildSaveClass;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNextAvailableSaveSlot_AvailableSlot;   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextAvailableSaveSlot_bSlotAvailable;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_MLChildSave_C*                      CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_CreateMLChildSave) == 0x000008, "Wrong alignment on ModLoaderManager_C_CreateMLChildSave");
static_assert(sizeof(ModLoaderManager_C_CreateMLChildSave) == 0x000078, "Wrong size on ModLoaderManager_C_CreateMLChildSave");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, SaveSlot) == 0x000000, "Member 'ModLoaderManager_C_CreateMLChildSave::SaveSlot' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, NewSaveSlot) == 0x000010, "Member 'ModLoaderManager_C_CreateMLChildSave::NewSaveSlot' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, ChildSaveClass) == 0x000020, "Member 'ModLoaderManager_C_CreateMLChildSave::ChildSaveClass' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_IsEmpty_ReturnValue) == 0x000028, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_GetNextAvailableSaveSlot_AvailableSlot) == 0x000030, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_GetNextAvailableSaveSlot_AvailableSlot' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_GetNextAvailableSaveSlot_bSlotAvailable) == 0x000040, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_GetNextAvailableSaveSlot_bSlotAvailable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000068, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_CreateMLChildSave, CallFunc_SaveGameToSlot_ReturnValue) == 0x000070, "Member 'ModLoaderManager_C_CreateMLChildSave::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.AddPersWidgetsToVP
// 0x0030 (0x0030 - 0x0000)
struct ModLoaderManager_C_AddPersWidgetsToVP final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_AddPersWidgetsToVP) == 0x000008, "Wrong alignment on ModLoaderManager_C_AddPersWidgetsToVP");
static_assert(sizeof(ModLoaderManager_C_AddPersWidgetsToVP) == 0x000030, "Wrong size on ModLoaderManager_C_AddPersWidgetsToVP");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, K2Node_DynamicCast_AsUser_Widget) == 0x000020, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_AddPersWidgetsToVP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ModLoaderManager_C_AddPersWidgetsToVP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.PostInitPersistent
// 0x0058 (0x0058 - 0x0000)
struct ModLoaderManager_C_PostInitPersistent final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ModObject_C>      K2Node_DynamicCast_AsBPI_Mod_Object;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModPersistentObjectBase_C*             K2Node_DynamicCast_AsMod_Persistent_Object_Base;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModUserWidgetBase_C*                   K2Node_DynamicCast_AsMod_User_Widget_Base;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_PostInitPersistent) == 0x000008, "Wrong alignment on ModLoaderManager_C_PostInitPersistent");
static_assert(sizeof(ModLoaderManager_C_PostInitPersistent) == 0x000058, "Wrong size on ModLoaderManager_C_PostInitPersistent");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ModLoaderManager_C_PostInitPersistent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ModLoaderManager_C_PostInitPersistent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_PostInitPersistent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_PostInitPersistent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_PostInitPersistent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_PostInitPersistent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_AsBPI_Mod_Object) == 0x000020, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_AsBPI_Mod_Object' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_AsMod_Persistent_Object_Base) == 0x000038, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_AsMod_Persistent_Object_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_AsMod_User_Widget_Base) == 0x000048, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_AsMod_User_Widget_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitPersistent, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'ModLoaderManager_C_PostInitPersistent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function ModLoaderManager.ModLoaderManager_C.PostInitExtensions
// 0x0058 (0x0058 - 0x0000)
struct ModLoaderManager_C_PostInitExtensions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MLExtensions_C>   K2Node_DynamicCast_AsBPI_MLExtensions;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MLExtension_Base_C*                 K2Node_DynamicCast_AsBP_MLExtension_Base;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MLExtensionWidget_Base_C*          K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModLoaderManager_C_PostInitExtensions) == 0x000008, "Wrong alignment on ModLoaderManager_C_PostInitExtensions");
static_assert(sizeof(ModLoaderManager_C_PostInitExtensions) == 0x000058, "Wrong size on ModLoaderManager_C_PostInitExtensions");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ModLoaderManager_C_PostInitExtensions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ModLoaderManager_C_PostInitExtensions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ModLoaderManager_C_PostInitExtensions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ModLoaderManager_C_PostInitExtensions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, CallFunc_Array_Get_Item) == 0x000010, "Member 'ModLoaderManager_C_PostInitExtensions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ModLoaderManager_C_PostInitExtensions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_AsBPI_MLExtensions) == 0x000020, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_AsBPI_MLExtensions' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_AsBP_MLExtension_Base) == 0x000038, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_AsBP_MLExtension_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base) == 0x000048, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_AsWBP_MLExtension_Widget_Base' has a wrong offset!");
static_assert(offsetof(ModLoaderManager_C_PostInitExtensions, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'ModLoaderManager_C_PostInitExtensions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

