#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArmorChunk_EquippedDisplay_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ArmorChunk_EquippedDisplay_Slot.WBP_ArmorChunk_EquippedDisplay_Slot_C
// 0x0048 (0x02D8 - 0x0290)
class UWBP_ArmorChunk_EquippedDisplay_Slot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ChunkType_I;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        ChunkType_T;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider_I;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        DrPercent_T;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_66;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot_I;                                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeBar_I;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bHasDivider;                                       // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotNum;                                           // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetSlotType(ESBZArmorChunkType Type);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ArmorChunk_EquippedDisplay_Slot_C">();
	}
	static class UWBP_ArmorChunk_EquippedDisplay_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ArmorChunk_EquippedDisplay_Slot_C>();
	}
};
static_assert(alignof(UWBP_ArmorChunk_EquippedDisplay_Slot_C) == 0x000008, "Wrong alignment on UWBP_ArmorChunk_EquippedDisplay_Slot_C");
static_assert(sizeof(UWBP_ArmorChunk_EquippedDisplay_Slot_C) == 0x0002D8, "Wrong size on UWBP_ArmorChunk_EquippedDisplay_Slot_C");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, UberGraphFrame) == 0x000290, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, ChunkType_I) == 0x000298, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::ChunkType_I' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, ChunkType_T) == 0x0002A0, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::ChunkType_T' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, Divider_I) == 0x0002A8, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::Divider_I' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, DrPercent_T) == 0x0002B0, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::DrPercent_T' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, Image_66) == 0x0002B8, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::Image_66' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, Slot_I) == 0x0002C0, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::Slot_I' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, TypeBar_I) == 0x0002C8, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::TypeBar_I' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, bHasDivider) == 0x0002D0, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::bHasDivider' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_Slot_C, SlotNum) == 0x0002D4, "Member 'UWBP_ArmorChunk_EquippedDisplay_Slot_C::SlotNum' has a wrong offset!");

}

