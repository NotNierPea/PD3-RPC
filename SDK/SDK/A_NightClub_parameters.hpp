#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_NightClub

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function A_NightClub.A_NightClub_C.ExecuteUbergraph_A_NightClub
// 0x0118 (0x0118 - 0x0000)
struct A_NightClub_C_ExecuteUbergraph_A_NightClub final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3; // 0x0090(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4; // 0x00B8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5; // 0x00CC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPD3HeistState                                CallFunc_HeistStateBranch_OutputPins;              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_Event_OldHeistState;                        // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_Event_CurrentHeistState;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_3;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_4;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_5;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(A_NightClub_C_ExecuteUbergraph_A_NightClub) == 0x000008, "Wrong alignment on A_NightClub_C_ExecuteUbergraph_A_NightClub");
static_assert(sizeof(A_NightClub_C_ExecuteUbergraph_A_NightClub) == 0x000118, "Wrong size on A_NightClub_C_ExecuteUbergraph_A_NightClub");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, EntryPoint) == 0x000000, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable) == 0x000008, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable) == 0x000018, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable_1) == 0x000030, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable_1) == 0x000040, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable_2) == 0x000058, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable_2) == 0x000068, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable_3) == 0x000080, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable_3) == 0x000090, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable_4) == 0x0000A8, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable_4) == 0x0000B8, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_delegate_Variable_5) == 0x0000CC, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000E0, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_bool_Has_Been_Initd_Variable) == 0x0000E1, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_HeistStateBranch_OutputPins) == 0x0000E2, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_HeistStateBranch_OutputPins' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, K2Node_Event_OldHeistState) == 0x0000E3, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::K2Node_Event_OldHeistState' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, K2Node_Event_CurrentHeistState) == 0x0000E4, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::K2Node_Event_CurrentHeistState' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, K2Node_SwitchEnum_CmpSuccess) == 0x0000E5, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_struct_Variable_5) == 0x0000E8, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue) == 0x0000F8, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue_1) == 0x0000FC, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue_2) == 0x000100, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue_3) == 0x000104, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue_4) == 0x000108, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, CallFunc_PostEvent_ReturnValue_5) == 0x000110, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::CallFunc_PostEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_ExecuteUbergraph_A_NightClub, Temp_bool_IsClosed_Variable) == 0x000114, "Member 'A_NightClub_C_ExecuteUbergraph_A_NightClub::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function A_NightClub.A_NightClub_C.HeistStateChanged
// 0x0002 (0x0002 - 0x0000)
struct A_NightClub_C_HeistStateChanged final
{
public:
	EPD3HeistState                                OldHeistState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                CurrentHeistState;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_NightClub_C_HeistStateChanged) == 0x000001, "Wrong alignment on A_NightClub_C_HeistStateChanged");
static_assert(sizeof(A_NightClub_C_HeistStateChanged) == 0x000002, "Wrong size on A_NightClub_C_HeistStateChanged");
static_assert(offsetof(A_NightClub_C_HeistStateChanged, OldHeistState) == 0x000000, "Member 'A_NightClub_C_HeistStateChanged::OldHeistState' has a wrong offset!");
static_assert(offsetof(A_NightClub_C_HeistStateChanged, CurrentHeistState) == 0x000001, "Member 'A_NightClub_C_HeistStateChanged::CurrentHeistState' has a wrong offset!");

}

