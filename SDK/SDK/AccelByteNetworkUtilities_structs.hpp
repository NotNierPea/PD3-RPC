#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AccelByteNetworkUtilities

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct AccelByteNetworkUtilities.AccelByteSignalingTurnServer
// 0x0038 (0x0038 - 0x0000)
struct FAccelByteSignalingTurnServer final
{
public:
	class FString                                 Host;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Port;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Username;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAccelByteSignalingTurnServer) == 0x000008, "Wrong alignment on FAccelByteSignalingTurnServer");
static_assert(sizeof(FAccelByteSignalingTurnServer) == 0x000038, "Wrong size on FAccelByteSignalingTurnServer");
static_assert(offsetof(FAccelByteSignalingTurnServer, Host) == 0x000000, "Member 'FAccelByteSignalingTurnServer::Host' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingTurnServer, Port) == 0x000010, "Member 'FAccelByteSignalingTurnServer::Port' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingTurnServer, Username) == 0x000018, "Member 'FAccelByteSignalingTurnServer::Username' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingTurnServer, Password) == 0x000028, "Member 'FAccelByteSignalingTurnServer::Password' has a wrong offset!");

// ScriptStruct AccelByteNetworkUtilities.AccelByteSignalingMessage
// 0x0060 (0x0060 - 0x0000)
struct FAccelByteSignalingMessage final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Channel;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Data;                                              // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAccelByteSignalingTurnServer          TurnServer;                                        // 0x0028(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAccelByteSignalingMessage) == 0x000008, "Wrong alignment on FAccelByteSignalingMessage");
static_assert(sizeof(FAccelByteSignalingMessage) == 0x000060, "Wrong size on FAccelByteSignalingMessage");
static_assert(offsetof(FAccelByteSignalingMessage, Type) == 0x000000, "Member 'FAccelByteSignalingMessage::Type' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingMessage, Channel) == 0x000010, "Member 'FAccelByteSignalingMessage::Channel' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingMessage, Data) == 0x000018, "Member 'FAccelByteSignalingMessage::Data' has a wrong offset!");
static_assert(offsetof(FAccelByteSignalingMessage, TurnServer) == 0x000028, "Member 'FAccelByteSignalingMessage::TurnServer' has a wrong offset!");

}

