#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Widget_CurrencyWidget

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.ExecuteUbergraph_WBP_Widget_CurrencyWidget
// 0x0050 (0x0050 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_Event_NewValue;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInitial_2;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0014(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue_1;             // 0x0024(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue_2;             // 0x0034(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZCurrencyCode                              K2Node_Event_InCurrencyType;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInitial_1;                         // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsAfforded;                        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsInitial;                           // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget) == 0x000050, "Wrong size on WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, EntryPoint) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_NewValue) == 0x000008, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_bIsInitial_2) == 0x000010, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_bIsInitial_2' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_IsDesignTime) == 0x000011, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, CallFunc_GetGlobalColor_ReturnValue) == 0x000014, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, CallFunc_GetGlobalColor_ReturnValue_1) == 0x000024, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::CallFunc_GetGlobalColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, CallFunc_GetGlobalColor_ReturnValue_2) == 0x000034, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::CallFunc_GetGlobalColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_InCurrencyType) == 0x000044, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_InCurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_bIsInitial_1) == 0x000045, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_bIsInitial_1' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_bInIsAfforded) == 0x000046, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_bInIsAfforded' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, K2Node_Event_bIsInitial) == 0x000047, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::K2Node_Event_bIsInitial' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'WBP_Widget_CurrencyWidget_C_ExecuteUbergraph_WBP_Widget_CurrencyWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.OnAffordedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_OnAffordedChanged final
{
public:
	bool                                          bInIsAfforded;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsInitial;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_OnAffordedChanged) == 0x000001, "Wrong alignment on WBP_Widget_CurrencyWidget_C_OnAffordedChanged");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_OnAffordedChanged) == 0x000002, "Wrong size on WBP_Widget_CurrencyWidget_C_OnAffordedChanged");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnAffordedChanged, bInIsAfforded) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_OnAffordedChanged::bInIsAfforded' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnAffordedChanged, bIsInitial) == 0x000001, "Member 'WBP_Widget_CurrencyWidget_C_OnAffordedChanged::bIsInitial' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.OnCurrencyTypeChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged final
{
public:
	ESBZCurrencyCode                              InCurrencyType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitial;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged) == 0x000001, "Wrong alignment on WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged) == 0x000002, "Wrong size on WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged, InCurrencyType) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged::InCurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged, bIsInitial) == 0x000001, "Member 'WBP_Widget_CurrencyWidget_C_OnCurrencyTypeChanged::bIsInitial' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Widget_CurrencyWidget_C_PreConstruct");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_Widget_CurrencyWidget_C_PreConstruct");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.OnCurrencyValueChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged final
{
public:
	int64                                         NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitial;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged) == 0x000010, "Wrong size on WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged, NewValue) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged, bIsInitial) == 0x000008, "Member 'WBP_Widget_CurrencyWidget_C_OnCurrencyValueChanged::bIsInitial' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.SetCurrencyText
// 0x0020 (0x0020 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_SetCurrencyText final
{
public:
	int64                                         InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0008(0x0018)()
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_SetCurrencyText) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_SetCurrencyText");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_SetCurrencyText) == 0x000020, "Wrong size on WBP_Widget_CurrencyWidget_C_SetCurrencyText");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetCurrencyText, InValue) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_SetCurrencyText::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetCurrencyText, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000008, "Member 'WBP_Widget_CurrencyWidget_C_SetCurrencyText::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.SetFontAndColor
// 0x0090 (0x0090 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_SetFontAndColor final
{
public:
	struct FSlateFontInfo                         InSlateFont;                                       // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSlateColor                            InSlateColor;                                      // 0x0060(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         FontSize;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_SetFontAndColor) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_SetFontAndColor");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_SetFontAndColor) == 0x000090, "Wrong size on WBP_Widget_CurrencyWidget_C_SetFontAndColor");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetFontAndColor, InSlateFont) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_SetFontAndColor::InSlateFont' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetFontAndColor, InSlateColor) == 0x000060, "Member 'WBP_Widget_CurrencyWidget_C_SetFontAndColor::InSlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetFontAndColor, FontSize) == 0x000088, "Member 'WBP_Widget_CurrencyWidget_C_SetFontAndColor::FontSize' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.UpdateCurrencyIcon
// 0x0014 (0x0014 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon final
{
public:
	struct FLinearColor                           IconColor;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon) == 0x000004, "Wrong alignment on WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon) == 0x000014, "Wrong size on WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon, IconColor) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon::IconColor' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'WBP_Widget_CurrencyWidget_C_UpdateCurrencyIcon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.SetForbidden
// 0x0040 (0x0040 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_SetForbidden final
{
public:
	bool                                          IsForbidden;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0004(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_SetForbidden) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_SetForbidden");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_SetForbidden) == 0x000040, "Wrong size on WBP_Widget_CurrencyWidget_C_SetForbidden");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetForbidden, IsForbidden) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_SetForbidden::IsForbidden' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetForbidden, CallFunc_GetGlobalColor_ReturnValue) == 0x000004, "Member 'WBP_Widget_CurrencyWidget_C_SetForbidden::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_SetForbidden, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_Widget_CurrencyWidget_C_SetForbidden::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_Widget_CurrencyWidget.WBP_Widget_CurrencyWidget_C.UpdateCost
// 0x0018 (0x0018 - 0x0000)
struct WBP_Widget_CurrencyWidget_C_UpdateCost final
{
public:
	ESBZCurrencyCode                              InCurrency;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         InCost;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Widget_CurrencyWidget_C_UpdateCost) == 0x000008, "Wrong alignment on WBP_Widget_CurrencyWidget_C_UpdateCost");
static_assert(sizeof(WBP_Widget_CurrencyWidget_C_UpdateCost) == 0x000018, "Wrong size on WBP_Widget_CurrencyWidget_C_UpdateCost");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_UpdateCost, InCurrency) == 0x000000, "Member 'WBP_Widget_CurrencyWidget_C_UpdateCost::InCurrency' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_UpdateCost, InCost) == 0x000008, "Member 'WBP_Widget_CurrencyWidget_C_UpdateCost::InCost' has a wrong offset!");
static_assert(offsetof(WBP_Widget_CurrencyWidget_C_UpdateCost, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_Widget_CurrencyWidget_C_UpdateCost::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

