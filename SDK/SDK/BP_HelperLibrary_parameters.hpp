#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HelperLibrary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "BPS_GlassHit_VFXData_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HelperLibrary.BP_HelperLibrary_C.GlassHit
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HelperLibrary_C_GlassHit final
{
public:
	class UStaticMeshComponent*                   HitMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VariationSetting;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Sound;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDestroyed;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ParticleCount;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParticleSize;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ParticleColor;                                     // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Instigator;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseRange;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NoiseTag;                                          // 0x0054(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_GlassHit_VFXData                  K2Node_MakeStruct_BPS_GlassHit_VFXData;            // 0x0070(0x0030)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBPS_GlassHit_VFXData>          K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HelperLibrary_C_GlassHit) == 0x000008, "Wrong alignment on BP_HelperLibrary_C_GlassHit");
static_assert(sizeof(BP_HelperLibrary_C_GlassHit) == 0x0000B0, "Wrong size on BP_HelperLibrary_C_GlassHit");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, HitMesh) == 0x000000, "Member 'BP_HelperLibrary_C_GlassHit::HitMesh' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, VariationIndex) == 0x000008, "Member 'BP_HelperLibrary_C_GlassHit::VariationIndex' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, VariationSetting) == 0x00000C, "Member 'BP_HelperLibrary_C_GlassHit::VariationSetting' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, Sound) == 0x000010, "Member 'BP_HelperLibrary_C_GlassHit::Sound' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, bDoCosmetics) == 0x000018, "Member 'BP_HelperLibrary_C_GlassHit::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, bDestroyed) == 0x000019, "Member 'BP_HelperLibrary_C_GlassHit::bDestroyed' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, ParticleCount) == 0x00001C, "Member 'BP_HelperLibrary_C_GlassHit::ParticleCount' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, ParticleSize) == 0x000020, "Member 'BP_HelperLibrary_C_GlassHit::ParticleSize' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, ParticleColor) == 0x000024, "Member 'BP_HelperLibrary_C_GlassHit::ParticleColor' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, Instigator) == 0x000038, "Member 'BP_HelperLibrary_C_GlassHit::Instigator' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, __WorldContext) == 0x000040, "Member 'BP_HelperLibrary_C_GlassHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, Owner) == 0x000048, "Member 'BP_HelperLibrary_C_GlassHit::Owner' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, NoiseRange) == 0x000050, "Member 'BP_HelperLibrary_C_GlassHit::NoiseRange' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, NoiseTag) == 0x000054, "Member 'BP_HelperLibrary_C_GlassHit::NoiseTag' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_HelperLibrary_C_GlassHit::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, K2Node_MakeStruct_BPS_GlassHit_VFXData) == 0x000070, "Member 'BP_HelperLibrary_C_GlassHit::K2Node_MakeStruct_BPS_GlassHit_VFXData' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_HelperLibrary_C_GlassHit::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_HelperLibrary.BP_HelperLibrary_C.GlassHit_MultiVFX
// 0x0118 (0x0118 - 0x0000)
struct BP_HelperLibrary_C_GlassHit_MultiVFX final
{
public:
	class UStaticMeshComponent*                   HitMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VariationSetting;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Sound;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDestroyed;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Instigator;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBPS_GlassHit_VFXData>          VFX;                                               // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseRange;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NoiseTag;                                          // 0x004C(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_GlassHit_VFXData                  CallFunc_Array_Get_Item;                           // 0x0060(0x0030)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISBZAIAttractorInterface> K2Node_DynamicCast_AsSBZAIAttractor_Interface;  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnabled_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISBZAIAttractorInterface> K2Node_DynamicCast_AsSBZAIAttractor_Interface_1; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_VFX_Prop_Dest_Surface_Glass_Loc_ParticleSystem; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x00E0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HelperLibrary_C_GlassHit_MultiVFX) == 0x000008, "Wrong alignment on BP_HelperLibrary_C_GlassHit_MultiVFX");
static_assert(sizeof(BP_HelperLibrary_C_GlassHit_MultiVFX) == 0x000118, "Wrong size on BP_HelperLibrary_C_GlassHit_MultiVFX");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, HitMesh) == 0x000000, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::HitMesh' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, VariationIndex) == 0x000008, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::VariationIndex' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, VariationSetting) == 0x00000C, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::VariationSetting' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Sound) == 0x000010, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Sound' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, bDoCosmetics) == 0x000018, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, bDestroyed) == 0x000019, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::bDestroyed' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Instigator) == 0x000020, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Instigator' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, VFX) == 0x000028, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::VFX' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, __WorldContext) == 0x000038, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Owner) == 0x000040, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Owner' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, NoiseRange) == 0x000048, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::NoiseRange' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, NoiseTag) == 0x00004C, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::NoiseTag' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_IsValid_ReturnValue_1) == 0x000095, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_HasAuthority_ReturnValue) == 0x000096, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000097, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, K2Node_DynamicCast_AsSBZAIAttractor_Interface) == 0x000098, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::K2Node_DynamicCast_AsSBZAIAttractor_Interface' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_SetEnabled_ReturnValue) == 0x0000A9, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_SetEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, K2Node_DynamicCast_AsSBZAIAttractor_Interface_1) == 0x0000B0, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::K2Node_DynamicCast_AsSBZAIAttractor_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_VFX_Prop_Dest_Surface_Glass_Loc_ParticleSystem) == 0x0000D8, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_VFX_Prop_Dest_Surface_Glass_Loc_ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Temp_delegate_Variable) == 0x0000E0, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Temp_struct_Variable) == 0x0000F8, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_IsValid_ReturnValue_3) == 0x00010C, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_Less_IntInt_ReturnValue) == 0x00010D, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_GlassHit_MultiVFX, CallFunc_PostEvent_ReturnValue) == 0x000114, "Member 'BP_HelperLibrary_C_GlassHit_MultiVFX::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_HelperLibrary.BP_HelperLibrary_C.SetMeshIfValid
// 0x0020 (0x0020 - 0x0000)
struct BP_HelperLibrary_C_SetMeshIfValid final
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            NewStaticMesh;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HelperLibrary_C_SetMeshIfValid) == 0x000008, "Wrong alignment on BP_HelperLibrary_C_SetMeshIfValid");
static_assert(sizeof(BP_HelperLibrary_C_SetMeshIfValid) == 0x000020, "Wrong size on BP_HelperLibrary_C_SetMeshIfValid");
static_assert(offsetof(BP_HelperLibrary_C_SetMeshIfValid, StaticMeshComponent) == 0x000000, "Member 'BP_HelperLibrary_C_SetMeshIfValid::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_SetMeshIfValid, NewStaticMesh) == 0x000008, "Member 'BP_HelperLibrary_C_SetMeshIfValid::NewStaticMesh' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_SetMeshIfValid, __WorldContext) == 0x000010, "Member 'BP_HelperLibrary_C_SetMeshIfValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_SetMeshIfValid, CallFunc_SetStaticMesh_ReturnValue) == 0x000018, "Member 'BP_HelperLibrary_C_SetMeshIfValid::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_SetMeshIfValid, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_HelperLibrary_C_SetMeshIfValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HelperLibrary.BP_HelperLibrary_C.Set All Players Ignore Start Penetrating
// 0x0048 (0x0048 - 0x0000)
struct BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldIgnore;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASBZPlayerCharacter*>            CallFunc_GetAllSBZPlayerCharacters_ReturnValue;    // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZPlayerCharacter*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating) == 0x000008, "Wrong alignment on BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating");
static_assert(sizeof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating) == 0x000048, "Wrong size on BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, Target) == 0x000000, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::Target' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, ShouldIgnore) == 0x000008, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::ShouldIgnore' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, __WorldContext) == 0x000010, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, CallFunc_GetAllSBZPlayerCharacters_ReturnValue) == 0x000018, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::CallFunc_GetAllSBZPlayerCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_HelperLibrary_C_Set_All_Players_Ignore_Start_Penetrating::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

