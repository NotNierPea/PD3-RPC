#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Keypad_Req_deactivated

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_Keypad_Req_deactivated.BP_Keypad_Req_deactivated_C.BP_CheckRequirement
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Keypad_Req_deactivated_C_BP_CheckRequirement final
{
public:
	const class USBZInteractorComponent*          Interactor;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZInteractReqData                    OutData;                                           // 0x0008(0x0040)(Parm, OutParm)
	bool                                          bIsSignalRequired;                                 // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIsScreenInteract;                               // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsCasing;                                         // 0x004A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsEncumbered;                                     // 0x004B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZInteractReqData                    LocalOutData;                                      // 0x0050(0x0040)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0090(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x00A8(0x0018)(ConstParm)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue_1;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Keypad_C*                           K2Node_DynamicCast_AsBP_Keypad;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement) == 0x000008, "Wrong alignment on BP_Keypad_Req_deactivated_C_BP_CheckRequirement");
static_assert(sizeof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement) == 0x0000E8, "Wrong size on BP_Keypad_Req_deactivated_C_BP_CheckRequirement");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, Interactor) == 0x000000, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, OutData) == 0x000008, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::OutData' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, bIsSignalRequired) == 0x000048, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::bIsSignalRequired' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, bInIsScreenInteract) == 0x000049, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::bInIsScreenInteract' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, bIsCasing) == 0x00004A, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::bIsCasing' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, bIsEncumbered) == 0x00004B, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::bIsEncumbered' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, ReturnValue) == 0x00004C, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, LocalOutData) == 0x000050, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::LocalOutData' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, Temp_text_Variable) == 0x000090, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, Temp_text_Variable_1) == 0x0000A8, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_GetOuterObject_ReturnValue) == 0x0000C0, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_GetOuterObject_ReturnValue_1) == 0x0000C8, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_GetOuterObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, K2Node_DynamicCast_AsBP_Keypad) == 0x0000D0, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::K2Node_DynamicCast_AsBP_Keypad' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D9, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000DA, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_Req_deactivated_C_BP_CheckRequirement, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'BP_Keypad_Req_deactivated_C_BP_CheckRequirement::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}

