#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenges_Screen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C
// 0x0078 (0x03B8 - 0x0340)
class UWBP_UI_Challenges_Screen_C final : public USBZMainMenuChallengesWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Tab_Change;                                        // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Page_motion;                                       // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Local_Navbar_C*                    FilterNavBar;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NavigationalArrowLeft_I;                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NavigationalArrowRight_I;                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MenuButton_C*                      NavLeft_B;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MenuButton_C*                      NavRight_B;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UI_Menu_ActionInputButton_C*       TutorialPopup_Button;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Local_Navbar_C*                    TypeNavBar;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PageCycler_C*                      WBP_PageCycler;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Force_Single_Filter_Status_or_None;                // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PageTimerHandle;                                   // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class USBZChallengeCategoryData*>      Category_Data;                                     // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_UI_Challenges_Screen(int32 EntryPoint);
	void OnInitialized();
	void BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature(class USBZMenuButton* Button);
	void BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature(class USBZMenuButton* Button);
	void OnTabBackwardPressed();
	void OnTabForwardPressed();
	void ParentStackLostFocus();
	void ParentStackGainFocus();
	void OnPagesChanged();
	void BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature(int32 InNavigateIndex);
	void BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_7_IncrementPageIndex__DelegateSignature();
	void BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_6_DecrementPageIndex__DelegateSignature();
	void BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature(int32 NewIndex);
	void BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature(int32 NewIndex);
	void Delegate_PreviousPage();
	void OnTabBackwardReleased();
	void Delegate_NextPage();
	void OnTabForwardReleased();
	void GetCurrentStatusFilter(EChallengeStatusEnum* NewParam);
	void UpdatePageCycler();
	void SetCategories();
	class UWidget* NavRight(EUINavigation Navigation_0);
	class UWidget* NavLeft(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Challenges_Screen_C">();
	}
	static class UWBP_UI_Challenges_Screen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Challenges_Screen_C>();
	}
};
static_assert(alignof(UWBP_UI_Challenges_Screen_C) == 0x000008, "Wrong alignment on UWBP_UI_Challenges_Screen_C");
static_assert(sizeof(UWBP_UI_Challenges_Screen_C) == 0x0003B8, "Wrong size on UWBP_UI_Challenges_Screen_C");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, UberGraphFrame) == 0x000340, "Member 'UWBP_UI_Challenges_Screen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, Tab_Change) == 0x000348, "Member 'UWBP_UI_Challenges_Screen_C::Tab_Change' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, Page_motion) == 0x000350, "Member 'UWBP_UI_Challenges_Screen_C::Page_motion' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, FilterNavBar) == 0x000358, "Member 'UWBP_UI_Challenges_Screen_C::FilterNavBar' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, NavigationalArrowLeft_I) == 0x000360, "Member 'UWBP_UI_Challenges_Screen_C::NavigationalArrowLeft_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, NavigationalArrowRight_I) == 0x000368, "Member 'UWBP_UI_Challenges_Screen_C::NavigationalArrowRight_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, NavLeft_B) == 0x000370, "Member 'UWBP_UI_Challenges_Screen_C::NavLeft_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, NavRight_B) == 0x000378, "Member 'UWBP_UI_Challenges_Screen_C::NavRight_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, TutorialPopup_Button) == 0x000380, "Member 'UWBP_UI_Challenges_Screen_C::TutorialPopup_Button' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, TypeNavBar) == 0x000388, "Member 'UWBP_UI_Challenges_Screen_C::TypeNavBar' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, WBP_PageCycler) == 0x000390, "Member 'UWBP_UI_Challenges_Screen_C::WBP_PageCycler' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, Force_Single_Filter_Status_or_None) == 0x000398, "Member 'UWBP_UI_Challenges_Screen_C::Force_Single_Filter_Status_or_None' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, PageTimerHandle) == 0x0003A0, "Member 'UWBP_UI_Challenges_Screen_C::PageTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenges_Screen_C, Category_Data) == 0x0003A8, "Member 'UWBP_UI_Challenges_Screen_C::Category_Data' has a wrong offset!");

}

