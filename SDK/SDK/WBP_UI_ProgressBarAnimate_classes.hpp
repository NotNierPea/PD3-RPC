#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ProgressBarAnimate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_ProgressBarAnimate.WBP_UI_ProgressBarAnimate_C
// 0x0078 (0x0308 - 0x0290)
class UWBP_UI_ProgressBarAnimate_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExtraProgress;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FillProgress;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingProgress;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ExtraMaterialInstance;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DiffColor;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousProgress;                                  // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewProgressPercent;                                // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BGColor;                                           // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimateBar;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LerpProgress;                                      // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAudioOnAnim;                                   // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSoundId;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_ProgressBarAnimate(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void UpdateProgress();
	void SetProgress(float InPreviousProgress, float InNewPercent);
	void UpdateColors();
	void AnimateProgress();
	void StopAnimating();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_ProgressBarAnimate_C">();
	}
	static class UWBP_UI_ProgressBarAnimate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_ProgressBarAnimate_C>();
	}
};
static_assert(alignof(UWBP_UI_ProgressBarAnimate_C) == 0x000008, "Wrong alignment on UWBP_UI_ProgressBarAnimate_C");
static_assert(sizeof(UWBP_UI_ProgressBarAnimate_C) == 0x000308, "Wrong size on UWBP_UI_ProgressBarAnimate_C");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, UberGraphFrame) == 0x000290, "Member 'UWBP_UI_ProgressBarAnimate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, Background) == 0x000298, "Member 'UWBP_UI_ProgressBarAnimate_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, ExtraProgress) == 0x0002A0, "Member 'UWBP_UI_ProgressBarAnimate_C::ExtraProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, FillProgress) == 0x0002A8, "Member 'UWBP_UI_ProgressBarAnimate_C::FillProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, RemainingProgress) == 0x0002B0, "Member 'UWBP_UI_ProgressBarAnimate_C::RemainingProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, ExtraMaterialInstance) == 0x0002B8, "Member 'UWBP_UI_ProgressBarAnimate_C::ExtraMaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, Color) == 0x0002C0, "Member 'UWBP_UI_ProgressBarAnimate_C::Color' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, DiffColor) == 0x0002D0, "Member 'UWBP_UI_ProgressBarAnimate_C::DiffColor' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, PreviousProgress) == 0x0002E0, "Member 'UWBP_UI_ProgressBarAnimate_C::PreviousProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, NewProgressPercent) == 0x0002E4, "Member 'UWBP_UI_ProgressBarAnimate_C::NewProgressPercent' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, BGColor) == 0x0002E8, "Member 'UWBP_UI_ProgressBarAnimate_C::BGColor' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, AnimateBar) == 0x0002F8, "Member 'UWBP_UI_ProgressBarAnimate_C::AnimateBar' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, LerpProgress) == 0x0002FC, "Member 'UWBP_UI_ProgressBarAnimate_C::LerpProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, PlayAudioOnAnim) == 0x000300, "Member 'UWBP_UI_ProgressBarAnimate_C::PlayAudioOnAnim' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ProgressBarAnimate_C, CurrentSoundId) == 0x000304, "Member 'UWBP_UI_ProgressBarAnimate_C::CurrentSoundId' has a wrong offset!");

}

