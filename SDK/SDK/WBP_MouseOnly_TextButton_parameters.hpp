#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MouseOnly_TextButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.ExecuteUbergraph_WBP_MouseOnly_TextButton
// 0x000C (0x000C - 0x0000)
struct WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton) == 0x000004, "Wrong alignment on WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton) == 0x00000C, "Wrong size on WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, EntryPoint) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, Temp_bool_Variable) == 0x000004, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, Temp_byte_Variable) == 0x000005, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, K2Node_Event_bInIsHovered) == 0x000008, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton, K2Node_Select_Default) == 0x000009, "Member 'WBP_MouseOnly_TextButton_C_ExecuteUbergraph_WBP_MouseOnly_TextButton::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MouseOnly_TextButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_MouseOnly_TextButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_MouseOnly_TextButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MouseOnly_TextButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MouseOnly_TextButton_C_PreConstruct");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_MouseOnly_TextButton_C_PreConstruct");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct WBP_MouseOnly_TextButton_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_SetText) == 0x000008, "Wrong alignment on WBP_MouseOnly_TextButton_C_SetText");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_SetText) == 0x000018, "Wrong size on WBP_MouseOnly_TextButton_C_SetText");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_SetText, InText) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_SetText::InText' has a wrong offset!");

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.SetFont
// 0x0060 (0x0060 - 0x0000)
struct WBP_MouseOnly_TextButton_C_SetFont final
{
public:
	struct FSlateFontInfo                         InFont;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_SetFont) == 0x000008, "Wrong alignment on WBP_MouseOnly_TextButton_C_SetFont");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_SetFont) == 0x000060, "Wrong size on WBP_MouseOnly_TextButton_C_SetFont");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_SetFont, InFont) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_SetFont::InFont' has a wrong offset!");

// Function WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C.SetColours
// 0x0048 (0x0048 - 0x0000)
struct WBP_MouseOnly_TextButton_C_SetColours final
{
public:
	struct FLinearColor                           InFontColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InBackgroundColor;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
};
static_assert(alignof(WBP_MouseOnly_TextButton_C_SetColours) == 0x000008, "Wrong alignment on WBP_MouseOnly_TextButton_C_SetColours");
static_assert(sizeof(WBP_MouseOnly_TextButton_C_SetColours) == 0x000048, "Wrong size on WBP_MouseOnly_TextButton_C_SetColours");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_SetColours, InFontColor) == 0x000000, "Member 'WBP_MouseOnly_TextButton_C_SetColours::InFontColor' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_SetColours, InBackgroundColor) == 0x000010, "Member 'WBP_MouseOnly_TextButton_C_SetColours::InBackgroundColor' has a wrong offset!");
static_assert(offsetof(WBP_MouseOnly_TextButton_C_SetColours, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_MouseOnly_TextButton_C_SetColours::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

