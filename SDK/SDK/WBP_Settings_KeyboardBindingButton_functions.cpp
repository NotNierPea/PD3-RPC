#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_KeyboardBindingButton

#include "Basic.hpp"

#include "WBP_Settings_KeyboardBindingButton_classes.hpp"
#include "WBP_Settings_KeyboardBindingButton_parameters.hpp"


namespace SDK
{

// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.ExecuteUbergraph_WBP_Settings_KeyboardBindingButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_KeyboardBindingButton_C::ExecuteUbergraph_WBP_Settings_KeyboardBindingButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "ExecuteUbergraph_WBP_Settings_KeyboardBindingButton");

	Params::WBP_Settings_KeyboardBindingButton_C_ExecuteUbergraph_WBP_Settings_KeyboardBindingButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.BndEvt__WBP_Settings_KeyboardBindingButton_SBZInputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Settings_KeyboardBindingButton_C::BndEvt__WBP_Settings_KeyboardBindingButton_SBZInputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "BndEvt__WBP_Settings_KeyboardBindingButton_SBZInputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");

	Params::WBP_Settings_KeyboardBindingButton_C_BndEvt__WBP_Settings_KeyboardBindingButton_SBZInputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.BndEvt__WBP_Settings_KeyboardBindingButton_WBP_SBZInputKeySelector_154_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Settings_KeyboardBindingButton_C::BndEvt__WBP_Settings_KeyboardBindingButton_WBP_SBZInputKeySelector_154_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "BndEvt__WBP_Settings_KeyboardBindingButton_WBP_SBZInputKeySelector_154_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");

	Params::WBP_Settings_KeyboardBindingButton_C_BndEvt__WBP_Settings_KeyboardBindingButton_WBP_SBZInputKeySelector_154_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Settings_KeyboardBindingButton_C::BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature");

	Params::WBP_Settings_KeyboardBindingButton_C_BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_PrimaryKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_SecondaryKey_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Settings_KeyboardBindingButton_C::BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_SecondaryKey_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_SecondaryKey_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");

	Params::WBP_Settings_KeyboardBindingButton_C_BndEvt__WBP_Settings_KeyboardBindingButton_InputKeySelector_SecondaryKey_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.SettingChanged
// (Event, Protected, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::SettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "SettingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.SelectionNameChanged
// (Event, Protected, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::SelectionNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "SelectionNameChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.ButtonHoveredChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsHovered                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::ButtonHoveredChanged(bool bInIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "ButtonHoveredChanged");

	Params::WBP_Settings_KeyboardBindingButton_C_ButtonHoveredChanged Parms{};

	Parms.bInIsHovered = bInIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.ButtonFocusedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInHasFocus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::ButtonFocusedChanged(bool bInHasFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "ButtonFocusedChanged");

	Params::WBP_Settings_KeyboardBindingButton_C_ButtonFocusedChanged Parms{};

	Parms.bInHasFocus = bInHasFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.ButtonDisabledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsDisabled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::ButtonDisabledChanged(bool bInIsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "ButtonDisabledChanged");

	Params::WBP_Settings_KeyboardBindingButton_C_ButtonDisabledChanged Parms{};

	Parms.bInIsDisabled = bInIsDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "PreConstruct");

	Params::WBP_Settings_KeyboardBindingButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.RefreshVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::RefreshVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "RefreshVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.OnHoverVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsHovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::OnHoverVisuals(bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "OnHoverVisuals");

	Params::WBP_Settings_KeyboardBindingButton_C_OnHoverVisuals Parms{};

	Parms.bIsHovered = bIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.OnFocusedVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFocused                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::OnFocusedVisuals(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "OnFocusedVisuals");

	Params::WBP_Settings_KeyboardBindingButton_C_OnFocusedVisuals Parms{};

	Parms.bIsFocused = bIsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.OnDisabledVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsDisabled_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Settings_KeyboardBindingButton_C::OnDisabledVisuals(bool bIsDisabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "OnDisabledVisuals");

	Params::WBP_Settings_KeyboardBindingButton_C_OnDisabledVisuals Parms{};

	Parms.bIsDisabled_0 = bIsDisabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.InitializeVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::InitializeVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "InitializeVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_KeyboardBindingButton.WBP_Settings_KeyboardBindingButton_C.UpdateSettingNameText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_KeyboardBindingButton_C::UpdateSettingNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_KeyboardBindingButton_C", "UpdateSettingNameText");

	UObject::ProcessEvent(Func, nullptr);
}

}

