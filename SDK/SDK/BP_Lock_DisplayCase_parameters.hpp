#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lock_DisplayCase

#include "Basic.hpp"

#include "Enum_LockCollisionSize_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.ExecuteUbergraph_BP_Lock_DisplayCase
// 0x0038 (0x0038 - 0x0000)
struct BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase) == 0x000008, "Wrong alignment on BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase");
static_assert(sizeof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase) == 0x000038, "Wrong size on BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase");
static_assert(offsetof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase, EntryPoint) == 0x000000, "Member 'BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase, Temp_struct_Variable) == 0x000008, "Member 'BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase, Temp_delegate_Variable) == 0x000018, "Member 'BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase, K2Node_Event_bDoCosmetics) == 0x00002C, "Member 'BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase, CallFunc_PostEvent_ReturnValue) == 0x000030, "Member 'BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.BP_OnMiniGameSuccess
// 0x0001 (0x0001 - 0x0000)
struct BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess final
{
public:
	bool                                          bDoCosmetics;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess) == 0x000001, "Wrong alignment on BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess");
static_assert(sizeof(BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess) == 0x000001, "Wrong size on BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess");
static_assert(offsetof(BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess, bDoCosmetics) == 0x000000, "Member 'BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess::bDoCosmetics' has a wrong offset!");

// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.UserConstructionScript
// 0x0158 (0x0158 - 0x0000)
struct BP_Lock_DisplayCase_C_UserConstructionScript final
{
public:
	Enum_LockCollisionSize                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_3;                            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_4;                            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_5;                            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_6;                            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LockCollisionSize                        Temp_byte_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_7;                            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_8;                            // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_9;                            // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_10;                           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_11;                           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_12;                           // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_13;                           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C8(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lock_DisplayCase_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Lock_DisplayCase_C_UserConstructionScript");
static_assert(sizeof(BP_Lock_DisplayCase_C_UserConstructionScript) == 0x000158, "Wrong size on BP_Lock_DisplayCase_C_UserConstructionScript");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable) == 0x000004, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_1) == 0x000010, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_2) == 0x00001C, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_3) == 0x000028, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_4) == 0x000034, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_5) == 0x000040, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_6) == 0x00004C, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000058, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_7) == 0x00005C, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_8) == 0x000068, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_9) == 0x000074, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_10) == 0x000080, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_11) == 0x00008C, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_12) == 0x000098, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, Temp_struct_Variable_13) == 0x0000A4, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, K2Node_Select_Default) == 0x0000B0, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, K2Node_Select_Default_1) == 0x0000BC, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Lock_DisplayCase_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C8, "Member 'BP_Lock_DisplayCase_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

