#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ServerBrowser_Screen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ExecuteUbergraph_WBP_ServerBrowser_Screen
// 0x07B0 (0x07B0 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuMouseButton*                    K2Node_ComponentBoundEvent_Button_15;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ContractorSpeak;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   K2Node_DynamicCast_AsSBZGame_User_Settings;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContractorAudioBriefingEnabled_ReturnValue; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContractorAudioBriefingEnabled_ReturnValue_1; // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_PreviousValue;                        // 0x0044(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZServerBrowserHeistCollection       K2Node_Event_ActiveHeistCollection;                // 0x0058(0x0030)(ConstParm)
	class FName                                   K2Node_CustomEvent_ActionName;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_PopStack_ReturnValue;                     // 0x00A0(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZMainMenuCameraManager*              CallFunc_GetMainMenuCameraManager_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_Event_MenuButton;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFocused;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistButton*           K2Node_Event_SelectedButton;                       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPD3HeistDataAsset*               CallFunc_GetHeistData_ReturnValue;                 // 0x00F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_NewIndex_1;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_2;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_3;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchmakingInProgress_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_4;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZOnlineMatchmakingParams            CallFunc_GetMatchMakingParameters_ReturnValue;     // 0x0130(0x0028)()
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_5;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_GetHeistLevelPath_ReturnValue;            // 0x0160(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelPathToIdx_ReturnValue;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x018C(0x0014)(ZeroConstructor, NoDestructor)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_14;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_9;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_13;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_8;           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01DC(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineTacticType                          Temp_byte_Variable;                                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAkAudioEvent*                    K2Node_Select_Default;                             // 0x01F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Play2DSound_ReturnValue;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_NewIndex;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0218(0x0014)(ZeroConstructor, NoDestructor)
	ESBZOnlineTacticType                          Temp_byte_Variable_1;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0230(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Select_Default_1;                           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineTacticType                          Temp_byte_Variable_2;                              // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_6;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_12;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_7;           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldBeJoinedThroughFriend_ReturnValue;  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetHeistSessionID_ReturnValue;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_11;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_10;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_6;           // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_9;               // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_8;               // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_5;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_7;               // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_6;               // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_4;           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_5;               // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_4;               // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_3;           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_3;               // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_2;           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_2;               // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_1;           // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x02FC(0x0014)(ZeroConstructor, NoDestructor)
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue;              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZOnlineSession*                      CallFunc_GetSBZOnline_ReturnValue;                 // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineCode                                K2Node_CustomEvent_ErrorCode;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_1;               // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USBZOnlineSession*                      CallFunc_GetSBZOnline_ReturnValue_1;               // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference;       // 0x0358(0x0030)()
	class FName                                   K2Node_CustomEvent_ClosingActionName;              // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array;                            // 0x0398(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference;      // 0x03B0(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB[0x1];                                      // 0x03DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_SelectionIndex_3;       // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SelectionIndex_2;       // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SelectionIndex_1;       // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSBZServerBrowserHeistLevel>    K2Node_ComponentBoundEvent_HeistDataFilters;       // 0x03E8(0x0010)(ReferenceParm)
	int32                                         K2Node_ComponentBoundEvent_DifficultyFilterIndex;  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_TacticFilterIndex;      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_7;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_8;        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_9;        // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_10;       // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZOnlineMatchmakingParams            CallFunc_GetMatchMakingParameters_ReturnValue_1;   // 0x0428(0x0028)()
	const class UPD3HeistDataAsset*               CallFunc_GetHeistData_ReturnValue_1;               // 0x0450(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistMapWidget*        K2Node_Event_TargetPin;                            // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZServerBrowserHeistButton*           K2Node_Event_ConnectedHeistButton;                 // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelPathToIdx_ReturnValue_1;             // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistMapWidget*        K2Node_CustomEvent_TargetPin;                      // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZServerBrowserHeistButton*           K2Node_CustomEvent_Connected_HeistButton;          // 0x0480(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABP_MapPinManager_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x04A0(0x0010)(ReferenceParm)
	class UWBP_ServerBrowser_Popup_C*             CallFunc_Create_ReturnValue;                       // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapPinManager_C*                    CallFunc_Array_Get_Item;                           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZUIPopupData                        K2Node_MakeStruct_SBZUIPopupData;                  // 0x04C8(0x0060)(ContainsInstancedReference)
	TDelegate<void(class FName ClosingActionName)> K2Node_CreateDelegate_OutputDelegate_6;           // 0x0528(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0540(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54E[0x2];                                      // 0x054E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESBZOnlineCode ErrorCode)>     K2Node_CreateDelegate_OutputDelegate_7;            // 0x055C(0x0014)(ZeroConstructor, NoDestructor)
	ESBZOnlineJoinType                            Temp_byte_Variable_3;                              // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomIndex_Output;                    // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineJoinType                            Temp_byte_Variable_4;                              // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x057C(0x0014)(ZeroConstructor, NoDestructor)
	ESBZOnlineJoinType                            Temp_byte_Variable_5;                              // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0593(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_597[0x1];                                      // 0x0597(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineJoinType                            K2Node_Select_Default_2;                           // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SelectionIndex;         // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          K2Node_Select_Default_3;                           // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_1;               // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled;             // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSBZServerBrowserHeistCollection> K2Node_Event_OutHostableHeistCollections;        // 0x05E8(0x0010)(ConstParm, ReferenceParm)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_2;               // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_6;                              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue;                // 0x0608(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start;         // 0x0610(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_3;               // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue_1;              // 0x0628(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_1;       // 0x0630(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZDifficulty                                Temp_byte_Variable_7;                              // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_4;               // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue_2;              // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_2;       // 0x0650(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue_1;            // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue_2;            // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyPlayersNumber_ReturnValue;        // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FromPlayerId)> K2Node_CreateDelegate_OutputDelegate_9;       // 0x0674(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68B[0x5];                                      // 0x068B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineTacticType                          CallFunc_GetTacticPerHeistType_ReturnValue;        // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_8;                              // 0x069B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_9;                              // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69D[0x3];                                      // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                CallFunc_GetDifficultyPerHeistType_ReturnValue;    // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                K2Node_Select_Default_5;                           // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_10;                             // 0x06A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A7[0x1];                                      // 0x06A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x06A8(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x06C0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x06D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RefreshServers_Success;                   // 0x06E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RefreshServers_Success_1;                 // 0x06E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_11;       // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          CallFunc_GetTacticPerHeistType_ReturnValue_1;      // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_11;                             // 0x06F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x06F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZDifficulty                                Temp_byte_Variable_12;                             // 0x06F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x06F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x06F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x06F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue_1;         // 0x0710(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanInteractWithMatchmakingButtons_ReturnValue; // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteractWithMatchmakingButtons_ReturnValue_1; // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723[0x5];                                      // 0x0723(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue_2;         // 0x0728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_13;                             // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x3];                                      // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                K2Node_Select_Default_6;                           // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPD3HeistDataAsset*               CallFunc_GetHeistData_ReturnValue_2;               // 0x0748(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelPathToIdx_ReturnValue_2;             // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_754[0x4];                                      // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button;                 // 0x0758(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetActuallyVisible_ReturnValue;      // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762[0x6];                                      // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_12;       // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput; // 0x0770(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite_1;               // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput_1; // 0x07A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen) == 0x0007B0, "Wrong size on WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, EntryPoint) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_Loaded_1) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_15) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_15' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameUserSettings_ReturnValue) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_ContractorSpeak) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_ContractorSpeak' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsSBZGame_User_Settings) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsSBZGame_User_Settings' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsContractorAudioBriefingEnabled_ReturnValue) == 0x000041, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsContractorAudioBriefingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsContractorAudioBriefingEnabled_ReturnValue_1) == 0x000042, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsContractorAudioBriefingEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_PreviousValue) == 0x000044, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_PreviousValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000051, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_ActiveHeistCollection) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_ActiveHeistCollection' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_ActionName) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_ActionName' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_SwitchName_CmpSuccess) == 0x000094, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetUIManager_ReturnValue) == 0x000098, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PopStack_ReturnValue) == 0x0000A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PopStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x0000AC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMainMenuCameraManager_ReturnValue) == 0x0000B8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMainMenuCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_MakeLiteralName_ReturnValue) == 0x0000C4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_MenuButton) == 0x0000D0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_MenuButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_bIsFocused) == 0x0000D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_SelectedButton) == 0x0000E0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_SelectedButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetHeistData_ReturnValue) == 0x0000F0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetHeistData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F9, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_NewIndex_1) == 0x0000FC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_NewIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue) == 0x000100, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_1) == 0x000108, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_2) == 0x000110, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_3) == 0x000118, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsMatchmakingInProgress_ReturnValue) == 0x000120, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsMatchmakingInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_4) == 0x000128, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMatchMakingParameters_ReturnValue) == 0x000130, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMatchMakingParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_5) == 0x000158, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetHeistLevelPath_ReturnValue) == 0x000160, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetHeistLevelPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_LevelPathToIdx_ReturnValue) == 0x000180, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_LevelPathToIdx_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x000184, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000188, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000189, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_1) == 0x00018C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_14) == 0x0001A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_14' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_9) == 0x0001A8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_13) == 0x0001B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_13' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_8) == 0x0001B8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_object_Variable) == 0x0001C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_Loaded) == 0x0001C8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsPaper_Sprite) == 0x0001D0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001DC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_bool_Variable) == 0x0001F0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable) == 0x0001F1, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default) == 0x0001F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Play2DSound_ReturnValue) == 0x000200, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Play2DSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_NewIndex) == 0x000204, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000208, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000210, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_3) == 0x000218, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_1) == 0x00022C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_4) == 0x000230, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_1) == 0x000244, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_bool_Variable_1) == 0x000245, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_1) == 0x000248, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000250, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_2) == 0x000251, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000252, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_2) == 0x000253, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000254, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_2) == 0x000255, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_6) == 0x000258, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_12) == 0x000260, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_12' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_7) == 0x000268, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_ShouldBeJoinedThroughFriend_ReturnValue) == 0x000269, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_ShouldBeJoinedThroughFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetHeistSessionID_ReturnValue) == 0x000270, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetHeistSessionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_11) == 0x000280, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_11' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_10) == 0x000288, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_10' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_6) == 0x000290, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_9) == 0x000298, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_8) == 0x0002A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_5) == 0x0002A8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_7) == 0x0002B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_6) == 0x0002B8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_4) == 0x0002C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_5) == 0x0002C8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_4) == 0x0002D0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_3) == 0x0002D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_3) == 0x0002E0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_2) == 0x0002E8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_int_Variable) == 0x0002EC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_2) == 0x0002F0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled_1) == 0x0002F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002FC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetPartyManager_ReturnValue) == 0x000310, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_IsDesignTime) == 0x000318, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetSBZOnline_ReturnValue) == 0x000320, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetSBZOnline_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_ErrorCode) == 0x000328, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_ErrorCode' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetUIManager_ReturnValue_1) == 0x000330, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetUIManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000338, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000340, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetSBZOnline_ReturnValue_1) == 0x000350, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetSBZOnline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_MakeStruct_SBZButtonControlReference) == 0x000358, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_MakeStruct_SBZButtonControlReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_ClosingActionName) == 0x000388, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_ClosingActionName' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_MakeArray_Array) == 0x000398, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_int_Variable_1) == 0x0003A8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_MakeStruct_SBZButtonControlsReference) == 0x0003B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_MakeStruct_SBZButtonControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_bool_Variable_2) == 0x0003D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsVisible_ReturnValue) == 0x0003D9, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsVisible_ReturnValue_1) == 0x0003DA, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_SelectionIndex_3) == 0x0003DC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_SelectionIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_SelectionIndex_2) == 0x0003E0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_SelectionIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_SelectionIndex_1) == 0x0003E4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_SelectionIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_HeistDataFilters) == 0x0003E8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_HeistDataFilters' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_DifficultyFilterIndex) == 0x0003F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_DifficultyFilterIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_TacticFilterIndex) == 0x0003FC, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_TacticFilterIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_7) == 0x000400, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000408, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_8) == 0x000410, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_9) == 0x000418, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_10) == 0x000420, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMatchMakingParameters_ReturnValue_1) == 0x000428, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMatchMakingParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetHeistData_ReturnValue_1) == 0x000450, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetHeistData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000458, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_TargetPin) == 0x000460, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_TargetPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_ConnectedHeistButton) == 0x000468, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_ConnectedHeistButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_LevelPathToIdx_ReturnValue_1) == 0x000470, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_LevelPathToIdx_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_TargetPin) == 0x000478, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_TargetPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_Connected_HeistButton) == 0x000480, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_Connected_HeistButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CustomEvent_Index) == 0x000488, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00048C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Conv_TextToString_ReturnValue) == 0x000490, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetAllActorsOfClass_OutActors) == 0x0004A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Create_ReturnValue) == 0x0004B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Array_Get_Item) == 0x0004B8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_3) == 0x0004C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_MakeStruct_SBZUIPopupData) == 0x0004C8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_MakeStruct_SBZUIPopupData' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_6) == 0x000528, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_4) == 0x00053C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Map_Find_Value) == 0x000540, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Map_Find_ReturnValue) == 0x00054C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_5) == 0x00054D, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Array_Get_Item_1) == 0x000550, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_7) == 0x00055C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_3) == 0x000570, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetRandomIndex_Output) == 0x000574, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetRandomIndex_Output' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_4) == 0x000578, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_8) == 0x00057C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_5) == 0x000590, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000591, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_3) == 0x000592, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_2) == 0x000593, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_4) == 0x000594, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_3) == 0x000595, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_5) == 0x000596, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000598, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_int_Variable_2) == 0x0005A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_2) == 0x0005A4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimation_ReturnValue) == 0x0005A8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimation_ReturnValue_1) == 0x0005B0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimation_ReturnValue_2) == 0x0005B8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_SelectionIndex) == 0x0005C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_SelectionIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_3) == 0x0005C4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button_1) == 0x0005C8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_bIsEnabled) == 0x0005D0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_bIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimationForward_ReturnValue) == 0x0005D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0005E0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Event_OutHostableHeistCollections) == 0x0005E8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Event_OutHostableHeistCollections' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetUIManager_ReturnValue_2) == 0x0005F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetUIManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_6) == 0x000600, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMenuWidget_ReturnValue) == 0x000608, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start) == 0x000610, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess_2) == 0x000618, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetUIManager_ReturnValue_3) == 0x000620, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetUIManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMenuWidget_ReturnValue_1) == 0x000628, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMenuWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_1) == 0x000630, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess_3) == 0x000638, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_7) == 0x000639, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_4) == 0x00063C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetUIManager_ReturnValue_4) == 0x000640, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetUIManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetMenuWidget_ReturnValue_2) == 0x000648, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetMenuWidget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_2) == 0x000650, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess_4) == 0x000658, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetPartyManager_ReturnValue_1) == 0x000660, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetPartyManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetPartyManager_ReturnValue_2) == 0x000668, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetPartyManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetPartyPlayersNumber_ReturnValue) == 0x000670, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetPartyPlayersNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_9) == 0x000674, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000688, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_4) == 0x000689, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_5) == 0x00068A, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000690, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_6) == 0x000698, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_7) == 0x000699, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetTacticPerHeistType_ReturnValue) == 0x00069A, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetTacticPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_8) == 0x00069B, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_9) == 0x00069C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_int_Variable_3) == 0x0006A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetDifficultyPerHeistType_ReturnValue) == 0x0006A4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetDifficultyPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_5) == 0x0006A5, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_10) == 0x0006A6, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Array_Get_Item_2) == 0x0006A8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_CreateDelegate_OutputDelegate_10) == 0x0006C0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0006D8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0006E0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_8) == 0x0006E1, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_RefreshServers_Success) == 0x0006E2, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_RefreshServers_Success' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_RefreshServers_Success_1) == 0x0006E3, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_RefreshServers_Success_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x0006E4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_11) == 0x0006E8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetTacticPerHeistType_ReturnValue_1) == 0x0006F0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetTacticPerHeistType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetVisibility_ReturnValue) == 0x0006F1, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_11) == 0x0006F2, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0006F3, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanOR_ReturnValue_1) == 0x0006F4, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_12) == 0x0006F5, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetVisibility_ReturnValue_1) == 0x0006F6, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0006F7, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetCurrentLanguage_ReturnValue) == 0x0006F8, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanOR_ReturnValue_2) == 0x000708, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_NotEqual_StriStri_ReturnValue) == 0x000709, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetCurrentLanguage_ReturnValue_1) == 0x000710, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetCurrentLanguage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_CanInteractWithMatchmakingButtons_ReturnValue) == 0x000720, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_CanInteractWithMatchmakingButtons_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_CanInteractWithMatchmakingButtons_ReturnValue_1) == 0x000721, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_CanInteractWithMatchmakingButtons_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_Not_PreBool_ReturnValue_9) == 0x000722, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetCurrentLanguage_ReturnValue_2) == 0x000728, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetCurrentLanguage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_byte_Variable_13) == 0x000738, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_int_Variable_4) == 0x00073C, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_Select_Default_6) == 0x000740, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetHeistData_ReturnValue_2) == 0x000748, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetHeistData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_LevelPathToIdx_ReturnValue_2) == 0x000750, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_LevelPathToIdx_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_ComponentBoundEvent_Button) == 0x000758, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsWidgetActuallyVisible_ReturnValue) == 0x000760, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsWidgetActuallyVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_BooleanAND_ReturnValue_6) == 0x000761, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_GetGameStateMachine_ReturnValue_12) == 0x000768, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_GetGameStateMachine_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput) == 0x000770, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValid_ReturnValue_6) == 0x000780, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000781, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, Temp_object_Variable_1) == 0x000788, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_AsPaper_Sprite_1) == 0x000790, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_AsPaper_Sprite_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, K2Node_DynamicCast_bSuccess_5) == 0x000798, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput_1) == 0x0007A0, "Member 'WBP_ServerBrowser_Screen_C_ExecuteUbergraph_WBP_ServerBrowser_Screen::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_NeedDcl_Button_K2Node_ComponentBoundEvent_12_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BP_OnHostableHeistDataUpdated
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated final
{
public:
	TArray<struct FSBZServerBrowserHeistCollection> OutHostableHeistCollections;                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated, OutHostableHeistCollections) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BP_OnHostableHeistDataUpdated::OutHostableHeistCollections' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature final
{
public:
	int32                                         SelectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature, SelectionIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_TacticSelector_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature::SelectionIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ManualPlaceMapPins
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ManualPlaceMapPins final
{
public:
	class USBZServerBrowserHeistMapWidget*        TargetPin;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZServerBrowserHeistButton*           Connected_HeistButton;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ManualPlaceMapPins) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_ManualPlaceMapPins");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ManualPlaceMapPins) == 0x000018, "Wrong size on WBP_ServerBrowser_Screen_C_ManualPlaceMapPins");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ManualPlaceMapPins, TargetPin) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ManualPlaceMapPins::TargetPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ManualPlaceMapPins, Connected_HeistButton) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_ManualPlaceMapPins::Connected_HeistButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ManualPlaceMapPins, Index_0) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_ManualPlaceMapPins::Index_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.PlaceMapPin
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_PlaceMapPin final
{
public:
	class USBZServerBrowserHeistMapWidget*        TargetPin;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZServerBrowserHeistButton*           ConnectedHeistButton;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_PlaceMapPin) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_PlaceMapPin");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_PlaceMapPin) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_PlaceMapPin");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_PlaceMapPin, TargetPin) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_PlaceMapPin::TargetPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_PlaceMapPin, ConnectedHeistButton) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_PlaceMapPin::ConnectedHeistButton' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature final
{
public:
	TArray<struct FSBZServerBrowserHeistLevel>    HeistDataFilters;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         DifficultyFilterIndex;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TacticFilterIndex;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature) == 0x000018, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature, HeistDataFilters) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature::HeistDataFilters' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature, DifficultyFilterIndex) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature::DifficultyFilterIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature, TacticFilterIndex) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_FilterBox_K2Node_ComponentBoundEvent_16_SendFiltersToApply__DelegateSignature::TacticFilterIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature final
{
public:
	int32                                         SelectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature, SelectionIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature::SelectionIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature final
{
public:
	int32                                         SelectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature, SelectionIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionSelector_K2Node_ComponentBoundEvent_14_OptionSelected__DelegateSignature::SelectionIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature final
{
public:
	int32                                         SelectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature, SelectionIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultySelector_K2Node_ComponentBoundEvent_13_OptionSelected__DelegateSignature::SelectionIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnMatchmakingPopUpClosed
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed final
{
public:
	class FName                                   ClosingActionName;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed, ClosingActionName) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnMatchmakingPopUpClosed::ClosingActionName' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnMatchmakingStopped
// 0x0001 (0x0001 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnMatchmakingStopped final
{
public:
	ESBZOnlineCode                                ErrorCode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnMatchmakingStopped) == 0x000001, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnMatchmakingStopped");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnMatchmakingStopped) == 0x000001, "Wrong size on WBP_ServerBrowser_Screen_C_OnMatchmakingStopped");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnMatchmakingStopped, ErrorCode) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnMatchmakingStopped::ErrorCode' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ServerBrowser_Screen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ServerBrowser_Screen_C_PreConstruct");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_PreConstruct) == 0x000001, "Wrong size on WBP_ServerBrowser_Screen_C_PreConstruct");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PopUpDifficulty_K2Node_ComponentBoundEvent_8_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_PermissionFilter_K2Node_ComponentBoundEvent_10_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_DifficultyFilter_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_27_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_CancelMm_Button_K2Node_ComponentBoundEvent_26_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_24_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_JoinHeist_Button_K2Node_ComponentBoundEvent_21_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_19_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Heist_Button_K2Node_ComponentBoundEvent_18_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_7_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_HeistDetails_Button_K2Node_ComponentBoundEvent_6_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature, NewIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Navbar_HeistTypes_K2Node_ComponentBoundEvent_20_OnIndexChanged__DelegateSignature::NewIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature, NewIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_WBP_Local_Navbar_K2Node_ComponentBoundEvent_0_OnIndexChanged__DelegateSignature::NewIndex' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnHeistButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnHeistButtonSelected final
{
public:
	class USBZServerBrowserHeistButton*           SelectedButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnHeistButtonSelected) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnHeistButtonSelected");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnHeistButtonSelected) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_OnHeistButtonSelected");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnHeistButtonSelected, SelectedButton) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnHeistButtonSelected::SelectedButton' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnHeistButtonFocused
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnHeistButtonFocused final
{
public:
	class USBZMenuButton*                         MenuButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFocused;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnHeistButtonFocused) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnHeistButtonFocused");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnHeistButtonFocused) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_OnHeistButtonFocused");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnHeistButtonFocused, MenuButton) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnHeistButtonFocused::MenuButton' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnHeistButtonFocused, bIsFocused) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_OnHeistButtonFocused::bIsFocused' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnControlsReferenceClicked
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked, ActionName) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnControlsReferenceClicked::ActionName' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnHeistCollectionChanged
// 0x0030 (0x0030 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged final
{
public:
	struct FSBZServerBrowserHeistCollection       ActiveHeistCollection;                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged) == 0x000030, "Wrong size on WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged, ActiveHeistCollection) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnHeistCollectionChanged::ActiveHeistCollection' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnGainedStackFocused
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnGainedStackFocused final
{
public:
	class FName                                   PreviousValue;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnGainedStackFocused) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnGainedStackFocused");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnGainedStackFocused) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_OnGainedStackFocused");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnGainedStackFocused, PreviousValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnGainedStackFocused::PreviousValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SetSpeak
// 0x0001 (0x0001 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SetSpeak final
{
public:
	bool                                          ContractorSpeak;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SetSpeak) == 0x000001, "Wrong alignment on WBP_ServerBrowser_Screen_C_SetSpeak");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SetSpeak) == 0x000001, "Wrong size on WBP_ServerBrowser_Screen_C_SetSpeak");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSpeak, ContractorSpeak) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SetSpeak::ContractorSpeak' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature final
{
public:
	class USBZMenuMouseButton*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BndEvt__WBP_ServerBrowser_Screen_Button_ContractorSoundContainer_K2Node_ComponentBoundEvent_21_OnMenuMouseButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA, Loaded) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnLoaded_9A4672FA4EFD9FA6EFBA1DAC3B9AF7BA::Loaded' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnLoaded_CFD0D7B04B17F532FED779AC3A58815E
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E, Loaded) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnLoaded_CFD0D7B04B17F532FED779AC3A58815E::Loaded' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.UpdateMenuControlsReference
// 0x02A8 (0x02A8 - 0x0000)
struct WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference final
{
public:
	class FText                                   FiltersHeistsText;                                 // 0x0000(0x0018)(Edit, BlueprintVisible)
	TArray<struct FSBZButtonControlReference>     ControlReferences;                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameUserSettings*                   K2Node_DynamicCast_AsSBZGame_User_Settings;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContractorAudioBriefingEnabled_ReturnValue; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference;      // 0x0060(0x0028)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName ActionName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0014)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable_1;                              // 0x00A0(0x0018)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference;       // 0x00B8(0x0030)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_1;     // 0x00E8(0x0030)()
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_2;     // 0x0130(0x0030)()
	class FText                                   K2Node_Select_Default;                             // 0x0160(0x0018)()
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference_1;    // 0x0178(0x0028)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_3;     // 0x01A0(0x0030)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_4;     // 0x01D8(0x0030)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_5;     // 0x0208(0x0030)()
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array_1;                          // 0x0238(0x0010)(ReferenceParm)
	class USBZSelectorWidget*                     K2Node_DynamicCast_AsSBZSelector_Widget;           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName ActionName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0254(0x0014)(ZeroConstructor, NoDestructor)
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_6;     // 0x0268(0x0030)()
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array_2;                          // 0x0298(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference) == 0x0002A8, "Wrong size on WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, FiltersHeistsText) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::FiltersHeistsText' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, ControlReferences) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::ControlReferences' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, Temp_text_Variable) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_GetVisibility_ReturnValue) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_GetGameUserSettings_ReturnValue) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_DynamicCast_AsSBZGame_User_Settings) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_DynamicCast_AsSBZGame_User_Settings' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_IsContractorAudioBriefingEnabled_ReturnValue) == 0x000059, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_IsContractorAudioBriefingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00005C, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlsReference) == 0x000060, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, Temp_text_Variable_1) == 0x0000A0, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference) == 0x0000B8, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_1) == 0x0000E8, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeArray_Array) == 0x000118, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_IsVisible_ReturnValue) == 0x000128, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_IsVisible_ReturnValue_1) == 0x000129, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_HasFocusedDescendants_ReturnValue) == 0x00012A, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, Temp_bool_Variable) == 0x00012B, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_2) == 0x000130, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_Select_Default) == 0x000160, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlsReference_1) == 0x000178, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlsReference_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_3) == 0x0001A0, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, CallFunc_Array_Add_ReturnValue_1) == 0x0001D4, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_4) == 0x0001D8, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_5) == 0x000208, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeArray_Array_1) == 0x000238, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_DynamicCast_AsSBZSelector_Widget) == 0x000248, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_DynamicCast_AsSBZSelector_Widget' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_DynamicCast_bSuccess_1) == 0x000250, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_CreateDelegate_OutputDelegate_1) == 0x000254, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeStruct_SBZButtonControlReference_6) == 0x000268, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeStruct_SBZButtonControlReference_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference, K2Node_MakeArray_Array_2) == 0x000298, "Member 'WBP_ServerBrowser_Screen_C_UpdateMenuControlsReference::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.HandleButtonFocusChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsButtonEnabled;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged, IsButtonEnabled) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged::IsButtonEnabled' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_ServerBrowser_Screen_C_HandleButtonFocusChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.Set Heist Button Focus
// 0x0058 (0x0058 - 0x0000)
struct WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USBZServerBrowserHeistButton*           K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMainMenuCrimeNetHeistButton*        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistButton*           K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus) == 0x000058, "Wrong size on WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button_1) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::K2Node_DynamicCast_AsSBZServer_Browser_Heist_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_Array_Contains_ReturnValue) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WBP_ServerBrowser_Screen_C_Set_Heist_Button_Focus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SetFocusOnFirstVisibleHeistButton
// 0x0048 (0x0048 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton final
{
public:
	int32                                         VisibleChildIndex;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton) == 0x000048, "Wrong size on WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, VisibleChildIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::VisibleChildIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_GetVisibility_ReturnValue) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_ServerBrowser_Screen_C_SetFocusOnFirstVisibleHeistButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.Toggle Heists Left Panel
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel final
{
public:
	bool                                          DisplayHeistDetails;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineTacticType                          CallFunc_GetTacticPerHeistType_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                CallFunc_GetDifficultyPerHeistType_ReturnValue;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZOnlineMatchmakingParams            CallFunc_GetMatchMakingParameters_ReturnValue;     // 0x0038(0x0028)()
	bool                                          CallFunc_CanInteractWithMatchmakingButtons_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameUserSettings*                   K2Node_DynamicCast_AsSBZGame_User_Settings;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContractorAudioBriefingEnabled_ReturnValue; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Play2DSound_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchmakingInProgress_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel) == 0x0000A8, "Wrong size on WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, DisplayHeistDetails) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::DisplayHeistDetails' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetTacticPerHeistType_ReturnValue) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetTacticPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetDifficultyPerHeistType_ReturnValue) == 0x000002, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetDifficultyPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetUIManager_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetMenuWidget_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetGameStateMachine_ReturnValue) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetGameStateMachine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetMatchMakingParameters_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetMatchMakingParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_CanInteractWithMatchmakingButtons_ReturnValue) == 0x000060, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_CanInteractWithMatchmakingButtons_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetGameUserSettings_ReturnValue) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_DynamicCast_AsSBZGame_User_Settings) == 0x000070, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_DynamicCast_AsSBZGame_User_Settings' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_IsContractorAudioBriefingEnabled_ReturnValue) == 0x000079, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_IsContractorAudioBriefingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_BooleanOR_ReturnValue) == 0x00007A, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_Play2DSound_ReturnValue) == 0x00007C, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_Play2DSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, Temp_int_Variable) == 0x000080, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, Temp_int_Variable_1) == 0x000084, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, Temp_bool_Variable) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_Select_Default) == 0x00008C, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_BooleanOR_ReturnValue_1) == 0x000091, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_IsVisible_ReturnValue) == 0x000092, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_GetGameStateMachine_ReturnValue_1) == 0x000098, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_GetGameStateMachine_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_IsMatchmakingInProgress_ReturnValue) == 0x0000A0, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_IsMatchmakingInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'WBP_ServerBrowser_Screen_C_Toggle_Heists_Left_Panel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.UpdateHeistInspectPanel
// 0x0198 (0x0198 - 0x0000)
struct WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel final
{
public:
	ESBZDifficulty                                Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Tactic;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineJoinType                            Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_3;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistType                                 Temp_byte_Variable_4;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistPlaystyle                            Temp_byte_Variable_7;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Temp_byte_Variable_10;                             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineJoinType                            CallFunc_GetLobbyTypePerHeistType_ReturnValue;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	bool                                          CallFunc_DoesCollectionContainsStoryModeContent_ReturnValue; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Temp_byte_Variable_11;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Temp_byte_Variable_12;                             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZHeistPlaystyle                            Temp_byte_Variable_13;                             // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEstimatedPayout_OutMin;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEstimatedPayout_OutMax;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0140(0x0018)()
	ESBZOnlineTacticType                          K2Node_Select_Default_5;                           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0160(0x0018)()
	int32                                         K2Node_Select_Default_6;                           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_7;                           // 0x0180(0x0018)()
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel) == 0x000198, "Wrong size on WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Difficulty) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Difficulty' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Tactic) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Tactic' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_1) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_bool_Variable) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable) == 0x000011, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_2) == 0x000013, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_3) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_4) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_5) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_3) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_6) == 0x000024, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_7) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_8) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_int_Variable_9) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_4) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_5) == 0x000035, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_6) == 0x000036, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_7) == 0x000037, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_text_Variable) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_text_Variable_1) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_text_Variable_2) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_bool_Variable_1) == 0x000080, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_8) == 0x000081, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_9) == 0x000082, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_10) == 0x000083, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000085, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Not_PreBool_ReturnValue) == 0x000086, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_BooleanOR_ReturnValue) == 0x000087, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_GetLobbyTypePerHeistType_ReturnValue) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_GetLobbyTypePerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default) == 0x00008C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Conv_IntToText_ReturnValue) == 0x000090, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_MakeArray_Array) == 0x000100, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Format_ReturnValue) == 0x000110, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_DoesCollectionContainsStoryModeContent_ReturnValue) == 0x000128, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_DoesCollectionContainsStoryModeContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_1) == 0x000129, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_2) == 0x00012C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_11) == 0x000130, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_BooleanOR_ReturnValue_1) == 0x000131, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_3) == 0x000132, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_4) == 0x000133, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_12) == 0x000134, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_IsValid_ReturnValue) == 0x000135, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_IsValid_ReturnValue_1) == 0x000136, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, Temp_byte_Variable_13) == 0x000137, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_GetEstimatedPayout_OutMin) == 0x000138, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_GetEstimatedPayout_OutMin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_GetEstimatedPayout_OutMax) == 0x00013C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_GetEstimatedPayout_OutMax' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000140, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_5) == 0x000158, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000160, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_6) == 0x000178, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, CallFunc_IsValid_ReturnValue_2) == 0x00017C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel, K2Node_Select_Default_7) == 0x000180, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistInspectPanel::K2Node_Select_Default_7' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ToggleStoryMode
// 0x0002 (0x0002 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ToggleStoryMode final
{
public:
	bool                                          CallFunc_IsHeistListVisible_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleStoryModeFilter_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ToggleStoryMode) == 0x000001, "Wrong alignment on WBP_ServerBrowser_Screen_C_ToggleStoryMode");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ToggleStoryMode) == 0x000002, "Wrong size on WBP_ServerBrowser_Screen_C_ToggleStoryMode");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleStoryMode, CallFunc_IsHeistListVisible_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ToggleStoryMode::CallFunc_IsHeistListVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleStoryMode, CallFunc_ToggleStoryModeFilter_ReturnValue) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_ToggleStoryMode::CallFunc_ToggleStoryModeFilter_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.InitializeSecurityCompanies
// 0x0098 (0x0098 - 0x0000)
struct WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies final
{
public:
	class UVerticalBox*                           SecurityCompaniesContainer;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseTitleOnly;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ServerBrowser_SecurityCompanyDisplay_C* K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ServerBrowser_SecurityCompanyDisplay_C* CallFunc_Create_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies) == 0x000098, "Wrong size on WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, SecurityCompaniesContainer) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::SecurityCompaniesContainer' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, bUseTitleOnly) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::bUseTitleOnly' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, Temp_int_Variable) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, Temp_int_Variable_1) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_GetValidValue_ReturnValue) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001D, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000024, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, K2Node_MakeStruct_Margin) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_GetChildrenCount_ReturnValue) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_AddChild_ReturnValue) == 0x000070, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000080, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_MakeLiteralInt_ReturnValue) == 0x00008C, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_ServerBrowser_Screen_C_InitializeSecurityCompanies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.UpdateSecurityCompaniesForDifficulty
// 0x0180 (0x0180 - 0x0000)
struct WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty final
{
public:
	class UVerticalBox*                           SecurityCompaniesContainer;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                NoMods;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                InDifficulty;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Array;                                             // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          IsActive;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ServerBrowser_SecurityCompanyDisplay_C* K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSecurityCompanyName_ReturnValue;       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameRecordsManager*                 CallFunc_Get_ReturnValue;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSBZDifficultyConfiguration>    CallFunc_GetDifficultyConfiguration_ReturnValue;   // 0x00D8(0x0010)(ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZDifficultyConfiguration            CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_Select_Default_2;                           // 0x0158(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPD3HeistDataAsset*                     CallFunc_GetHeistDataFromLevelShortName_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty) == 0x000180, "Wrong size on WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, SecurityCompaniesContainer) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::SecurityCompaniesContainer' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, NoMods) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::NoMods' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, InDifficulty) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::InDifficulty' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Array) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Array' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, IsActive) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_byte_Variable) == 0x000029, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_byte_Variable_2) == 0x00002B, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Not_PreBool_ReturnValue_1) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_bool_Variable) == 0x000051, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display) == 0x000080, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::K2Node_DynamicCast_AsWBP_Server_Browser_Security_Company_Display' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_GetSecurityCompanyName_ReturnValue) == 0x000090, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_GetSecurityCompanyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, K2Node_Select_Default) == 0x0000B0, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B1, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_byte_Variable_3) == 0x0000B8, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_byte_Variable_4) == 0x0000B9, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_int_Loop_Counter_Variable_2) == 0x0000BC, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, Temp_bool_Variable_1) == 0x0000C9, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Get_ReturnValue) == 0x0000D0, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_GetDifficultyConfiguration_ReturnValue) == 0x0000D8, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_GetDifficultyConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, K2Node_Select_Default_1) == 0x0000E8, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Array_Length_ReturnValue_3) == 0x000150, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, K2Node_Select_Default_2) == 0x000158, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_Less_IntInt_ReturnValue_2) == 0x000168, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_BooleanAND_ReturnValue_1) == 0x000169, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_IsEmpty_ReturnValue) == 0x00016A, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_GetHeistDataFromLevelShortName_ReturnValue) == 0x000170, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_GetHeistDataFromLevelShortName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000178, "Member 'WBP_ServerBrowser_Screen_C_UpdateSecurityCompaniesForDifficulty::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.GetSecurityCompanyName
// 0x0070 (0x0070 - 0x0000)
struct WBP_ServerBrowser_Screen_C_GetSecurityCompanyName final
{
public:
	class USBZSecurityCompanyVisualsWidget*       Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         ColonIndex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EnumName;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESBZSecurityCompany                           CallFunc_GetSecurityCompanyEnum_ReturnValue;       // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_GetSecurityCompanyName");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName) == 0x000070, "Wrong size on WBP_ServerBrowser_Screen_C_GetSecurityCompanyName");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, Widget) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::Widget' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, ColonIndex) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::ColonIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, EnumName) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::EnumName' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_GetSecurityCompanyEnum_ReturnValue) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_GetSecurityCompanyEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_FindSubstring_ReturnValue) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_GetEnumeratorName_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetSecurityCompanyName, CallFunc_RightChop_ReturnValue) == 0x000060, "Member 'WBP_ServerBrowser_Screen_C_GetSecurityCompanyName::CallFunc_RightChop_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.UpdateHeistDetailsPopup
// 0x0128 (0x0128 - 0x0000)
struct WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup final
{
public:
	ESBZDifficulty                                Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZUIData*                       CallFunc_GetUIData_ReturnValue;                    // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDifficultyText_OutDifficultyText;      // 0x0028(0x0018)()
	bool                                          CallFunc_GetDifficultyText_bHasText;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEstimatedPayout_OutMin;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEstimatedPayout_OutMax;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0068(0x0018)()
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0080(0x0018)()
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0098(0x0018)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x00B0(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x00D0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value_1;                         // 0x00F0(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0110(0x0018)()
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup) == 0x000128, "Wrong size on WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Difficulty) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Difficulty' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_byte_Variable) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_int_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_int_Variable_1) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_int_Variable_3) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_bool_Variable) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, Temp_bool_Variable_1) == 0x000015, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetUIManager_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetUIData_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetDifficultyText_OutDifficultyText) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetDifficultyText_OutDifficultyText' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetDifficultyText_bHasText) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetDifficultyText_bHasText' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetEstimatedPayout_OutMin) == 0x000044, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetEstimatedPayout_OutMin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetEstimatedPayout_OutMax) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetEstimatedPayout_OutMax' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetEmptyText_ReturnValue) == 0x000080, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_GetEmptyText_ReturnValue_1) == 0x000098, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, K2Node_Select_Default) == 0x0000CC, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, K2Node_Select_Default_1) == 0x0000D0, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Map_Find_Value_1) == 0x0000F0, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_Map_Find_ReturnValue_1) == 0x000108, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup, K2Node_Select_Default_2) == 0x000110, "Member 'WBP_ServerBrowser_Screen_C_UpdateHeistDetailsPopup::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ToggleHeistDetailsPopup
// 0x0038 (0x0038 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup final
{
public:
	bool                                          bShowPopup;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          CallFunc_GetTacticPerHeistType_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameUserSettings*                   K2Node_DynamicCast_AsSBZGame_User_Settings;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContractorAudioBriefingEnabled_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Play2DSound_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup) == 0x000038, "Wrong size on WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, bShowPopup) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::bShowPopup' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_bool_Variable) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_int_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_byte_Variable) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_byte_Variable_2) == 0x00000A, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, Temp_byte_Variable_3) == 0x00000B, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, CallFunc_GetTacticPerHeistType_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::CallFunc_GetTacticPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, K2Node_Select_Default) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, K2Node_Select_Default_1) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, CallFunc_GetGameUserSettings_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, K2Node_DynamicCast_AsSBZGame_User_Settings) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::K2Node_DynamicCast_AsSBZGame_User_Settings' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, CallFunc_IsContractorAudioBriefingEnabled_ReturnValue) == 0x000031, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::CallFunc_IsContractorAudioBriefingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup, CallFunc_Play2DSound_ReturnValue) == 0x000034, "Member 'WBP_ServerBrowser_Screen_C_ToggleHeistDetailsPopup::CallFunc_Play2DSound_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SecondaryInteraction
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SecondaryInteraction final
{
public:
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SecondaryInteraction) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_SecondaryInteraction");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SecondaryInteraction) == 0x000008, "Wrong size on WBP_ServerBrowser_Screen_C_SecondaryInteraction");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SecondaryInteraction, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SecondaryInteraction::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SecondaryInteraction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_SecondaryInteraction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.TertiaryInteraction
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_TertiaryInteraction final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_TertiaryInteraction) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_TertiaryInteraction");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_TertiaryInteraction) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_TertiaryInteraction");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_IsVisible_ReturnValue_1) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00000A, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_TertiaryInteraction, CallFunc_IsVisible_ReturnValue_2) == 0x00000B, "Member 'WBP_ServerBrowser_Screen_C_TertiaryInteraction::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SwitchRegions
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SwitchRegions final
{
public:
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchmakingInProgress_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SwitchRegions) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_SwitchRegions");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SwitchRegions) == 0x000020, "Wrong size on WBP_ServerBrowser_Screen_C_SwitchRegions");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_GetGameStateMachine_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_GetGameStateMachine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_IsMatchmakingInProgress_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_IsMatchmakingInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_IsVisible_ReturnValue_1) == 0x000011, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_IsVisible_ReturnValue_2) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SwitchRegions, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_ServerBrowser_Screen_C_SwitchRegions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.DoesCollectionContainsStoryModeContent
// 0x0058 (0x0058 - 0x0000)
struct WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZHeistCollection>            CallFunc_GetHeistCollections_ReturnValue;          // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZHeistCollection                    CallFunc_Array_Get_Item;                           // 0x0020(0x0030)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent) == 0x000058, "Wrong size on WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_GetHeistCollections_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_GetHeistCollections_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000019, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent, CallFunc_BooleanAND_ReturnValue_1) == 0x000051, "Member 'WBP_ServerBrowser_Screen_C_DoesCollectionContainsStoryModeContent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.GetDifficultyPerHeistType
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType final
{
public:
	ESBZDifficulty                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistType                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                CallFunc_GetMatchmakingDifficulty_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType) == 0x000018, "Wrong size on WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType, Temp_byte_Variable) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType, CallFunc_GetMatchmakingDifficulty_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType::CallFunc_GetMatchmakingDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType, K2Node_Select_Default) == 0x000011, "Member 'WBP_ServerBrowser_Screen_C_GetDifficultyPerHeistType::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.GetTacticPerHeistType
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerBrowser_Screen_C_GetTacticPerHeistType final
{
public:
	ESBZOnlineTacticType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistPlaystyle                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistType                                 Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UPD3HeistDataAsset*               CallFunc_GetHeistData_ReturnValue;                 // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          CallFunc_GetTacticType_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineTacticType                          K2Node_Select_Default_1;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_GetTacticPerHeistType");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType) == 0x000020, "Wrong size on WBP_ServerBrowser_Screen_C_GetTacticPerHeistType");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, Temp_byte_Variable) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, CallFunc_GetHeistData_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::CallFunc_GetHeistData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, CallFunc_GetTacticType_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::CallFunc_GetTacticType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, K2Node_Select_Default) == 0x000019, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetTacticPerHeistType, K2Node_Select_Default_1) == 0x00001A, "Member 'WBP_ServerBrowser_Screen_C_GetTacticPerHeistType::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.GetLobbyTypePerHeistType
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType final
{
public:
	ESBZOnlineJoinType                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHeistType                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineJoinType                            CallFunc_GetLobbyType_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineJoinType                            K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType) == 0x000018, "Wrong size on WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType, Temp_byte_Variable) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType, CallFunc_GetLobbyType_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType::CallFunc_GetLobbyType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType, K2Node_Select_Default) == 0x000011, "Member 'WBP_ServerBrowser_Screen_C_GetLobbyTypePerHeistType::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.IsHeistListVisible
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_IsHeistListVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_IsHeistListVisible) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_IsHeistListVisible");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_IsHeistListVisible) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_IsHeistListVisible");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_IsVisible_ReturnValue) == 0x00000A, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_IsVisible_ReturnValue_1) == 0x00000B, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_IsHeistListVisible, CallFunc_BooleanAND_ReturnValue_2) == 0x00000F, "Member 'WBP_ServerBrowser_Screen_C_IsHeistListVisible::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.HandleHeistModeChanged
// 0x0098 (0x0098 - 0x0000)
struct WBP_ServerBrowser_Screen_C_HandleHeistModeChanged final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSBZServerBrowserHeistCollection       CallFunc_Array_Get_Item;                           // 0x0058(0x0030)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_HandleHeistModeChanged");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged) == 0x000098, "Wrong size on WBP_ServerBrowser_Screen_C_HandleHeistModeChanged");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_int_Variable) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_bool_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_int_Variable_1) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, K2Node_Select_Default) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleHeistModeChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_ServerBrowser_Screen_C_HandleHeistModeChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.Reset Widgets State on Heist Mode Change
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change final
{
public:
	int32                                         HeistModeIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change) == 0x000020, "Wrong size on WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, HeistModeIndex) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::HeistModeIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_bool_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_int_Variable) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_int_Variable_1) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_byte_Variable) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, Temp_byte_Variable_1) == 0x000015, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, K2Node_Select_Default) == 0x00001D, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change, K2Node_Select_Default_1) == 0x00001E, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Heist_Mode_Change::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.Reset Widgets State on Collection Change
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_Reset_Widgets_State_on_Collection_Change::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.HandleButtonActionKeys
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_HandleButtonActionKeys final
{
public:
	class UWBP_ServerBrowser_InspectButton_C*     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_HandleButtonActionKeys) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_HandleButtonActionKeys");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_HandleButtonActionKeys) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_HandleButtonActionKeys");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleButtonActionKeys, Button) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_HandleButtonActionKeys::Button' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_HandleButtonActionKeys, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_HandleButtonActionKeys::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.LoopHeistScrollBox
// 0x0030 (0x0030 - 0x0000)
struct WBP_ServerBrowser_Screen_C_LoopHeistScrollBox final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_LoopHeistScrollBox");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox) == 0x000030, "Wrong size on WBP_ServerBrowser_Screen_C_LoopHeistScrollBox");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, Navigation_0) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, CallFunc_GetChildrenCount_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_LoopHeistScrollBox, CallFunc_GetChildAt_ReturnValue_1) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_LoopHeistScrollBox::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ShowFilterBox
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ShowFilterBox final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ShowFilterBox) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_ShowFilterBox");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ShowFilterBox) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_ShowFilterBox");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ShowFilterBox, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ShowFilterBox::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ShowFilterBox, CallFunc_GetVisibility_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_ShowFilterBox::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ShowFilterBox, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_ServerBrowser_Screen_C_ShowFilterBox::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ShowFilterBox, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WBP_ServerBrowser_Screen_C_ShowFilterBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SetSoloModeOptions
// 0x0078 (0x0078 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SetSoloModeOptions final
{
public:
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FromPlayerId)> K2Node_CreateDelegate_OutputDelegate;         // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_SetSoloModeOptions");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions) == 0x000078, "Wrong size on WBP_ServerBrowser_Screen_C_SetSoloModeOptions");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, CallFunc_GetUIManager_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, CallFunc_GetPartyManager_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, CallFunc_GetMenuWidget_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::CallFunc_GetMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, Temp_text_Variable) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, Temp_text_Variable_1) == 0x000058, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SetSoloModeOptions, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'WBP_ServerBrowser_Screen_C_SetSoloModeOptions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.GetRandomIndex
// 0x0024 (0x0024 - 0x0000)
struct WBP_ServerBrowser_Screen_C_GetRandomIndex final
{
public:
	int32                                         Output;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalSavedIndex;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_GetRandomIndex) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_GetRandomIndex");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_GetRandomIndex) == 0x000024, "Wrong size on WBP_ServerBrowser_Screen_C_GetRandomIndex");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, Output) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::Output' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, LocalSavedIndex) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::LocalSavedIndex' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_GetRandomIndex, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_GetRandomIndex::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.InitialPinPlacement
// 0x0048 (0x0048 - 0x0000)
struct WBP_ServerBrowser_Screen_C_InitialPinPlacement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USBZServerBrowserHeistMapWidget*> CallFunc_Map_Keys_Keys;                           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistMapWidget*        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZServerBrowserHeistButton*           CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_InitialPinPlacement) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_InitialPinPlacement");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_InitialPinPlacement) == 0x000048, "Wrong size on WBP_ServerBrowser_Screen_C_InitialPinPlacement");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Map_Find_Value) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_InitialPinPlacement, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_InitialPinPlacement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.AddPinToCanvas
// 0x0050 (0x0050 - 0x0000)
struct WBP_ServerBrowser_Screen_C_AddPinToCanvas final
{
public:
	class USBZServerBrowserHeistMapWidget*        InMapPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPositionToConvert;                            // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_AddPinToCanvas) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_AddPinToCanvas");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_AddPinToCanvas) == 0x000050, "Wrong size on WBP_ServerBrowser_Screen_C_AddPinToCanvas");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, InMapPin) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::InMapPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, WorldPositionToConvert) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::WorldPositionToConvert' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00002C, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000040, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_AddPinToCanvas, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ServerBrowser_Screen_C_AddPinToCanvas::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ResetAvailablePinIndices
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices) == 0x000018, "Wrong size on WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, Temp_int_Variable) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, CallFunc_Array_LastIndex_ReturnValue) == 0x00000C, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_ResetAvailablePinIndices::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.SoloModeInPartyPopup
// 0x0118 (0x0118 - 0x0000)
struct WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup final
{
public:
	class UWBP_ServerBrowser_Popup_C*             CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName ClosingActionName)> K2Node_CreateDelegate_OutputDelegate;             // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference;       // 0x0038(0x0030)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference;      // 0x0088(0x0028)()
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZUIPopupData                        K2Node_MakeStruct_SBZUIPopupData;                  // 0x00B8(0x0060)(ContainsInstancedReference)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup) == 0x000118, "Wrong size on WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, K2Node_MakeStruct_SBZButtonControlReference) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::K2Node_MakeStruct_SBZButtonControlReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, K2Node_MakeStruct_SBZButtonControlsReference) == 0x000088, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::K2Node_MakeStruct_SBZButtonControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, CallFunc_GetUIManager_ReturnValue) == 0x0000B0, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup, K2Node_MakeStruct_SBZUIPopupData) == 0x0000B8, "Member 'WBP_ServerBrowser_Screen_C_SoloModeInPartyPopup::K2Node_MakeStruct_SBZUIPopupData' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnSoloInPartyPopupClosed
// 0x000C (0x000C - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed final
{
public:
	class FName                                   ClosingActionName;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed) == 0x000004, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed) == 0x00000C, "Wrong size on WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed, ClosingActionName) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnSoloInPartyPopupClosed::ClosingActionName' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.OnInviteRecieved
// 0x0010 (0x0010 - 0x0000)
struct WBP_ServerBrowser_Screen_C_OnInviteRecieved final
{
public:
	class FString                                 FromPlayerId;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_OnInviteRecieved) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_OnInviteRecieved");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_OnInviteRecieved) == 0x000010, "Wrong size on WBP_ServerBrowser_Screen_C_OnInviteRecieved");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_OnInviteRecieved, FromPlayerId) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_OnInviteRecieved::FromPlayerId' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.RefreshServers
// 0x0028 (0x0028 - 0x0000)
struct WBP_ServerBrowser_Screen_C_RefreshServers final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineTacticType                          CallFunc_GetTacticPerHeistType_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                CallFunc_GetDifficultyPerHeistType_ReturnValue;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISBZServersListInterpreter> CallFunc_CanRequestNewUpdate_self_CastInput;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRequestNewUpdate_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_RefreshServers) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_RefreshServers");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_RefreshServers) == 0x000028, "Wrong size on WBP_ServerBrowser_Screen_C_RefreshServers");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, Success) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::Success' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_GetTacticPerHeistType_ReturnValue) == 0x000001, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_GetTacticPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_GetDifficultyPerHeistType_ReturnValue) == 0x000002, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_GetDifficultyPerHeistType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_CanRequestNewUpdate_self_CastInput) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_CanRequestNewUpdate_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_CanRequestNewUpdate_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_CanRequestNewUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_RefreshServers, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_ServerBrowser_Screen_C_RefreshServers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.ServerRefreshTimeout
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerBrowser_Screen_C_ServerRefreshTimeout final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_ServerRefreshTimeout) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_ServerRefreshTimeout");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_ServerRefreshTimeout) == 0x000020, "Wrong size on WBP_ServerBrowser_Screen_C_ServerRefreshTimeout");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ServerRefreshTimeout, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_ServerRefreshTimeout::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_ServerRefreshTimeout, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_ServerRefreshTimeout::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.CanInteractWithMatchmakingButtons
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPartyHost_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPartyPlayersNumber_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons) == 0x000020, "Wrong size on WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, CallFunc_GetPartyManager_ReturnValue) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, CallFunc_IsPartyHost_ReturnValue) == 0x000010, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::CallFunc_IsPartyHost_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, CallFunc_GetPartyPlayersNumber_ReturnValue) == 0x000014, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::CallFunc_GetPartyPlayersNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'WBP_ServerBrowser_Screen_C_CanInteractWithMatchmakingButtons::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_ServerBrowser_Screen.WBP_ServerBrowser_Screen_C.BindSoloModeReentry
// 0x0040 (0x0040 - 0x0000)
struct WBP_ServerBrowser_Screen_C_BindSoloModeReentry final
{
public:
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FromPlayerId)> K2Node_CreateDelegate_OutputDelegate;         // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZPartyManager*                       CallFunc_GetPartyManager_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_SM_GameStart_C*                 K2Node_DynamicCast_AsWBP_UI_SM_Game_Start;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry) == 0x000008, "Wrong alignment on WBP_ServerBrowser_Screen_C_BindSoloModeReentry");
static_assert(sizeof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry) == 0x000040, "Wrong size on WBP_ServerBrowser_Screen_C_BindSoloModeReentry");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, CallFunc_GetUIManager_ReturnValue) == 0x000000, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, CallFunc_GetMenuWidget_ReturnValue) == 0x000020, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::CallFunc_GetMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, CallFunc_GetPartyManager_ReturnValue) == 0x000028, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, K2Node_DynamicCast_AsWBP_UI_SM_Game_Start) == 0x000030, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::K2Node_DynamicCast_AsWBP_UI_SM_Game_Start' has a wrong offset!");
static_assert(offsetof(WBP_ServerBrowser_Screen_C_BindSoloModeReentry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_ServerBrowser_Screen_C_BindSoloModeReentry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

