#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimeSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TimeType_structs.hpp"
#include "Engine_structs.hpp"
#include "WeatherType_structs.hpp"
#include "SkyMaterials_structs.hpp"


namespace SDK
{

// UserDefinedStruct TimeSettings.TimeSettings
// 0x05B0 (0x05B0 - 0x0000)
struct FTimeSettings final
{
public:
	ETimeType                                     TimeType_33_544CF60F4E4C6FCB377EA78EF20971DB;      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeatherType>                          IncompatibleWeatherTypes_30_679AB00B4700250C60E147B3E4014BBB; // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          OverrideSky_15_45EA64D64E12255FC485D3B9D0D6A68D;   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DirectionalLightColor_26_DF891A664F9311E08BCA5A8F83CA38E5; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionalLightIntensityAddition_54_3B80998B40E92B2B719986A01B007F9A; // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 SkylightColor_29_CDD246FD4259993274C30AB588C3F08E; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeleteAtmosphericFog_48_695726F24D8250EEF3A326B097FF74CD; // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkyMaterials                                 SkyboxType_20_3AF2BACE409537FDE278F29D7ADEB68B;    // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 FogColor_45_798055E04D8B163D98D6ABAF25F85310;      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeleteSunMoon_23_FDB1E5AF488DAA0A8B841FB245DFF8A1; // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddToFogDensity_51_8D13E1B741E4F75BEDC4A5BAFF770F07; // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverridePostProcessingVolume_66_325357594174B8EE2E9F93909063D395; // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   Settings_76_171CB52349D07A7B465CAB82F8B342FF;      // 0x0040(0x0570)(Edit, BlueprintVisible)
};
static_assert(alignof(FTimeSettings) == 0x000010, "Wrong alignment on FTimeSettings");
static_assert(sizeof(FTimeSettings) == 0x0005B0, "Wrong size on FTimeSettings");
static_assert(offsetof(FTimeSettings, TimeType_33_544CF60F4E4C6FCB377EA78EF20971DB) == 0x000000, "Member 'FTimeSettings::TimeType_33_544CF60F4E4C6FCB377EA78EF20971DB' has a wrong offset!");
static_assert(offsetof(FTimeSettings, IncompatibleWeatherTypes_30_679AB00B4700250C60E147B3E4014BBB) == 0x000008, "Member 'FTimeSettings::IncompatibleWeatherTypes_30_679AB00B4700250C60E147B3E4014BBB' has a wrong offset!");
static_assert(offsetof(FTimeSettings, OverrideSky_15_45EA64D64E12255FC485D3B9D0D6A68D) == 0x000018, "Member 'FTimeSettings::OverrideSky_15_45EA64D64E12255FC485D3B9D0D6A68D' has a wrong offset!");
static_assert(offsetof(FTimeSettings, DirectionalLightColor_26_DF891A664F9311E08BCA5A8F83CA38E5) == 0x00001C, "Member 'FTimeSettings::DirectionalLightColor_26_DF891A664F9311E08BCA5A8F83CA38E5' has a wrong offset!");
static_assert(offsetof(FTimeSettings, DirectionalLightIntensityAddition_54_3B80998B40E92B2B719986A01B007F9A) == 0x000020, "Member 'FTimeSettings::DirectionalLightIntensityAddition_54_3B80998B40E92B2B719986A01B007F9A' has a wrong offset!");
static_assert(offsetof(FTimeSettings, SkylightColor_29_CDD246FD4259993274C30AB588C3F08E) == 0x000024, "Member 'FTimeSettings::SkylightColor_29_CDD246FD4259993274C30AB588C3F08E' has a wrong offset!");
static_assert(offsetof(FTimeSettings, DeleteAtmosphericFog_48_695726F24D8250EEF3A326B097FF74CD) == 0x000028, "Member 'FTimeSettings::DeleteAtmosphericFog_48_695726F24D8250EEF3A326B097FF74CD' has a wrong offset!");
static_assert(offsetof(FTimeSettings, SkyboxType_20_3AF2BACE409537FDE278F29D7ADEB68B) == 0x000029, "Member 'FTimeSettings::SkyboxType_20_3AF2BACE409537FDE278F29D7ADEB68B' has a wrong offset!");
static_assert(offsetof(FTimeSettings, FogColor_45_798055E04D8B163D98D6ABAF25F85310) == 0x00002C, "Member 'FTimeSettings::FogColor_45_798055E04D8B163D98D6ABAF25F85310' has a wrong offset!");
static_assert(offsetof(FTimeSettings, DeleteSunMoon_23_FDB1E5AF488DAA0A8B841FB245DFF8A1) == 0x000030, "Member 'FTimeSettings::DeleteSunMoon_23_FDB1E5AF488DAA0A8B841FB245DFF8A1' has a wrong offset!");
static_assert(offsetof(FTimeSettings, AddToFogDensity_51_8D13E1B741E4F75BEDC4A5BAFF770F07) == 0x000034, "Member 'FTimeSettings::AddToFogDensity_51_8D13E1B741E4F75BEDC4A5BAFF770F07' has a wrong offset!");
static_assert(offsetof(FTimeSettings, OverridePostProcessingVolume_66_325357594174B8EE2E9F93909063D395) == 0x000038, "Member 'FTimeSettings::OverridePostProcessingVolume_66_325357594174B8EE2E9F93909063D395' has a wrong offset!");
static_assert(offsetof(FTimeSettings, Settings_76_171CB52349D07A7B465CAB82F8B342FF) == 0x000040, "Member 'FTimeSettings::Settings_76_171CB52349D07A7B465CAB82F8B342FF' has a wrong offset!");

}

