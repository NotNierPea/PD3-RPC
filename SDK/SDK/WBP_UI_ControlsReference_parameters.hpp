#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ControlsReference

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_ControlsReference.WBP_UI_ControlsReference_C.ExecuteUbergraph_WBP_UI_ControlsReference
// 0x0048 (0x0048 - 0x0000)
struct WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZControlsReference                  K2Node_Event_InControlsReference;                  // 0x0008(0x0028)(ConstParm)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference) == 0x000008, "Wrong alignment on WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference");
static_assert(sizeof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference) == 0x000048, "Wrong size on WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference");
static_assert(offsetof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference, EntryPoint) == 0x000000, "Member 'WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference, K2Node_Event_InControlsReference) == 0x000008, "Member 'WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference::K2Node_Event_InControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference, CallFunc_GetVisibility_ReturnValue) == 0x000030, "Member 'WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'WBP_UI_ControlsReference_C_ExecuteUbergraph_WBP_UI_ControlsReference::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_UI_ControlsReference.WBP_UI_ControlsReference_C.DisplayControlsReference
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_ControlsReference_C_DisplayControlsReference final
{
public:
	struct FSBZControlsReference                  InControlsReference;                               // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_UI_ControlsReference_C_DisplayControlsReference) == 0x000008, "Wrong alignment on WBP_UI_ControlsReference_C_DisplayControlsReference");
static_assert(sizeof(WBP_UI_ControlsReference_C_DisplayControlsReference) == 0x000028, "Wrong size on WBP_UI_ControlsReference_C_DisplayControlsReference");
static_assert(offsetof(WBP_UI_ControlsReference_C_DisplayControlsReference, InControlsReference) == 0x000000, "Member 'WBP_UI_ControlsReference_C_DisplayControlsReference::InControlsReference' has a wrong offset!");

}

