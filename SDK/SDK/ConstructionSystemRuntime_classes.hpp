#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConstructionSystemRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "ConstructionSystemRuntime_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ConstructionSystemRuntime.ConstructionSystemSaveSystem
// 0x0000 (0x0030 - 0x0030)
class UConstructionSystemSaveSystem final : public UBlueprintFunctionLibrary
{
public:
	static void HandleConstructionSystemLevelLoad(const class UObject* WorldContextObject);
	static void LoadConstructionSystemLevel(const class UObject* WorldContextObject, const class FName& LevelName, bool bAbsolute, const class FString& SaveSlotName, int32 UserIndex);
	static void SaveConstructionSystemLevel(const class UObject* WorldContextObject, const class FString& SaveSlotName, int32 UserIndex, bool bSavePlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemSaveSystem">();
	}
	static class UConstructionSystemSaveSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemSaveSystem>();
	}
};
static_assert(alignof(UConstructionSystemSaveSystem) == 0x000008, "Wrong alignment on UConstructionSystemSaveSystem");
static_assert(sizeof(UConstructionSystemSaveSystem) == 0x000030, "Wrong size on UConstructionSystemSaveSystem");

// Class ConstructionSystemRuntime.ConstructionSystemTool
// 0x0008 (0x0038 - 0x0030)
class UConstructionSystemTool : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemTool">();
	}
	static class UConstructionSystemTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemTool>();
	}
};
static_assert(alignof(UConstructionSystemTool) == 0x000008, "Wrong alignment on UConstructionSystemTool");
static_assert(sizeof(UConstructionSystemTool) == 0x000038, "Wrong size on UConstructionSystemTool");

// Class ConstructionSystemRuntime.ConstructionSystemBuildTool
// 0x0150 (0x0188 - 0x0038)
class UConstructionSystemBuildTool final : public UConstructionSystemTool
{
public:
	float                                         TraceDistance;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CursorRotationStepAngle;                           // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConstructionSystemCursor*              Cursor;                                            // 0x0040(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrefabricatorAssetInterface*           ActivePrefabAsset;                                 // 0x0048(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x138];                                     // 0x0050(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleInput_ConstructAtCursor();
	void HandleInput_CursorMoveNext();
	void HandleInput_CursorMovePrev();
	void HandleInput_RotateCursorStep(float NumSteps);
	void SetActivePrefab(class UPrefabricatorAssetInterface* InActivePrefabAsset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemBuildTool">();
	}
	static class UConstructionSystemBuildTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemBuildTool>();
	}
};
static_assert(alignof(UConstructionSystemBuildTool) == 0x000008, "Wrong alignment on UConstructionSystemBuildTool");
static_assert(sizeof(UConstructionSystemBuildTool) == 0x000188, "Wrong size on UConstructionSystemBuildTool");
static_assert(offsetof(UConstructionSystemBuildTool, TraceDistance) == 0x000038, "Member 'UConstructionSystemBuildTool::TraceDistance' has a wrong offset!");
static_assert(offsetof(UConstructionSystemBuildTool, CursorRotationStepAngle) == 0x00003C, "Member 'UConstructionSystemBuildTool::CursorRotationStepAngle' has a wrong offset!");
static_assert(offsetof(UConstructionSystemBuildTool, Cursor) == 0x000040, "Member 'UConstructionSystemBuildTool::Cursor' has a wrong offset!");
static_assert(offsetof(UConstructionSystemBuildTool, ActivePrefabAsset) == 0x000048, "Member 'UConstructionSystemBuildTool::ActivePrefabAsset' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemComponent
// 0x00A0 (0x0160 - 0x00C0)
class UConstructionSystemComponent final : public UActorComponent
{
public:
	class UMaterialInterface*                     CursorMaterial;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     CursorInvalidMaterial;                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceStartDistance;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceSweepRadius;                                  // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ConstructionCameraActor;                           // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConstructionCameraTransitionTime;                  // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConstructionCameraTransitionExp;                   // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                BuildMenuUI;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConstructionSystemUIAsset*             BuildMenuData;                                     // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            BuildMenuUIInstance;                               // 0x00F8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EConstructionSystemToolType                   ActiveToolType;                                    // 0x0100(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EConstructionSystemToolType, class UConstructionSystemTool*> Tools;                         // 0x0108(0x0050)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableConstructionSystem();
	void EnableConstructionSystem(EConstructionSystemToolType InToolType);
	class UConstructionSystemTool* GetActiveTool();
	class UConstructionSystemTool* GetTool(EConstructionSystemToolType InToolType);
	void HideBuildMenu();
	void SetActiveTool(EConstructionSystemToolType InToolType);
	void ShowBuildMenu();
	void ToggleConstructionSystem();

	EConstructionSystemToolType GetActiveToolType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemComponent">();
	}
	static class UConstructionSystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemComponent>();
	}
};
static_assert(alignof(UConstructionSystemComponent) == 0x000008, "Wrong alignment on UConstructionSystemComponent");
static_assert(sizeof(UConstructionSystemComponent) == 0x000160, "Wrong size on UConstructionSystemComponent");
static_assert(offsetof(UConstructionSystemComponent, CursorMaterial) == 0x0000C0, "Member 'UConstructionSystemComponent::CursorMaterial' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, CursorInvalidMaterial) == 0x0000C8, "Member 'UConstructionSystemComponent::CursorInvalidMaterial' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, TraceStartDistance) == 0x0000D0, "Member 'UConstructionSystemComponent::TraceStartDistance' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, TraceSweepRadius) == 0x0000D4, "Member 'UConstructionSystemComponent::TraceSweepRadius' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, ConstructionCameraActor) == 0x0000D8, "Member 'UConstructionSystemComponent::ConstructionCameraActor' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, ConstructionCameraTransitionTime) == 0x0000E0, "Member 'UConstructionSystemComponent::ConstructionCameraTransitionTime' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, ConstructionCameraTransitionExp) == 0x0000E4, "Member 'UConstructionSystemComponent::ConstructionCameraTransitionExp' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, BuildMenuUI) == 0x0000E8, "Member 'UConstructionSystemComponent::BuildMenuUI' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, BuildMenuData) == 0x0000F0, "Member 'UConstructionSystemComponent::BuildMenuData' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, BuildMenuUIInstance) == 0x0000F8, "Member 'UConstructionSystemComponent::BuildMenuUIInstance' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, ActiveToolType) == 0x000100, "Member 'UConstructionSystemComponent::ActiveToolType' has a wrong offset!");
static_assert(offsetof(UConstructionSystemComponent, Tools) == 0x000108, "Member 'UConstructionSystemComponent::Tools' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemItemUserData
// 0x0008 (0x0038 - 0x0030)
class UConstructionSystemItemUserData final : public UAssetUserData
{
public:
	int32                                         Seed;                                              // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemItemUserData">();
	}
	static class UConstructionSystemItemUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemItemUserData>();
	}
};
static_assert(alignof(UConstructionSystemItemUserData) == 0x000008, "Wrong alignment on UConstructionSystemItemUserData");
static_assert(sizeof(UConstructionSystemItemUserData) == 0x000038, "Wrong size on UConstructionSystemItemUserData");
static_assert(offsetof(UConstructionSystemItemUserData, Seed) == 0x000030, "Member 'UConstructionSystemItemUserData::Seed' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemCursor
// 0x0038 (0x0068 - 0x0030)
class UConstructionSystemCursor final : public UObject
{
public:
	class APrefabActor*                           CursorGhostActor;                                  // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CursorSeed;                                        // 0x0038(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CursorMaterial;                                    // 0x0040(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                     CursorInvalidMaterial;                             // 0x0048(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPrefabricatorConstructionSnapComponent*> SnapComponents;                           // 0x0050(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                         ActiveSnapComponentIndex;                          // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemCursor">();
	}
	static class UConstructionSystemCursor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemCursor>();
	}
};
static_assert(alignof(UConstructionSystemCursor) == 0x000008, "Wrong alignment on UConstructionSystemCursor");
static_assert(sizeof(UConstructionSystemCursor) == 0x000068, "Wrong size on UConstructionSystemCursor");
static_assert(offsetof(UConstructionSystemCursor, CursorGhostActor) == 0x000030, "Member 'UConstructionSystemCursor::CursorGhostActor' has a wrong offset!");
static_assert(offsetof(UConstructionSystemCursor, CursorSeed) == 0x000038, "Member 'UConstructionSystemCursor::CursorSeed' has a wrong offset!");
static_assert(offsetof(UConstructionSystemCursor, CursorMaterial) == 0x000040, "Member 'UConstructionSystemCursor::CursorMaterial' has a wrong offset!");
static_assert(offsetof(UConstructionSystemCursor, CursorInvalidMaterial) == 0x000048, "Member 'UConstructionSystemCursor::CursorInvalidMaterial' has a wrong offset!");
static_assert(offsetof(UConstructionSystemCursor, SnapComponents) == 0x000050, "Member 'UConstructionSystemCursor::SnapComponents' has a wrong offset!");
static_assert(offsetof(UConstructionSystemCursor, ActiveSnapComponentIndex) == 0x000060, "Member 'UConstructionSystemCursor::ActiveSnapComponentIndex' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemRemoveTool
// 0x0068 (0x00A0 - 0x0038)
class UConstructionSystemRemoveTool final : public UConstructionSystemTool
{
public:
	float                                         TraceDistance;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APrefabActor>            FocusedActor;                                      // 0x003C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x5C];                                      // 0x0044(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleInput_RemoveAtCursor();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemRemoveTool">();
	}
	static class UConstructionSystemRemoveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemRemoveTool>();
	}
};
static_assert(alignof(UConstructionSystemRemoveTool) == 0x000008, "Wrong alignment on UConstructionSystemRemoveTool");
static_assert(sizeof(UConstructionSystemRemoveTool) == 0x0000A0, "Wrong size on UConstructionSystemRemoveTool");
static_assert(offsetof(UConstructionSystemRemoveTool, TraceDistance) == 0x000038, "Member 'UConstructionSystemRemoveTool::TraceDistance' has a wrong offset!");
static_assert(offsetof(UConstructionSystemRemoveTool, FocusedActor) == 0x00003C, "Member 'UConstructionSystemRemoveTool::FocusedActor' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemSaveGame
// 0x0080 (0x00B0 - 0x0030)
class UConstructionSystemSaveGame final : public USaveGame
{
public:
	class FString                                 SaveSlotName;                                      // 0x0030(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UserIndex;                                         // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConstructionSystemSavePlayerInfo      PlayerInfo;                                        // 0x0050(0x0050)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FConstructionSystemSaveConstructedItem> ConstructedItems;                          // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemSaveGame">();
	}
	static class UConstructionSystemSaveGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemSaveGame>();
	}
};
static_assert(alignof(UConstructionSystemSaveGame) == 0x000010, "Wrong alignment on UConstructionSystemSaveGame");
static_assert(sizeof(UConstructionSystemSaveGame) == 0x0000B0, "Wrong size on UConstructionSystemSaveGame");
static_assert(offsetof(UConstructionSystemSaveGame, SaveSlotName) == 0x000030, "Member 'UConstructionSystemSaveGame::SaveSlotName' has a wrong offset!");
static_assert(offsetof(UConstructionSystemSaveGame, UserIndex) == 0x000040, "Member 'UConstructionSystemSaveGame::UserIndex' has a wrong offset!");
static_assert(offsetof(UConstructionSystemSaveGame, PlayerInfo) == 0x000050, "Member 'UConstructionSystemSaveGame::PlayerInfo' has a wrong offset!");
static_assert(offsetof(UConstructionSystemSaveGame, ConstructedItems) == 0x0000A0, "Member 'UConstructionSystemSaveGame::ConstructedItems' has a wrong offset!");

// Class ConstructionSystemRuntime.PrefabricatorConstructionSnapComponent
// 0x0010 (0x0540 - 0x0530)
class UPrefabricatorConstructionSnapComponent final : public UBoxComponent
{
public:
	EPrefabricatorConstructionSnapType            SnapType;                                          // 0x0528(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPCSnapConstraintFloor                 FloorConstraint;                                   // 0x0529(0x0006)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPCSnapConstraintWall                  WallConstraint;                                    // 0x052F(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAlignToGroundSlope;                               // 0x0533(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMaxGroundSlopeConstraint;                      // 0x0534(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxGroundPlacementSlope;                           // 0x0538(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrefabricatorConstructionSnapComponent">();
	}
	static class UPrefabricatorConstructionSnapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrefabricatorConstructionSnapComponent>();
	}
};
static_assert(alignof(UPrefabricatorConstructionSnapComponent) == 0x000010, "Wrong alignment on UPrefabricatorConstructionSnapComponent");
static_assert(sizeof(UPrefabricatorConstructionSnapComponent) == 0x000540, "Wrong size on UPrefabricatorConstructionSnapComponent");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, SnapType) == 0x000528, "Member 'UPrefabricatorConstructionSnapComponent::SnapType' has a wrong offset!");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, FloorConstraint) == 0x000529, "Member 'UPrefabricatorConstructionSnapComponent::FloorConstraint' has a wrong offset!");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, WallConstraint) == 0x00052F, "Member 'UPrefabricatorConstructionSnapComponent::WallConstraint' has a wrong offset!");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, bAlignToGroundSlope) == 0x000533, "Member 'UPrefabricatorConstructionSnapComponent::bAlignToGroundSlope' has a wrong offset!");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, bUseMaxGroundSlopeConstraint) == 0x000534, "Member 'UPrefabricatorConstructionSnapComponent::bUseMaxGroundSlopeConstraint' has a wrong offset!");
static_assert(offsetof(UPrefabricatorConstructionSnapComponent, MaxGroundPlacementSlope) == 0x000538, "Member 'UPrefabricatorConstructionSnapComponent::MaxGroundPlacementSlope' has a wrong offset!");

// Class ConstructionSystemRuntime.PrefabricatorConstructionSnap
// 0x0008 (0x02B0 - 0x02A8)
class APrefabricatorConstructionSnap final : public AActor
{
public:
	class UPrefabricatorConstructionSnapComponent* ConstructionSnapComponent;                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrefabricatorConstructionSnap">();
	}
	static class APrefabricatorConstructionSnap* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrefabricatorConstructionSnap>();
	}
};
static_assert(alignof(APrefabricatorConstructionSnap) == 0x000008, "Wrong alignment on APrefabricatorConstructionSnap");
static_assert(sizeof(APrefabricatorConstructionSnap) == 0x0002B0, "Wrong size on APrefabricatorConstructionSnap");
static_assert(offsetof(APrefabricatorConstructionSnap, ConstructionSnapComponent) == 0x0002A8, "Member 'APrefabricatorConstructionSnap::ConstructionSnapComponent' has a wrong offset!");

// Class ConstructionSystemRuntime.ConstructionSystemBuildUI
// 0x0000 (0x0000 - 0x0000)
class IConstructionSystemBuildUI final
{
public:
	void SetConstructionSystem(class UConstructionSystemComponent* ConstructionSystem);
	void SetUIAsset(class UConstructionSystemUIAsset* UIAsset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemBuildUI">();
	}
	static class IConstructionSystemBuildUI* GetDefaultObj()
	{
		return GetDefaultObjImpl<IConstructionSystemBuildUI>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IConstructionSystemBuildUI) == 0x000001, "Wrong alignment on IConstructionSystemBuildUI");
static_assert(sizeof(IConstructionSystemBuildUI) == 0x000001, "Wrong size on IConstructionSystemBuildUI");

// Class ConstructionSystemRuntime.ConstructionSystemUIAsset
// 0x0028 (0x0060 - 0x0038)
class UConstructionSystemUIAsset final : public UDataAsset
{
public:
	class FText                                   MenuTitle;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FConstructionSystemUICategory>  Categories;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionSystemUIAsset">();
	}
	static class UConstructionSystemUIAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionSystemUIAsset>();
	}
};
static_assert(alignof(UConstructionSystemUIAsset) == 0x000008, "Wrong alignment on UConstructionSystemUIAsset");
static_assert(sizeof(UConstructionSystemUIAsset) == 0x000060, "Wrong size on UConstructionSystemUIAsset");
static_assert(offsetof(UConstructionSystemUIAsset, MenuTitle) == 0x000038, "Member 'UConstructionSystemUIAsset::MenuTitle' has a wrong offset!");
static_assert(offsetof(UConstructionSystemUIAsset, Categories) == 0x000050, "Member 'UConstructionSystemUIAsset::Categories' has a wrong offset!");

}

