#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MaskOfTheWeek

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.ExecuteUbergraph_WBP_MaskOfTheWeek
// 0x0630 (0x0630 - 0x0000)
struct WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseMenuWidget*                     CallFunc_GetMenuWidget_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMainMenuWidget*                     K2Node_DynamicCast_AsSBZMain_Menu_Widget;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference;       // 0x0078(0x0030)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference;      // 0x0138(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0160(0x0040)(HasGetValueTypeHash)
	struct FSBZUIPopupData                        K2Node_MakeStruct_SBZUIPopupData;                  // 0x01A0(0x0060)(ContainsInstancedReference)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName ClosingActionName)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x0234(0x0014)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_ClosingActionName;              // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInPreviewDays;                       // 0x0254(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_InTimeRemaining;                      // 0x0258(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_3;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days_1;                     // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours_1;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes_1;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds_1;                  // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds_1;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerMode_ReturnValue;             // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02C8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0308(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0348(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0388(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x03D8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0418(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0430(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0440(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0458(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZStoreItemUIData                    K2Node_Event_InUpdatedStoreItemUIData;             // 0x0470(0x0108)(ConstParm)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Select_Default_1;                           // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0590(0x0018)()
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default_2;                           // 0x05A8(0x0030)(HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsGameInstallPending;          // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_4;               // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsGameInstallPending)>   K2Node_CreateDelegate_OutputDelegate_3;            // 0x05F0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue_5;               // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameInstallPending_ReturnValue;         // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613[0x5];                                      // 0x0613(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0618(0x0018)()
};
static_assert(alignof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek) == 0x000008, "Wrong alignment on WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek");
static_assert(sizeof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek) == 0x000630, "Wrong size on WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, EntryPoint) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_bool_Variable) == 0x000004, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_byte_Variable) == 0x00001C, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_byte_Variable_1) == 0x00001D, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_bool_Variable_1) == 0x00001E, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_bool_Variable_2) == 0x00001F, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_object_Variable) == 0x000020, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CustomEvent_Loaded) == 0x000028, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue) == 0x000030, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue_1) == 0x000038, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetMenuWidget_ReturnValue) == 0x000040, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_DynamicCast_AsSBZMain_Menu_Widget) == 0x000048, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_DynamicCast_AsSBZMain_Menu_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue_2) == 0x000058, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Days) == 0x000060, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Hours) == 0x000064, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Minutes) == 0x000068, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Seconds) == 0x00006C, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Milliseconds) == 0x000070, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_SBZButtonControlReference) == 0x000078, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_SBZButtonControlReference' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_SBZButtonControlsReference) == 0x000138, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_SBZButtonControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_2) == 0x000160, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_SBZUIPopupData) == 0x0001A0, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_SBZUIPopupData' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeArray_Array_1) == 0x000200, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Event_IsDesignTime) == 0x000210, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_Format_ReturnValue) == 0x000218, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Select_Default) == 0x000230, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CreateDelegate_OutputDelegate_1) == 0x000234, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CustomEvent_ClosingActionName) == 0x000248, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CustomEvent_ClosingActionName' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Event_bInPreviewDays) == 0x000254, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Event_bInPreviewDays' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Event_InTimeRemaining) == 0x000258, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Event_InTimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue_3) == 0x000260, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Days_1) == 0x000268, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Days_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Hours_1) == 0x00026C, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Hours_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Minutes_1) == 0x000270, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Minutes_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Seconds_1) == 0x000274, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Seconds_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BreakTimespan_Milliseconds_1) == 0x000278, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BreakTimespan_Milliseconds_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_IsControllerMode_ReturnValue) == 0x00027C, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_IsControllerMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_BooleanAND_ReturnValue) == 0x0002C0, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002C8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_5) == 0x000308, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_6) == 0x000348, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_7) == 0x000388, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeArray_Array_2) == 0x0003C8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeStruct_FormatArgumentData_8) == 0x0003D8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_Format_ReturnValue_1) == 0x000418, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_MakeArray_Array_3) == 0x000430, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_Format_ReturnValue_2) == 0x000440, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CreateDelegate_OutputDelegate_2) == 0x000458, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Event_InUpdatedStoreItemUIData) == 0x000470, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Event_InUpdatedStoreItemUIData' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000578, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Select_Default_1) == 0x000580, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_SelectInt_ReturnValue) == 0x000588, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000590, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Select_Default_2) == 0x0005A8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0005D8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CustomEvent_bIsGameInstallPending) == 0x0005E0, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CustomEvent_bIsGameInstallPending' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue_4) == 0x0005E8, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005F0, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_GetUIManager_ReturnValue_5) == 0x000608, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_GetUIManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, CallFunc_IsGameInstallPending_ReturnValue) == 0x000610, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::CallFunc_IsGameInstallPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Event_bInHasFocus) == 0x000611, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, Temp_bool_Variable_3) == 0x000612, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek, K2Node_Select_Default_3) == 0x000618, "Member 'WBP_MaskOfTheWeek_C_ExecuteUbergraph_WBP_MaskOfTheWeek::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.ButtonFocusChanging
// 0x0001 (0x0001 - 0x0000)
struct WBP_MaskOfTheWeek_C_ButtonFocusChanging final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_ButtonFocusChanging) == 0x000001, "Wrong alignment on WBP_MaskOfTheWeek_C_ButtonFocusChanging");
static_assert(sizeof(WBP_MaskOfTheWeek_C_ButtonFocusChanging) == 0x000001, "Wrong size on WBP_MaskOfTheWeek_C_ButtonFocusChanging");
static_assert(offsetof(WBP_MaskOfTheWeek_C_ButtonFocusChanging, bInHasFocus) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_ButtonFocusChanging::bInHasFocus' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnInstallStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MaskOfTheWeek_C_OnInstallStateChanged final
{
public:
	bool                                          bIsGameInstallPending;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnInstallStateChanged) == 0x000001, "Wrong alignment on WBP_MaskOfTheWeek_C_OnInstallStateChanged");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnInstallStateChanged) == 0x000001, "Wrong size on WBP_MaskOfTheWeek_C_OnInstallStateChanged");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnInstallStateChanged, bIsGameInstallPending) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnInstallStateChanged::bIsGameInstallPending' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnDataUpdated
// 0x0108 (0x0108 - 0x0000)
struct WBP_MaskOfTheWeek_C_OnDataUpdated final
{
public:
	struct FSBZStoreItemUIData                    InUpdatedStoreItemUIData;                          // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnDataUpdated) == 0x000008, "Wrong alignment on WBP_MaskOfTheWeek_C_OnDataUpdated");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnDataUpdated) == 0x000108, "Wrong size on WBP_MaskOfTheWeek_C_OnDataUpdated");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnDataUpdated, InUpdatedStoreItemUIData) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnDataUpdated::InUpdatedStoreItemUIData' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnUpdateTimerText
// 0x0010 (0x0010 - 0x0000)
struct WBP_MaskOfTheWeek_C_OnUpdateTimerText final
{
public:
	bool                                          bInPreviewDays;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              InTimeRemaining;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnUpdateTimerText) == 0x000008, "Wrong alignment on WBP_MaskOfTheWeek_C_OnUpdateTimerText");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnUpdateTimerText) == 0x000010, "Wrong size on WBP_MaskOfTheWeek_C_OnUpdateTimerText");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnUpdateTimerText, bInPreviewDays) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnUpdateTimerText::bInPreviewDays' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnUpdateTimerText, InTimeRemaining) == 0x000008, "Member 'WBP_MaskOfTheWeek_C_OnUpdateTimerText::InTimeRemaining' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnPopupClosed
// 0x000C (0x000C - 0x0000)
struct WBP_MaskOfTheWeek_C_OnPopupClosed final
{
public:
	class FName                                   ClosingActionName;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnPopupClosed) == 0x000004, "Wrong alignment on WBP_MaskOfTheWeek_C_OnPopupClosed");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnPopupClosed) == 0x00000C, "Wrong size on WBP_MaskOfTheWeek_C_OnPopupClosed");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnPopupClosed, ClosingActionName) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnPopupClosed::ClosingActionName' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MaskOfTheWeek_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MaskOfTheWeek_C_PreConstruct");
static_assert(sizeof(WBP_MaskOfTheWeek_C_PreConstruct) == 0x000001, "Wrong size on WBP_MaskOfTheWeek_C_PreConstruct");
static_assert(offsetof(WBP_MaskOfTheWeek_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnLoaded_C2B341B64CB761D2A9E42692DDD092FE
// 0x0008 (0x0008 - 0x0000)
struct WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE) == 0x000008, "Wrong alignment on WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE) == 0x000008, "Wrong size on WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE, Loaded) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnLoaded_C2B341B64CB761D2A9E42692DDD092FE::Loaded' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.OnFocusChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_MaskOfTheWeek_C_OnFocusChanged final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_OnFocusChanged) == 0x000008, "Wrong alignment on WBP_MaskOfTheWeek_C_OnFocusChanged");
static_assert(sizeof(WBP_MaskOfTheWeek_C_OnFocusChanged) == 0x000028, "Wrong size on WBP_MaskOfTheWeek_C_OnFocusChanged");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnFocusChanged, bIsFocused) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_OnFocusChanged::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnFocusChanged, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_MaskOfTheWeek_C_OnFocusChanged::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnFocusChanged, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_MaskOfTheWeek_C_OnFocusChanged::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnFocusChanged, CallFunc_PlayAnimation_ReturnValue_2) == 0x000018, "Member 'WBP_MaskOfTheWeek_C_OnFocusChanged::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_OnFocusChanged, CallFunc_PlayAnimation_ReturnValue_3) == 0x000020, "Member 'WBP_MaskOfTheWeek_C_OnFocusChanged::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");

// Function WBP_MaskOfTheWeek.WBP_MaskOfTheWeek_C.UpdateAccessBasedOnPrivilege
// 0x0005 (0x0005 - 0x0000)
struct WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege final
{
public:
	bool                                          InstallPending;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege) == 0x000001, "Wrong alignment on WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege");
static_assert(sizeof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege) == 0x000005, "Wrong size on WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege");
static_assert(offsetof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege, InstallPending) == 0x000000, "Member 'WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege::InstallPending' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege, Temp_bool_Variable) == 0x000001, "Member 'WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege, Temp_byte_Variable) == 0x000002, "Member 'WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege, K2Node_Select_Default) == 0x000004, "Member 'WBP_MaskOfTheWeek_C_UpdateAccessBasedOnPrivilege::K2Node_Select_Default' has a wrong offset!");

}

