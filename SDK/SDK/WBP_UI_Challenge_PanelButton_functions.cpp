#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenge_PanelButton

#include "Basic.hpp"

#include "WBP_UI_Challenge_PanelButton_classes.hpp"
#include "WBP_UI_Challenge_PanelButton_parameters.hpp"


namespace SDK
{

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.ExecuteUbergraph_WBP_UI_Challenge_PanelButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::ExecuteUbergraph_WBP_UI_Challenge_PanelButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "ExecuteUbergraph_WBP_UI_Challenge_PanelButton");

	Params::WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.OnChallengeDataInititalized
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FSBZChallengeData&         InChallengeData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UI_Challenge_PanelButton_C::OnChallengeDataInititalized(const struct FSBZChallengeData& InChallengeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "OnChallengeDataInititalized");

	Params::WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized Parms{};

	Parms.InChallengeData = std::move(InChallengeData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_UI_Challenge_PanelButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_UI_Challenge_PanelButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "PreConstruct");

	Params::WBP_UI_Challenge_PanelButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.OnLoaded_575B882949292613E393E8B9DEA74294
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::OnLoaded_575B882949292613E393E8B9DEA74294(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "OnLoaded_575B882949292613E393E8B9DEA74294");

	Params::WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetChallengeName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSBZChallengeData&         Challenge                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UI_Challenge_PanelButton_C::SetChallengeName(const struct FSBZChallengeData& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetChallengeName");

	Params::WBP_UI_Challenge_PanelButton_C_SetChallengeName Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetChallengeDescription
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSBZChallengeData&         Challenge                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_UI_Challenge_PanelButton_C::SetChallengeDescription(const struct FSBZChallengeData& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetChallengeDescription");

	Params::WBP_UI_Challenge_PanelButton_C_SetChallengeDescription Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.UpdateVisualsBasedOnChallengeStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChallengeStatusEnum                    InChallengeStatus                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::UpdateVisualsBasedOnChallengeStatus(EChallengeStatusEnum InChallengeStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "UpdateVisualsBasedOnChallengeStatus");

	Params::WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus Parms{};

	Parms.InChallengeStatus = InChallengeStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressBarPercentage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalProgress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetProgressBarPercentage(int32 Progress, int32 TotalProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetProgressBarPercentage");

	Params::WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage Parms{};

	Parms.Progress = Progress;
	Parms.TotalProgress = TotalProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.ConvertProgressMinMaxToMeters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMaxValueToUse                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMinValueToUse                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::ConvertProgressMinMaxToMeters(int32 InMaxValueToUse, int32 InMinValueToUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "ConvertProgressMinMaxToMeters");

	Params::WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters Parms{};

	Parms.InMaxValueToUse = InMaxValueToUse;
	Parms.InMinValueToUse = InMinValueToUse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressMinMax
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMaxValueToUse                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMinValueToUse                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetProgressMinMax(int32 InMaxValueToUse, int32 InMinValueToUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetProgressMinMax");

	Params::WBP_UI_Challenge_PanelButton_C_SetProgressMinMax Parms{};

	Parms.InMaxValueToUse = InMaxValueToUse;
	Parms.InMinValueToUse = InMinValueToUse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_UI_Challenge_PanelButton_C::SetProgressText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetProgressText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.IsInfamyReward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InInfamyRewardPoints                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OutIsHasInfamyRewardPoints                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_UI_Challenge_PanelButton_C::IsInfamyReward(int32 InInfamyRewardPoints, bool* OutIsHasInfamyRewardPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "IsInfamyReward");

	Params::WBP_UI_Challenge_PanelButton_C_IsInfamyReward Parms{};

	Parms.InInfamyRewardPoints = InInfamyRewardPoints;

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsHasInfamyRewardPoints != nullptr)
		*OutIsHasInfamyRewardPoints = Parms.OutIsHasInfamyRewardPoints;
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetInfamyRewardInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InInfamyRewardPoints                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetInfamyRewardInfo(int32 InInfamyRewardPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetInfamyRewardInfo");

	Params::WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo Parms{};

	Parms.InInfamyRewardPoints = InInfamyRewardPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetRewardIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPaperSprite*                     InIconSprite                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetRewardIcon(class UPaperSprite* InIconSprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetRewardIcon");

	Params::WBP_UI_Challenge_PanelButton_C_SetRewardIcon Parms{};

	Parms.InIconSprite = InIconSprite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetGoldRewardInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InQuantity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetGoldRewardInfo(int32 InQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetGoldRewardInfo");

	Params::WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo Parms{};

	Parms.InQuantity = InQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetCreditsRewardInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InQuantity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetCreditsRewardInfo(int32 InQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetCreditsRewardInfo");

	Params::WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo Parms{};

	Parms.InQuantity = InQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetItemRewardInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPaperSprite*                     InIconSprite                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemQuantity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetItemRewardInfo(class UPaperSprite* InIconSprite, int32 InItemQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetItemRewardInfo");

	Params::WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo Parms{};

	Parms.InIconSprite = InIconSprite;
	Parms.InItemQuantity = InItemQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetRewardValueVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InItemQuantity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::SetRewardValueVisibility(int32 InItemQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetRewardValueVisibility");

	Params::WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility Parms{};

	Parms.InItemQuantity = InItemQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.UpdateRewardIconDimensions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPaperSprite*                     Sprite                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UI_Challenge_PanelButton_C::UpdateRewardIconDimensions(class UPaperSprite* Sprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "UpdateRewardIconDimensions");

	Params::WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions Parms{};

	Parms.Sprite = Sprite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetWidgetSize
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_UI_Challenge_PanelButton_C::SetWidgetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UI_Challenge_PanelButton_C", "SetWidgetSize");

	UObject::ProcessEvent(Func, nullptr);
}

}

