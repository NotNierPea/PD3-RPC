#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextBasedNewsBanner

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_TextBasedNewsBanner.WBP_TextBasedNewsBanner_C.ExecuteUbergraph_WBP_TextBasedNewsBanner
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Title, const class FString& Content)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZServerStatusManager*                CallFunc_GetServerStatusManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Title;                          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Content;                        // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner) == 0x000008, "Wrong alignment on WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner");
static_assert(sizeof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner) == 0x0000C0, "Wrong size on WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, EntryPoint) == 0x000000, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_Event_IsDesignTime) == 0x00001A, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, CallFunc_GetServerStatusManager_ReturnValue) == 0x000058, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::CallFunc_GetServerStatusManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_CustomEvent_Title) == 0x000060, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, K2Node_CustomEvent_Content) == 0x000070, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::K2Node_CustomEvent_Content' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, CallFunc_IsEmpty_ReturnValue) == 0x000098, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'WBP_TextBasedNewsBanner_C_ExecuteUbergraph_WBP_TextBasedNewsBanner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_TextBasedNewsBanner.WBP_TextBasedNewsBanner_C.On News Message Received
// 0x0020 (0x0020 - 0x0000)
struct WBP_TextBasedNewsBanner_C_On_News_Message_Received final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Content;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextBasedNewsBanner_C_On_News_Message_Received) == 0x000008, "Wrong alignment on WBP_TextBasedNewsBanner_C_On_News_Message_Received");
static_assert(sizeof(WBP_TextBasedNewsBanner_C_On_News_Message_Received) == 0x000020, "Wrong size on WBP_TextBasedNewsBanner_C_On_News_Message_Received");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_On_News_Message_Received, Title) == 0x000000, "Member 'WBP_TextBasedNewsBanner_C_On_News_Message_Received::Title' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_On_News_Message_Received, Content) == 0x000010, "Member 'WBP_TextBasedNewsBanner_C_On_News_Message_Received::Content' has a wrong offset!");

// Function WBP_TextBasedNewsBanner.WBP_TextBasedNewsBanner_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_TextBasedNewsBanner_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextBasedNewsBanner_C_Tick) == 0x000004, "Wrong alignment on WBP_TextBasedNewsBanner_C_Tick");
static_assert(sizeof(WBP_TextBasedNewsBanner_C_Tick) == 0x00003C, "Wrong size on WBP_TextBasedNewsBanner_C_Tick");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_TextBasedNewsBanner_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_TextBasedNewsBanner_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_TextBasedNewsBanner.WBP_TextBasedNewsBanner_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextBasedNewsBanner_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_TextBasedNewsBanner_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TextBasedNewsBanner_C_PreConstruct");
static_assert(sizeof(WBP_TextBasedNewsBanner_C_PreConstruct) == 0x000001, "Wrong size on WBP_TextBasedNewsBanner_C_PreConstruct");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TextBasedNewsBanner_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TextBasedNewsBanner.WBP_TextBasedNewsBanner_C.SetInformation
// 0x0038 (0x0038 - 0x0000)
struct WBP_TextBasedNewsBanner_C_SetInformation final
{
public:
	class FText                                   InTitle;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InShouldShow;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_TextBasedNewsBanner_C_SetInformation) == 0x000008, "Wrong alignment on WBP_TextBasedNewsBanner_C_SetInformation");
static_assert(sizeof(WBP_TextBasedNewsBanner_C_SetInformation) == 0x000038, "Wrong size on WBP_TextBasedNewsBanner_C_SetInformation");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_SetInformation, InTitle) == 0x000000, "Member 'WBP_TextBasedNewsBanner_C_SetInformation::InTitle' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_SetInformation, InDescription) == 0x000018, "Member 'WBP_TextBasedNewsBanner_C_SetInformation::InDescription' has a wrong offset!");
static_assert(offsetof(WBP_TextBasedNewsBanner_C_SetInformation, InShouldShow) == 0x000030, "Member 'WBP_TextBasedNewsBanner_C_SetInformation::InShouldShow' has a wrong offset!");

}

