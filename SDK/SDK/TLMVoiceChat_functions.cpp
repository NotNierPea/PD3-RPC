#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TLMVoiceChat

#include "Basic.hpp"

#include "TLMVoiceChat_classes.hpp"
#include "TLMVoiceChat_parameters.hpp"


namespace SDK
{

// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetAudioInputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetAudioInputMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetAudioInputMute");

	Params::TLMVoiceChatSubsystem_GetAudioInputMute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetAudioInputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLMVoiceChatSubsystem::GetAudioInputVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetAudioInputVolume");

	Params::TLMVoiceChatSubsystem_GetAudioInputVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetAudioOutputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetAudioOutputMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetAudioOutputMute");

	Params::TLMVoiceChatSubsystem_GetAudioOutputMute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetAudioOutputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLMVoiceChatSubsystem::GetAudioOutputVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetAudioOutputVolume");

	Params::TLMVoiceChatSubsystem_GetAudioOutputVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetPlayerBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EOSUserId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetPlayerBlocked(const class FString& EOSUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetPlayerBlocked");

	Params::TLMVoiceChatSubsystem_GetPlayerBlocked Parms{};

	Parms.EOSUserId = std::move(EOSUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetPlayerMuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    PlayerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bIsMuted                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetPlayerMuted(const class FString& PlayerName, bool* bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetPlayerMuted");

	Params::TLMVoiceChatSubsystem_GetPlayerMuted Parms{};

	Parms.PlayerName = std::move(PlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsMuted != nullptr)
		*bIsMuted = Parms.bIsMuted;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetPlayersInChannel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>*                  PlayersInChannel                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetPlayersInChannel(TArray<class FString>* PlayersInChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetPlayersInChannel");

	Params::TLMVoiceChatSubsystem_GetPlayersInChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayersInChannel != nullptr)
		*PlayersInChannel = std::move(Parms.PlayersInChannel);

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.IsPlayerInChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::IsPlayerInChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "IsPlayerInChannel");

	Params::TLMVoiceChatSubsystem_IsPlayerInChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetAudioInputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bMute                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetAudioInputMute(const bool bMute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetAudioInputMute");

	Params::TLMVoiceChatSubsystem_SetAudioInputMute Parms{};

	Parms.bMute = bMute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetAudioInputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetAudioInputVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetAudioInputVolume");

	Params::TLMVoiceChatSubsystem_SetAudioInputVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetAudioOutputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bMute                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetAudioOutputMute(const bool bMute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetAudioOutputMute");

	Params::TLMVoiceChatSubsystem_SetAudioOutputMute Parms{};

	Parms.bMute = bMute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetAudioOutputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetAudioOutputVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetAudioOutputVolume");

	Params::TLMVoiceChatSubsystem_SetAudioOutputVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetPlayerBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EOSUserId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetPlayerBlocked(const class FString& EOSUserId, bool bBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetPlayerBlocked");

	Params::TLMVoiceChatSubsystem_SetPlayerBlocked Parms{};

	Parms.EOSUserId = std::move(EOSUserId);
	Parms.bBlocked = bBlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetPlayerMuted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PlayerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMuted                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetPlayerMuted(const class FString& PlayerName, bool bMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetPlayerMuted");

	Params::TLMVoiceChatSubsystem_SetPlayerMuted Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.bMuted = bMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetPushToTalkEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetPushToTalkEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetPushToTalkEnabled");

	Params::TLMVoiceChatSubsystem_SetPushToTalkEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.SetVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::SetVoiceChatEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "SetVoiceChatEnabled");

	Params::TLMVoiceChatSubsystem_SetVoiceChatEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetCurrentUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLMVoiceChatSubsystem::GetCurrentUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetCurrentUserId");

	Params::TLMVoiceChatSubsystem_GetCurrentUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetPlayerIds
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString*                          PlatformUserId                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          EOSUserId                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMVoiceChatSubsystem::GetPlayerIds(class FString* PlatformUserId, class FString* EOSUserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetPlayerIds");

	Params::TLMVoiceChatSubsystem_GetPlayerIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlatformUserId != nullptr)
		*PlatformUserId = std::move(Parms.PlatformUserId);

	if (EOSUserId != nullptr)
		*EOSUserId = std::move(Parms.EOSUserId);
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetPushToTalkEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetPushToTalkEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetPushToTalkEnabled");

	Params::TLMVoiceChatSubsystem_GetPushToTalkEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLMVoiceChat.TLMVoiceChatSubsystem.GetVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMVoiceChatSubsystem::GetVoiceChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMVoiceChatSubsystem", "GetVoiceChatEnabled");

	Params::TLMVoiceChatSubsystem_GetVoiceChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

