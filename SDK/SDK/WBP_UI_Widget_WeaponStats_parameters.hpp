#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_WeaponStats

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.ExecuteUbergraph_WBP_UI_Widget_WeaponStats
// 0x0218 (0x0218 - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompare_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZFireType                                  Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZFireType                                  Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0028(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0040(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0058(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0088(0x0018)()
	bool                                          CallFunc_HasCompare_ReturnValue_1;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Damage; // 0x00A8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Recoil; // 0x00B8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Stability; // 0x00C8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Accuracy; // 0x00D8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Handling; // 0x00E8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_FireRate; // 0x00F8(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetFirstNValuesFromArray_OutArray;        // 0x0108(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Damage_1; // 0x0118(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Recoil_1; // 0x0128(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Stability_1; // 0x0138(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Accuracy_1; // 0x0148(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_Handling_1; // 0x0158(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStatValuesFromEquippableConfig_FireRate_1; // 0x0168(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetFirstNValuesFromArray_OutArray_1;      // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x0188(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x01A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x01B8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_8;            // 0x01D0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_9;            // 0x01E8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0200(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats) == 0x000008, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats) == 0x000218, "Wrong size on WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_HasCompare_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_HasCompare_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, Temp_byte_Variable) == 0x000005, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, Temp_bool_Variable) == 0x000007, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, K2Node_Select_Default) == 0x00000A, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000028, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000040, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000058, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000070, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, K2Node_Select_Default_1) == 0x000088, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_HasCompare_ReturnValue_1) == 0x0000A0, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_HasCompare_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Damage) == 0x0000A8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Damage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Recoil) == 0x0000B8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Recoil' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Stability) == 0x0000C8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Stability' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Accuracy) == 0x0000D8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Accuracy' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Handling) == 0x0000E8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Handling' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_FireRate) == 0x0000F8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_FireRate' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetFirstNValuesFromArray_OutArray) == 0x000108, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetFirstNValuesFromArray_OutArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Damage_1) == 0x000118, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Damage_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Recoil_1) == 0x000128, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Recoil_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Stability_1) == 0x000138, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Stability_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Accuracy_1) == 0x000148, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Accuracy_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_Handling_1) == 0x000158, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_Handling_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetStatValuesFromEquippableConfig_FireRate_1) == 0x000168, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetStatValuesFromEquippableConfig_FireRate_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_GetFirstNValuesFromArray_OutArray_1) == 0x000178, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_GetFirstNValuesFromArray_OutArray_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_5) == 0x000188, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_6) == 0x0001A0, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_7) == 0x0001B8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_8) == 0x0001D0, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, CallFunc_MakeLiteralText_ReturnValue_9) == 0x0001E8, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::CallFunc_MakeLiteralText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats, K2Node_Select_Default_2) == 0x000200, "Member 'WBP_UI_Widget_WeaponStats_C_ExecuteUbergraph_WBP_UI_Widget_WeaponStats::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.SetAmmoStat
// 0x0270 (0x0270 - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_SetAmmoStat final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	int32                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0030(0x0018)()
	int32                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0050(0x0018)()
	int32                                         K2Node_Select_Default_3;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0070(0x0018)()
	int32                                         K2Node_Select_Default_4;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_7;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x00A8(0x0018)()
	struct FLinearColor                           CallFunc_DetermineDowngradeUpgradeColour_Colour;   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D0(0x0028)()
	struct FLinearColor                           CallFunc_DetermineDowngradeUpgradeColour_Colour_1; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0108(0x0028)()
	int32                                         K2Node_Select_Default_8;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_DetermineDowngradeUpgradeColour_Colour_2; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_DetermineDowngradeUpgradeColour_Colour_3; // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0158(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0180(0x0028)()
	int32                                         K2Node_Select_Default_9;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x01B0(0x0018)()
	bool                                          CallFunc_HasCompare_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x01D0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x01F8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_6;                    // 0x0220(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_7;                    // 0x0248(0x0028)()
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat) == 0x000008, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_SetAmmoStat");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat) == 0x000270, "Wrong size on WBP_UI_Widget_WeaponStats_C_SetAmmoStat");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_2) == 0x000002, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_3) == 0x000003, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_4) == 0x000004, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_5) == 0x000005, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_6) == 0x000006, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_7) == 0x000007, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_8) == 0x000008, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, Temp_bool_Variable_9) == 0x000009, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default) == 0x00000C, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000030, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_2) == 0x000048, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000050, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_3) == 0x000068, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000070, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_4) == 0x000088, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00008C, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_5) == 0x000090, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000094, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_6) == 0x000098, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_7) == 0x00009C, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000A0, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue_4) == 0x0000A8, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_DetermineDowngradeUpgradeColour_Colour) == 0x0000C0, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_DetermineDowngradeUpgradeColour_Colour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor) == 0x0000D0, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_DetermineDowngradeUpgradeColour_Colour_1) == 0x0000F8, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_DetermineDowngradeUpgradeColour_Colour_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_1) == 0x000108, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_8) == 0x000130, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000134, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_DetermineDowngradeUpgradeColour_Colour_2) == 0x000138, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_DetermineDowngradeUpgradeColour_Colour_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_DetermineDowngradeUpgradeColour_Colour_3) == 0x000148, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_DetermineDowngradeUpgradeColour_Colour_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_2) == 0x000158, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_3) == 0x000180, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_Select_Default_9) == 0x0001A8, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_Conv_IntToText_ReturnValue_5) == 0x0001B0, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, CallFunc_HasCompare_ReturnValue) == 0x0001C8, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::CallFunc_HasCompare_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_4) == 0x0001D0, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_5) == 0x0001F8, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_6) == 0x000220, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetAmmoStat, K2Node_MakeStruct_SlateColor_7) == 0x000248, "Member 'WBP_UI_Widget_WeaponStats_C_SetAmmoStat::K2Node_MakeStruct_SlateColor_7' has a wrong offset!");

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.SetWeaponStat
// 0x0050 (0x0050 - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_SetWeaponStat final
{
public:
	class UProgressBar*                           ProgressBarA;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBarB;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseStat;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CompareStat;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_5;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompare_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat) == 0x000008, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_SetWeaponStat");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat) == 0x000050, "Wrong size on WBP_UI_Widget_WeaponStats_C_SetWeaponStat");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, ProgressBarA) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::ProgressBarA' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, ProgressBarB) == 0x000008, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::ProgressBarB' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, BaseStat) == 0x000010, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::BaseStat' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, CompareStat) == 0x000014, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::CompareStat' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable) == 0x000018, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_1) == 0x000019, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_2) == 0x00001A, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_3) == 0x00001B, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_4) == 0x00001C, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default) == 0x000020, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_5) == 0x000028, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_2) == 0x00002C, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_3) == 0x000030, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, Temp_bool_Variable_6) == 0x000034, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_4) == 0x000038, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_5) == 0x000040, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, CallFunc_HasCompare_ReturnValue) == 0x000044, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::CallFunc_HasCompare_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_SetWeaponStat, K2Node_Select_Default_6) == 0x000048, "Member 'WBP_UI_Widget_WeaponStats_C_SetWeaponStat::K2Node_Select_Default_6' has a wrong offset!");

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.GetStatValuesFromEquippableConfig
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig final
{
public:
	struct FSBZEquippableConfig                   Equippable_Config;                                 // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<float>                                 Damage;                                            // 0x0070(0x0010)(Parm, OutParm)
	TArray<float>                                 Recoil;                                            // 0x0080(0x0010)(Parm, OutParm)
	TArray<float>                                 Stability;                                         // 0x0090(0x0010)(Parm, OutParm)
	TArray<float>                                 Accuracy;                                          // 0x00A0(0x0010)(Parm, OutParm)
	TArray<float>                                 Handling;                                          // 0x00B0(0x0010)(Parm, OutParm)
	TArray<float>                                 FireRate;                                          // 0x00C0(0x0010)(Parm, OutParm)
	TArray<float>                                 DamageValues;                                      // 0x00D0(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZRangedWeaponData*                   K2Node_DynamicCast_AsSBZRanged_Weapon_Data;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZPlayerWeaponFireData*               K2Node_DynamicCast_AsSBZPlayer_Weapon_Fire_Data;   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZDamageDistance                     CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIWeaponStatsBlueprint*             CallFunc_SpawnObject_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetFireRateValueArray_OutValueArray;      // 0x0150(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetHandlingValueArray_OutValueArray;      // 0x0160(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetAccuracyValueArray_OutValueArray;      // 0x0170(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetStabilityValueArray_OutValueArray;     // 0x0180(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetRecoilValueArray_OutValueArray;        // 0x0190(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig) == 0x000008, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig) == 0x0001A0, "Wrong size on WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Equippable_Config) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Equippable_Config' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Damage) == 0x000070, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Damage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Recoil) == 0x000080, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Recoil' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Stability) == 0x000090, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Stability' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Accuracy) == 0x0000A0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Accuracy' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Handling) == 0x0000B0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Handling' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, FireRate) == 0x0000C0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::FireRate' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, DamageValues) == 0x0000D0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::DamageValues' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, K2Node_DynamicCast_AsSBZRanged_Weapon_Data) == 0x0000E8, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::K2Node_DynamicCast_AsSBZRanged_Weapon_Data' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, K2Node_DynamicCast_AsSBZPlayer_Weapon_Fire_Data) == 0x0000F8, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::K2Node_DynamicCast_AsSBZPlayer_Weapon_Fire_Data' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, Temp_int_Array_Index_Variable) == 0x000120, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Array_Get_Item) == 0x000128, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_SpawnObject_ReturnValue) == 0x000140, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_IsValid_ReturnValue_1) == 0x000148, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_GetFireRateValueArray_OutValueArray) == 0x000150, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_GetFireRateValueArray_OutValueArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_GetHandlingValueArray_OutValueArray) == 0x000160, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_GetHandlingValueArray_OutValueArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_GetAccuracyValueArray_OutValueArray) == 0x000170, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_GetAccuracyValueArray_OutValueArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_GetStabilityValueArray_OutValueArray) == 0x000180, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_GetStabilityValueArray_OutValueArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig, CallFunc_GetRecoilValueArray_OutValueArray) == 0x000190, "Member 'WBP_UI_Widget_WeaponStats_C_GetStatValuesFromEquippableConfig::CallFunc_GetRecoilValueArray_OutValueArray' has a wrong offset!");

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.GetFirstNValuesFromArray
// 0x0060 (0x0060 - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray final
{
public:
	TArray<float>                                 Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Values;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 OutArray;                                          // 0x0018(0x0010)(Parm, OutParm)
	TArray<float>                                 FinalArray;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray) == 0x000008, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray) == 0x000060, "Wrong size on WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, Array) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, Values) == 0x000010, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::Values' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, OutArray) == 0x000018, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::OutArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, FinalArray) == 0x000028, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::FinalArray' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Array_Get_Item) == 0x000044, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'WBP_UI_Widget_WeaponStats_C_GetFirstNValuesFromArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C.DetermineDowngradeUpgradeColour
// 0x001C (0x001C - 0x0000)
struct WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour final
{
public:
	float                                         BaseVal;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CompareVal;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Colour;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour) == 0x000004, "Wrong alignment on WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour");
static_assert(sizeof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour) == 0x00001C, "Wrong size on WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour, BaseVal) == 0x000000, "Member 'WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour::BaseVal' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour, CompareVal) == 0x000004, "Member 'WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour::CompareVal' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour, Colour) == 0x000008, "Member 'WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour::Colour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'WBP_UI_Widget_WeaponStats_C_DetermineDowngradeUpgradeColour::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

