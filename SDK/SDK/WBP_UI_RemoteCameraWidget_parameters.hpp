#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_RemoteCameraWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.ExecuteUbergraph_WBP_UI_RemoteCameraWidget
// 0x0014 (0x0014 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewState;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ByteToBits_Bit1;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit2;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit3;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit4;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit5;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit6;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit7;                          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ByteToBits_Bit8;                          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsFocused;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZCameraState                               K2Node_Event_CurrentState;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget) == 0x000004, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget) == 0x000014, "Wrong size on WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, EntryPoint) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, K2Node_Event_NewState) == 0x000004, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit1) == 0x000005, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit1' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit2) == 0x000006, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit2' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit3) == 0x000007, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit3' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit4) == 0x000008, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit4' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit5) == 0x000009, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit5' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit6) == 0x00000A, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit6' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit7) == 0x00000B, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit7' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_ByteToBits_Bit8) == 0x00000C, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_ByteToBits_Bit8' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, K2Node_Event_bIsFocused) == 0x00000F, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::K2Node_Event_bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, K2Node_Event_CurrentState) == 0x000010, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::K2Node_Event_CurrentState' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_UI_RemoteCameraWidget_C_ExecuteUbergraph_WBP_UI_RemoteCameraWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.SecurityCameraRuntimeStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged final
{
public:
	uint8                                         NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged) == 0x000001, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged) == 0x000001, "Wrong size on WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged, NewState) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_SecurityCameraRuntimeStateChanged::NewState' has a wrong offset!");

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.SecurityCameraStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged final
{
public:
	ESBZCameraState                               CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged) == 0x000001, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged) == 0x000001, "Wrong size on WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged, CurrentState) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_SecurityCameraStateChanged::CurrentState' has a wrong offset!");

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.OnFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_OnFocusedChanged final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_OnFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_OnFocusedChanged");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_OnFocusedChanged) == 0x000001, "Wrong size on WBP_UI_RemoteCameraWidget_C_OnFocusedChanged");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_OnFocusedChanged, bIsFocused) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_OnFocusedChanged::bIsFocused' has a wrong offset!");

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.SetFocusedWidget
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_SetFocusedWidget final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget) == 0x000001, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_SetFocusedWidget");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget) == 0x000005, "Wrong size on WBP_UI_RemoteCameraWidget_C_SetFocusedWidget");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget, bIsFocused) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_SetFocusedWidget::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_RemoteCameraWidget_C_SetFocusedWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_RemoteCameraWidget_C_SetFocusedWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_RemoteCameraWidget_C_SetFocusedWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetFocusedWidget, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_RemoteCameraWidget_C_SetFocusedWidget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_RemoteCameraWidget.WBP_UI_RemoteCameraWidget_C.SetCameraDestroyed
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed final
{
public:
	bool                                          bIsCameraDestroyed;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed) == 0x000001, "Wrong alignment on WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed");
static_assert(sizeof(WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed) == 0x000001, "Wrong size on WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed");
static_assert(offsetof(WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed, bIsCameraDestroyed) == 0x000000, "Member 'WBP_UI_RemoteCameraWidget_C_SetCameraDestroyed::bIsCameraDestroyed' has a wrong offset!");

}

