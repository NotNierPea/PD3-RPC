#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CopController

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CopController.BP_CopController_C.ExecuteUbergraph_BP_CopController
// 0x0010 (0x0010 - 0x0000)
struct BP_CopController_C_ExecuteUbergraph_BP_CopController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CopController_C_ExecuteUbergraph_BP_CopController) == 0x000008, "Wrong alignment on BP_CopController_C_ExecuteUbergraph_BP_CopController");
static_assert(sizeof(BP_CopController_C_ExecuteUbergraph_BP_CopController) == 0x000010, "Wrong size on BP_CopController_C_ExecuteUbergraph_BP_CopController");
static_assert(offsetof(BP_CopController_C_ExecuteUbergraph_BP_CopController, EntryPoint) == 0x000000, "Member 'BP_CopController_C_ExecuteUbergraph_BP_CopController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CopController_C_ExecuteUbergraph_BP_CopController, K2Node_Event_PossessedPawn) == 0x000008, "Member 'BP_CopController_C_ExecuteUbergraph_BP_CopController::K2Node_Event_PossessedPawn' has a wrong offset!");

// Function BP_CopController.BP_CopController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_CopController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CopController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_CopController_C_ReceivePossess");
static_assert(sizeof(BP_CopController_C_ReceivePossess) == 0x000008, "Wrong size on BP_CopController_C_ReceivePossess");
static_assert(offsetof(BP_CopController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_CopController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

}

