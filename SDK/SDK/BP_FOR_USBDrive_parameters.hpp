#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FOR_USBDrive

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_FOR_USBDrive.BP_FOR_USBDrive_C.ExecuteUbergraph_BP_FOR_USBDrive
// 0x0068 (0x0068 - 0x0000)
struct BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0028(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_OldState;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewState;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0048(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive) == 0x000008, "Wrong alignment on BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive");
static_assert(sizeof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive) == 0x000068, "Wrong size on BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, EntryPoint) == 0x000000, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, Temp_struct_Variable) == 0x000008, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, Temp_struct_Variable_1) == 0x000018, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, Temp_delegate_Variable) == 0x000028, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, K2Node_Event_OldState) == 0x00003C, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, K2Node_Event_NewState) == 0x000040, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, K2Node_Event_bDoCosmetics) == 0x000044, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, CallFunc_IsDedicatedServer_ReturnValue) == 0x000045, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, K2Node_SwitchInteger_CmpSuccess) == 0x000046, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, Temp_delegate_Variable_1) == 0x000048, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, CallFunc_PostAkEvent_ReturnValue) == 0x00005C, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive, CallFunc_PostAkEvent_ReturnValue_1) == 0x000060, "Member 'BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_FOR_USBDrive.BP_FOR_USBDrive_C.OnStateChanged
// 0x000C (0x000C - 0x0000)
struct BP_FOR_USBDrive_C_OnStateChanged final
{
public:
	int32                                         OldState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FOR_USBDrive_C_OnStateChanged) == 0x000004, "Wrong alignment on BP_FOR_USBDrive_C_OnStateChanged");
static_assert(sizeof(BP_FOR_USBDrive_C_OnStateChanged) == 0x00000C, "Wrong size on BP_FOR_USBDrive_C_OnStateChanged");
static_assert(offsetof(BP_FOR_USBDrive_C_OnStateChanged, OldState) == 0x000000, "Member 'BP_FOR_USBDrive_C_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_OnStateChanged, NewState) == 0x000004, "Member 'BP_FOR_USBDrive_C_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_FOR_USBDrive_C_OnStateChanged, bDoCosmetics) == 0x000008, "Member 'BP_FOR_USBDrive_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

}

