#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengesContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C
// 0x0058 (0x02E8 - 0x0290)
class UWBP_DailyChallengesContainer_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           Challenges_VB;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_286;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Outline_I;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Timer_T;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxChallengeAmount;                                // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_DailyChallengeItem_C*>      ChallengesButtons;                                 // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWBP_DailyChallengeItem_C*              ChallengeButtonToReroll;                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              RerollUsed;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_DailyChallengesContainer(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void CreateChallengeButton(class UWBP_DailyChallengeItem_C** OutChallengeButtonWidget);
	void OnChallengeRerollPressed(class UWBP_DailyChallengeItem_C* ChallengeButton);
	void OnChallengeRerollPopupClosed(class FName ClosingActionName);
	void OnDailyChallengesUpdated();
	void InitializeDailyChallenges();
	void UpdateTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DailyChallengesContainer_C">();
	}
	static class UWBP_DailyChallengesContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DailyChallengesContainer_C>();
	}
};
static_assert(alignof(UWBP_DailyChallengesContainer_C) == 0x000008, "Wrong alignment on UWBP_DailyChallengesContainer_C");
static_assert(sizeof(UWBP_DailyChallengesContainer_C) == 0x0002E8, "Wrong size on UWBP_DailyChallengesContainer_C");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, UberGraphFrame) == 0x000290, "Member 'UWBP_DailyChallengesContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, Challenges_VB) == 0x000298, "Member 'UWBP_DailyChallengesContainer_C::Challenges_VB' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, Image_286) == 0x0002A0, "Member 'UWBP_DailyChallengesContainer_C::Image_286' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, Outline_I) == 0x0002A8, "Member 'UWBP_DailyChallengesContainer_C::Outline_I' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, Timer_T) == 0x0002B0, "Member 'UWBP_DailyChallengesContainer_C::Timer_T' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, MaxChallengeAmount) == 0x0002B8, "Member 'UWBP_DailyChallengesContainer_C::MaxChallengeAmount' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, ChallengesButtons) == 0x0002C0, "Member 'UWBP_DailyChallengesContainer_C::ChallengesButtons' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, ChallengeButtonToReroll) == 0x0002D0, "Member 'UWBP_DailyChallengesContainer_C::ChallengeButtonToReroll' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesContainer_C, RerollUsed) == 0x0002D8, "Member 'UWBP_DailyChallengesContainer_C::RerollUsed' has a wrong offset!");

}

