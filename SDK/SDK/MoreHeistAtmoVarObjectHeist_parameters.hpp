#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoreHeistAtmoVarObjectHeist

#include "Basic.hpp"

#include "SkyMaterials_structs.hpp"
#include "TimeType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "WeatherType_structs.hpp"
#include "WeatherSettings_structs.hpp"
#include "TimeSettings_structs.hpp"


namespace SDK::Params
{

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.ExecuteUbergraph_MoreHeistAtmoVarObjectHeist
// 0x0650 (0x0650 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeatherSettings                       CallFunc_GetRowOfWeatherType_Settings;             // 0x0020(0x0058)(HasGetValueTypeHash)
	class UObject*                                CallFunc_FindPersistentModObjectByClass_ObjectInstance; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindPersistentModObjectByClass_bFound;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoreHeistAtmospherePersistent_C*       K2Node_DynamicCast_AsMore_Heist_Atmosphere_Persistent; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCompatible_AreCompatible;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0xE];                                       // 0x0092(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSettings                          CallFunc_GetRowOfTimeType_Settings;                // 0x00A0(0x05B0)(HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist) == 0x000650, "Wrong size on MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, EntryPoint) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::EntryPoint' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_GetRowOfWeatherType_Settings) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_GetRowOfWeatherType_Settings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_FindPersistentModObjectByClass_ObjectInstance) == 0x000078, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_FindPersistentModObjectByClass_ObjectInstance' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_FindPersistentModObjectByClass_bFound) == 0x000080, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_FindPersistentModObjectByClass_bFound' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, K2Node_DynamicCast_AsMore_Heist_Atmosphere_Persistent) == 0x000088, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::K2Node_DynamicCast_AsMore_Heist_Atmosphere_Persistent' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_AreCompatible_AreCompatible) == 0x000091, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_AreCompatible_AreCompatible' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist, CallFunc_GetRowOfTimeType_Settings) == 0x0000A0, "Member 'MoreHeistAtmoVarObjectHeist_C_ExecuteUbergraph_MoreHeistAtmoVarObjectHeist::CallFunc_GetRowOfTimeType_Settings' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.ProcessWeather
// 0x0058 (0x0058 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_ProcessWeather final
{
public:
	struct FWeatherSettings                       Settings;                                          // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_ProcessWeather) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_ProcessWeather");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_ProcessWeather) == 0x000058, "Wrong size on MoreHeistAtmoVarObjectHeist_C_ProcessWeather");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_ProcessWeather, Settings) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_ProcessWeather::Settings' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.Process Time
// 0x05E0 (0x05E0 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_Process_Time final
{
public:
	struct FTimeSettings                          TimeSettings;                                      // 0x0000(0x05B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ASkyLight*                              CallFunc_GetActorOfClass_ReturnValue;              // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  CallFunc_GetActorOfClass_ReturnValue_1;            // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_Process_Time) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_Process_Time");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_Process_Time) == 0x0005E0, "Wrong size on MoreHeistAtmoVarObjectHeist_C_Process_Time");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, TimeSettings) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::TimeSettings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_GetActorOfClass_ReturnValue) == 0x0005B0, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0005B8, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0005C0, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_Add_FloatFloat_ReturnValue) == 0x0005CC, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_BreakVector_X) == 0x0005D0, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_BreakVector_Y) == 0x0005D4, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_Process_Time, CallFunc_BreakVector_Z) == 0x0005D8, "Member 'MoreHeistAtmoVarObjectHeist_C_Process_Time::CallFunc_BreakVector_Z' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.DeleteDirLight
// 0x0008 (0x0008 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_DeleteDirLight final
{
public:
	class ADirectionalLight*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_DeleteDirLight) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_DeleteDirLight");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_DeleteDirLight) == 0x000008, "Wrong size on MoreHeistAtmoVarObjectHeist_C_DeleteDirLight");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteDirLight, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteDirLight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.SetHeightFog
// 0x00C8 (0x00C8 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_SetHeightFog final
{
public:
	float                                         ZLocation;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Density;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Falloff;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 FogColor;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0034(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_SetHeightFog");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog) == 0x0000C8, "Wrong size on MoreHeistAtmoVarObjectHeist_C_SetHeightFog");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, ZLocation) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::ZLocation' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, Density) == 0x000004, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::Density' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, Falloff) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::Falloff' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, FogColor) == 0x00000C, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::FogColor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SetHeightFog, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000034, "Member 'MoreHeistAtmoVarObjectHeist_C_SetHeightFog::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.OverrideSky
// 0x00D8 (0x00D8 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_OverrideSky final
{
public:
	bool                                          OverrideIntensity;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkylightIntensity;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkyMaterials                                 SkyboxType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideColors;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DirLightColor;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirLightIntensityAdd;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 SkylightColor;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterByteInteger_ReturnValue;           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESkyMaterials, class UMaterialInstance*> CallFunc_GetSkyboxMaterials_AllMaterials;          // 0x0048(0x0050)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Map_Find_Value;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSkybox_SkyboxActor;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              CallFunc_GetActorOfClass_ReturnValue_1;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              CallFunc_GetActorOfClass_ReturnValue_2;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSkybox_SkyboxActor_1;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_OverrideSky) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_OverrideSky");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_OverrideSky) == 0x0000D8, "Wrong size on MoreHeistAtmoVarObjectHeist_C_OverrideSky");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, OverrideIntensity) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::OverrideIntensity' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, SkylightIntensity) == 0x000004, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::SkylightIntensity' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, SkyboxType) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::SkyboxType' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, OverrideColors) == 0x000009, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::OverrideColors' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, DirLightColor) == 0x00000C, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::DirLightColor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, DirLightIntensityAdd) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::DirLightIntensityAdd' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, SkylightColor) == 0x000014, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::SkylightColor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000030, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000044, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GreaterByteInteger_ReturnValue) == 0x000045, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GreaterByteInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetSkyboxMaterials_AllMaterials) == 0x000048, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetSkyboxMaterials_AllMaterials' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000098, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetSkybox_SkyboxActor) == 0x0000B0, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetSkybox_SkyboxActor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0000B8, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetActorOfClass_ReturnValue_2) == 0x0000C8, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetActorOfClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideSky, CallFunc_GetSkybox_SkyboxActor_1) == 0x0000D0, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideSky::CallFunc_GetSkybox_SkyboxActor_1' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.DeleteSunMoon
// 0x00A0 (0x00A0 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANiagaraActor*>                  CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANiagaraActor*                          CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon) == 0x0000A0, "Wrong size on MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000011, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001C, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Array_Get_Item) == 0x000038, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Contains_ReturnValue) == 0x000058, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000060, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_GetDisplayName_ReturnValue_1) == 0x000088, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon, CallFunc_Contains_ReturnValue_1) == 0x000098, "Member 'MoreHeistAtmoVarObjectHeist_C_DeleteSunMoon::CallFunc_Contains_ReturnValue_1' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.SpawnRain
// 0x0070 (0x0070 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_SpawnRain final
{
public:
	int32                                         MinIntensity;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxIntensity;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZOffset;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 RainColor;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 SplashColor;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         HideRainRoomNames;                                 // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARainActor_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_SpawnRain) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_SpawnRain");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_SpawnRain) == 0x000070, "Wrong size on MoreHeistAtmoVarObjectHeist_C_SpawnRain");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, MinIntensity) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::MinIntensity' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, MaxIntensity) == 0x000004, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::MaxIntensity' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, ZOffset) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::ZOffset' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, RainColor) == 0x00000C, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::RainColor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, SplashColor) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::SplashColor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, HideRainRoomNames) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::HideRainRoomNames' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_SpawnRain, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'MoreHeistAtmoVarObjectHeist_C_SpawnRain::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.AreCompatible
// 0x05D0 (0x05D0 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_AreCompatible final
{
public:
	EWeatherType                                  WeatherType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeType                                     TimeType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AreCompatible_0;                                   // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0xD];                                        // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSettings                          CallFunc_GetRowOfTimeType_Settings;                // 0x0010(0x05B0)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_AreCompatible) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_AreCompatible");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_AreCompatible) == 0x0005D0, "Wrong size on MoreHeistAtmoVarObjectHeist_C_AreCompatible");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, WeatherType) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::WeatherType' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, TimeType) == 0x000001, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::TimeType' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, AreCompatible_0) == 0x000002, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::AreCompatible_0' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, CallFunc_GetRowOfTimeType_Settings) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::CallFunc_GetRowOfTimeType_Settings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, CallFunc_Array_Contains_ReturnValue) == 0x0005C0, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_AreCompatible, CallFunc_Not_PreBool_ReturnValue) == 0x0005C1, "Member 'MoreHeistAtmoVarObjectHeist_C_AreCompatible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.OverrideAtmosphericFog
// 0x0008 (0x0008 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog final
{
public:
	class AAtmosphericFog*                        CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog) == 0x000008, "Wrong size on MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideAtmosphericFog::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.GetRowOfTimeType
// 0x1180 (0x1180 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType final
{
public:
	ETimeType                                     TimeType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSettings                          Settings;                                          // 0x0010(0x05B0)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeatherType>                          K2Node_MakeArray_Array;                            // 0x05D0(0x0010)(ReferenceParm)
	struct FTimeSettings                          K2Node_MakeStruct_TimeSettings;                    // 0x05E0(0x05B0)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0B90(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0BA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0xF];                                      // 0x0BB1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSettings                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0BC0(0x05B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType) == 0x001180, "Wrong size on MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, TimeType) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::TimeType' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, Settings) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::Settings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, Temp_int_Array_Index_Variable) == 0x0005C0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, Temp_int_Loop_Counter_Variable) == 0x0005C4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_Add_IntInt_ReturnValue) == 0x0005C8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, K2Node_MakeArray_Array) == 0x0005D0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, K2Node_MakeStruct_TimeSettings) == 0x0005E0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::K2Node_MakeStruct_TimeSettings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000B90, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_Array_Length_ReturnValue) == 0x000BA0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_Array_Get_Item) == 0x000BA4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_Less_IntInt_ReturnValue) == 0x000BB0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_GetDataTableRowFromName_OutRow) == 0x000BC0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x001170, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001171, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfTimeType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.GetRowOfWeatherType
// 0x0148 (0x0148 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType final
{
public:
	EWeatherType                                  WeatherType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeatherSettings                       Settings;                                          // 0x0008(0x0058)(Parm, OutParm, HasGetValueTypeHash)
	struct FWeatherSettings                       K2Node_MakeStruct_WeatherSettings;                 // 0x0060(0x0058)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeatherSettings                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType) == 0x000148, "Wrong size on MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, WeatherType) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::WeatherType' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, Settings) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::Settings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, K2Node_MakeStruct_WeatherSettings) == 0x000060, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::K2Node_MakeStruct_WeatherSettings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000140, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_Less_IntInt_ReturnValue) == 0x000141, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000142, "Member 'MoreHeistAtmoVarObjectHeist_C_GetRowOfWeatherType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.OverrideProcessingVolume
// 0x05B0 (0x05B0 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume final
{
public:
	struct FPostProcessSettings                   Settings;                                          // 0x0000(0x0570)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0580(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume) == 0x0005B0, "Wrong size on MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, Settings) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::Settings' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, Temp_int_Array_Index_Variable) == 0x000570, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, Temp_int_Loop_Counter_Variable) == 0x000574, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000578, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, CallFunc_GetAllActorsOfClass_OutActors) == 0x000580, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, CallFunc_Array_Length_ReturnValue) == 0x000590, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, CallFunc_Array_Get_Item) == 0x000598, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume, CallFunc_Less_IntInt_ReturnValue) == 0x0005A0, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideProcessingVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.GetSkybox
// 0x0098 (0x0098 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_GetSkybox final
{
public:
	class AActor*                                 SkyboxActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_GetSkybox) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_GetSkybox");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_GetSkybox) == 0x000098, "Wrong size on MoreHeistAtmoVarObjectHeist_C_GetSkybox");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, SkyboxActor) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::SkyboxActor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000018, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Array_Get_Item) == 0x000038, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_GetMaterials_ReturnValue) == 0x000058, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_GetObjectName_ReturnValue) == 0x000078, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Contains_ReturnValue) == 0x00008C, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008D, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_Contains_ReturnValue_1) == 0x00008E, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_BooleanAND_ReturnValue_1) == 0x00008F, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkybox, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkybox::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.OverrideVolumetricClouds
// 0x0090 (0x0090 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds final
{
public:
	float                                         Altitude;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxSize;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSkybox_SkyboxActor;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVolumetricCloud*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds) == 0x000010, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds) == 0x000090, "Wrong size on MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, Altitude) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::Altitude' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, SkyboxSize) == 0x000004, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::SkyboxSize' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_GetSkybox_SkyboxActor) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_GetSkybox_SkyboxActor' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_GetActorScale3D_ReturnValue) == 0x000060, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'MoreHeistAtmoVarObjectHeist_C_OverrideVolumetricClouds::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.GetSkyboxMaterials
// 0x01C8 (0x01C8 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials final
{
public:
	bool                                          Newer;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESkyMaterials, class UMaterialInstance*> AllMaterials;                                      // 0x0008(0x0050)(Parm, OutParm)
	TMap<ESkyMaterials, class UMaterialInstance*> TmpDictionary;                                     // 0x0058(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPath_OutAssetData;             // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPath_ReturnValue;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0118(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullName_ReturnValue;                  // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials) == 0x0001C8, "Wrong size on MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Newer) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Newer' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, AllMaterials) == 0x000008, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::AllMaterials' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, TmpDictionary) == 0x000058, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::TmpDictionary' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Temp_int_Variable) == 0x0000AC, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000B0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetValidValue_ReturnValue) == 0x0000B1, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Temp_int_Variable_1) == 0x0000B4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000C0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000D0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000D1, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000D4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D9, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000E8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetAssetRegistry_ReturnValue) == 0x0000F0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetAssetsByPath_OutAssetData) == 0x000100, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetAssetsByPath_OutAssetData' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetAssetsByPath_ReturnValue) == 0x000110, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetAssetsByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Array_Get_Item) == 0x000118, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetFullName_ReturnValue) == 0x000198, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetFullName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_BooleanAND_ReturnValue) == 0x0001A8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_Contains_ReturnValue) == 0x0001A9, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, CallFunc_GetAsset_ReturnValue) == 0x0001B0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, K2Node_DynamicCast_AsMaterial_Instance) == 0x0001B8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetSkyboxMaterials::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C.GetHeistSkyboxMat
// 0x0168 (0x0168 - 0x0000)
struct MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat final
{
public:
	class FName                                   DirectoryPath;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AssetName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESkyMaterials                                 SkyMatEnum;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESkyMaterials, class UMaterialInstance*> Dictionary;                                        // 0x0028(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPath_OutAssetData;             // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPath_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x00B0(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullName_ReturnValue;                  // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat) == 0x000008, "Wrong alignment on MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat");
static_assert(sizeof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat) == 0x000168, "Wrong size on MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, DirectoryPath) == 0x000000, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::DirectoryPath' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, AssetName) == 0x000010, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::AssetName' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, SkyMatEnum) == 0x000020, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::SkyMatEnum' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, Dictionary) == 0x000028, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::Dictionary' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, Temp_bool_True_if_break_was_hit_Variable) == 0x000084, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_GetAssetRegistry_ReturnValue) == 0x000088, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_GetAssetsByPath_OutAssetData) == 0x000098, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_GetAssetsByPath_OutAssetData' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_GetAssetsByPath_ReturnValue) == 0x0000A8, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_GetAssetsByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_GetAsset_ReturnValue) == 0x000130, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, K2Node_DynamicCast_AsMaterial_Instance) == 0x000140, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_GetFullName_ReturnValue) == 0x000150, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_GetFullName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat, CallFunc_Contains_ReturnValue) == 0x000160, "Member 'MoreHeistAtmoVarObjectHeist_C_GetHeistSkyboxMat::CallFunc_Contains_ReturnValue' has a wrong offset!");

}

