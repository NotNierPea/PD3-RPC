#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PageCycler

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PageCycler.WBP_PageCycler_C.ExecuteUbergraph_WBP_PageCycler
// 0x0078 (0x0078 - 0x0000)
struct WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InIndex;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InNewIndex;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InIndex_1;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PageCycleCounter_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PageCycleCounter_C*                CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bKeyboardMouseInput;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler) == 0x000008, "Wrong alignment on WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler");
static_assert(sizeof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler) == 0x000078, "Wrong size on WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, EntryPoint) == 0x000000, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CustomEvent_InIndex) == 0x000004, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CustomEvent_InIndex' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CustomEvent_InNewIndex) == 0x000008, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CustomEvent_InNewIndex' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CustomEvent_InIndex_1) == 0x00000C, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CustomEvent_InIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, Temp_int_Variable) == 0x00001C, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_MakeStruct_Margin) == 0x000020, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_CustomEvent_bKeyboardMouseInput) == 0x000068, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_CustomEvent_bKeyboardMouseInput' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, K2Node_Event_IsDesignTime) == 0x000069, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler, CallFunc_AddChild_ReturnValue) == 0x000070, "Member 'WBP_PageCycler_C_ExecuteUbergraph_WBP_PageCycler::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PageCycler_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PageCycler_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PageCycler_C_PreConstruct");
static_assert(sizeof(WBP_PageCycler_C_PreConstruct) == 0x000001, "Wrong size on WBP_PageCycler_C_PreConstruct");
static_assert(offsetof(WBP_PageCycler_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PageCycler_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.OnInputTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_PageCycler_C_OnInputTypeChanged final
{
public:
	bool                                          bKeyboardMouseInput;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PageCycler_C_OnInputTypeChanged) == 0x000001, "Wrong alignment on WBP_PageCycler_C_OnInputTypeChanged");
static_assert(sizeof(WBP_PageCycler_C_OnInputTypeChanged) == 0x000001, "Wrong size on WBP_PageCycler_C_OnInputTypeChanged");
static_assert(offsetof(WBP_PageCycler_C_OnInputTypeChanged, bKeyboardMouseInput) == 0x000000, "Member 'WBP_PageCycler_C_OnInputTypeChanged::bKeyboardMouseInput' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.UpdateActiveIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_PageCycler_C_UpdateActiveIndex final
{
public:
	int32                                         InNewIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PageCycler_C_UpdateActiveIndex) == 0x000004, "Wrong alignment on WBP_PageCycler_C_UpdateActiveIndex");
static_assert(sizeof(WBP_PageCycler_C_UpdateActiveIndex) == 0x000004, "Wrong size on WBP_PageCycler_C_UpdateActiveIndex");
static_assert(offsetof(WBP_PageCycler_C_UpdateActiveIndex, InNewIndex) == 0x000000, "Member 'WBP_PageCycler_C_UpdateActiveIndex::InNewIndex' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.OnAddedPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_PageCycler_C_OnAddedPage final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PageCycler_C_OnAddedPage) == 0x000004, "Wrong alignment on WBP_PageCycler_C_OnAddedPage");
static_assert(sizeof(WBP_PageCycler_C_OnAddedPage) == 0x000004, "Wrong size on WBP_PageCycler_C_OnAddedPage");
static_assert(offsetof(WBP_PageCycler_C_OnAddedPage, InIndex) == 0x000000, "Member 'WBP_PageCycler_C_OnAddedPage::InIndex' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.OnNavItemClicked
// 0x0004 (0x0004 - 0x0000)
struct WBP_PageCycler_C_OnNavItemClicked final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PageCycler_C_OnNavItemClicked) == 0x000004, "Wrong alignment on WBP_PageCycler_C_OnNavItemClicked");
static_assert(sizeof(WBP_PageCycler_C_OnNavItemClicked) == 0x000004, "Wrong size on WBP_PageCycler_C_OnNavItemClicked");
static_assert(offsetof(WBP_PageCycler_C_OnNavItemClicked, InIndex) == 0x000000, "Member 'WBP_PageCycler_C_OnNavItemClicked::InIndex' has a wrong offset!");

// Function WBP_PageCycler.WBP_PageCycler_C.CreateAndAddPageCount
// 0x0040 (0x0040 - 0x0000)
struct WBP_PageCycler_C_CreateAndAddPageCount final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InIndex)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	class UWBP_PageCycleCounter_C*                CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PageCycler_C_CreateAndAddPageCount) == 0x000008, "Wrong alignment on WBP_PageCycler_C_CreateAndAddPageCount");
static_assert(sizeof(WBP_PageCycler_C_CreateAndAddPageCount) == 0x000040, "Wrong size on WBP_PageCycler_C_CreateAndAddPageCount");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, Index_0) == 0x000000, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, CallFunc_Array_AddUnique_ReturnValue) == 0x000028, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PageCycler_C_CreateAndAddPageCount, K2Node_MakeStruct_Margin) == 0x00002C, "Member 'WBP_PageCycler_C_CreateAndAddPageCount::K2Node_MakeStruct_Margin' has a wrong offset!");

}

