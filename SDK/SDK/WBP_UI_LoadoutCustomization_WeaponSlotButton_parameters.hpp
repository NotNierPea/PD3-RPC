#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_LoadoutCustomization_WeaponSlotButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZEquippableLoadoutSlot                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZInventoryBaseData*            CallFunc_GetWeaponInventoryData_ReturnValue;       // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton) == 0x000008, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton) == 0x000068, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, Temp_byte_Variable) == 0x000004, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, Temp_text_Variable) == 0x000008, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, Temp_text_Variable_1) == 0x000020, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, K2Node_Event_bInIsHovered) == 0x000039, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, K2Node_Event_bInHasFocus) == 0x00003A, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, CallFunc_GetWeaponInventoryData_ReturnValue) == 0x000040, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::CallFunc_GetWeaponInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, K2Node_Select_Default) == 0x000048, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ExecuteUbergraph_WBP_UI_LoadoutCustomization_WeaponSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused) == 0x000008, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused) == 0x000028, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_OnFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.InitializeWeaponVisuals
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals final
{
public:
	class USBZInventoryBaseData*                  InInventoryData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZEquippableLoadoutSlot                     Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0010(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInSlotLevel_ReturnValue;         // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0070(0x0018)()
	ESBZEquippableLoadoutSlot                     Temp_byte_Variable_5;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0090(0x0018)()
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals) == 0x000008, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals) == 0x0000A8, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, InInventoryData) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::InInventoryData' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, NewLocalVar_0) == 0x000008, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable) == 0x00000C, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_GetDisplayName_OutDisplayName) == 0x000010, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_GetDisplayName_OutHasText) == 0x000028, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_bool_Variable) == 0x00002A, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable_1) == 0x00002B, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable_2) == 0x00002C, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_bool_Variable_1) == 0x00002D, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable_3) == 0x00002E, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable_4) == 0x00002F, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_GetWeaponInSlotLevel_ReturnValue) == 0x000030, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_GetWeaponInSlotLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_IsEmpty_ReturnValue) == 0x000034, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000035, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, K2Node_Select_Default) == 0x000036, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, K2Node_Select_Default_1) == 0x000037, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_text_Variable) == 0x000050, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, K2Node_Select_Default_2) == 0x000068, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_text_Variable_1) == 0x000070, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, Temp_byte_Variable_5) == 0x000088, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals, K2Node_Select_Default_3) == 0x000090, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_InitializeWeaponVisuals::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.Set Weapon Name Colour
// 0x0088 (0x0088 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour final
{
public:
	struct FLinearColor                           DesiredColour;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	const class USBZEquippableData*               CallFunc_GetWeaponInSlot_ReturnValue;              // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0060(0x0028)()
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour) == 0x000008, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour) == 0x000088, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, DesiredColour) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::DesiredColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, CallFunc_GetWeaponInSlot_ReturnValue) == 0x000038, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::CallFunc_GetWeaponInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, CallFunc_IsEmpty_ReturnValue) == 0x000058, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour, K2Node_MakeStruct_SlateColor_1) == 0x000060, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_Set_Weapon_Name_Colour::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function WBP_UI_LoadoutCustomization_WeaponSlotButton.WBP_UI_LoadoutCustomization_WeaponSlotButton_C.RefreshVisuals
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals) == 0x000001, "Wrong alignment on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals");
static_assert(sizeof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals) == 0x000002, "Wrong size on WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000001, "Member 'WBP_UI_LoadoutCustomization_WeaponSlotButton_C_RefreshVisuals::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");

}

