#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VendingMachine_Base

#include "Basic.hpp"

#include "BP_Master_Light_Fixture_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VendingMachine_Base.BP_VendingMachine_Base_C
// 0x0020 (0x0360 - 0x0340)
class ABP_VendingMachine_Base_C : public ABP_Master_Light_Fixture_C
{
public:
	class USBZLifeActionSlot*                     SBZLifeActionSlot;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionComponent*                SBZLifeAction;                                     // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 SBZLifeActionInstance;                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VendingMachine_Base_C">();
	}
	static class ABP_VendingMachine_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VendingMachine_Base_C>();
	}
};
static_assert(alignof(ABP_VendingMachine_Base_C) == 0x000010, "Wrong alignment on ABP_VendingMachine_Base_C");
static_assert(sizeof(ABP_VendingMachine_Base_C) == 0x000360, "Wrong size on ABP_VendingMachine_Base_C");
static_assert(offsetof(ABP_VendingMachine_Base_C, SBZLifeActionSlot) == 0x000340, "Member 'ABP_VendingMachine_Base_C::SBZLifeActionSlot' has a wrong offset!");
static_assert(offsetof(ABP_VendingMachine_Base_C, SBZLifeAction) == 0x000348, "Member 'ABP_VendingMachine_Base_C::SBZLifeAction' has a wrong offset!");
static_assert(offsetof(ABP_VendingMachine_Base_C, SBZLifeActionInstance) == 0x000350, "Member 'ABP_VendingMachine_Base_C::SBZLifeActionInstance' has a wrong offset!");

}

