#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Results_Reward_ChallengeProgress

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Results_Reward_ChallengeProgress.WBP_UI_Results_Reward_ChallengeProgress_C
// 0x0100 (0x0390 - 0x0290)
class UWBP_UI_Results_Reward_ChallengeProgress_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Frame;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UI_ProgressBarAnimate_C*           ProgressBar_ChallengeProgress;                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        SBZText_Completed;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        SBZText_Progress;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        SBZText_Title;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_ProgressInfo;                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSBZChallengeData                      ChallengeData;                                     // 0x02D8(0x00A8)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FLinearColor                           GainColor;                                         // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_Results_Reward_ChallengeProgress(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetData(const struct FSBZChallengeData& InChallengeData, bool IsHackUntilAccelbyteFix);
	void AnimationRewardProgression();
	void PlayAppearAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Results_Reward_ChallengeProgress_C">();
	}
	static class UWBP_UI_Results_Reward_ChallengeProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Results_Reward_ChallengeProgress_C>();
	}
};
static_assert(alignof(UWBP_UI_Results_Reward_ChallengeProgress_C) == 0x000008, "Wrong alignment on UWBP_UI_Results_Reward_ChallengeProgress_C");
static_assert(sizeof(UWBP_UI_Results_Reward_ChallengeProgress_C) == 0x000390, "Wrong size on UWBP_UI_Results_Reward_ChallengeProgress_C");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, UberGraphFrame) == 0x000290, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, FadeIn) == 0x000298, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, Border_Frame) == 0x0002A0, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::Border_Frame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, Image_Icon) == 0x0002A8, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, ProgressBar_ChallengeProgress) == 0x0002B0, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::ProgressBar_ChallengeProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, SBZText_Completed) == 0x0002B8, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::SBZText_Completed' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, SBZText_Progress) == 0x0002C0, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::SBZText_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, SBZText_Title) == 0x0002C8, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::SBZText_Title' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, WidgetSwitcher_ProgressInfo) == 0x0002D0, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::WidgetSwitcher_ProgressInfo' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, ChallengeData) == 0x0002D8, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::ChallengeData' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Results_Reward_ChallengeProgress_C, GainColor) == 0x000380, "Member 'UWBP_UI_Results_Reward_ChallengeProgress_C::GainColor' has a wrong offset!");

}

