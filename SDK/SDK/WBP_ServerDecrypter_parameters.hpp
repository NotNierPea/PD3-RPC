#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ServerDecrypter

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ServerDecrypter.WBP_ServerDecrypter_C.setText
// 0x0038 (0x0038 - 0x0000)
struct WBP_ServerDecrypter_C_setText final
{
public:
	class FText                                   top;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   bottom;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerDecrypter_C_setText) == 0x000008, "Wrong alignment on WBP_ServerDecrypter_C_setText");
static_assert(sizeof(WBP_ServerDecrypter_C_setText) == 0x000038, "Wrong size on WBP_ServerDecrypter_C_setText");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, top) == 0x000000, "Member 'WBP_ServerDecrypter_C_setText::top' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, bottom) == 0x000018, "Member 'WBP_ServerDecrypter_C_setText::bottom' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, Temp_bool_Variable) == 0x000030, "Member 'WBP_ServerDecrypter_C_setText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, CallFunc_TextIsEmpty_ReturnValue) == 0x000031, "Member 'WBP_ServerDecrypter_C_setText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, Temp_byte_Variable) == 0x000032, "Member 'WBP_ServerDecrypter_C_setText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, Temp_byte_Variable_1) == 0x000033, "Member 'WBP_ServerDecrypter_C_setText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setText, K2Node_Select_Default) == 0x000034, "Member 'WBP_ServerDecrypter_C_setText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ServerDecrypter.WBP_ServerDecrypter_C.setMachineRunning
// 0x0005 (0x0005 - 0x0000)
struct WBP_ServerDecrypter_C_setMachineRunning final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerDecrypter_C_setMachineRunning) == 0x000001, "Wrong alignment on WBP_ServerDecrypter_C_setMachineRunning");
static_assert(sizeof(WBP_ServerDecrypter_C_setMachineRunning) == 0x000005, "Wrong size on WBP_ServerDecrypter_C_setMachineRunning");
static_assert(offsetof(WBP_ServerDecrypter_C_setMachineRunning, State) == 0x000000, "Member 'WBP_ServerDecrypter_C_setMachineRunning::State' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setMachineRunning, Temp_bool_Variable) == 0x000001, "Member 'WBP_ServerDecrypter_C_setMachineRunning::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setMachineRunning, Temp_byte_Variable) == 0x000002, "Member 'WBP_ServerDecrypter_C_setMachineRunning::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setMachineRunning, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ServerDecrypter_C_setMachineRunning::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setMachineRunning, K2Node_Select_Default) == 0x000004, "Member 'WBP_ServerDecrypter_C_setMachineRunning::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ServerDecrypter.WBP_ServerDecrypter_C.setProgress
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerDecrypter_C_setProgress final
{
public:
	float                                         progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerDecrypter_C_setProgress) == 0x000004, "Wrong alignment on WBP_ServerDecrypter_C_setProgress");
static_assert(sizeof(WBP_ServerDecrypter_C_setProgress) == 0x000004, "Wrong size on WBP_ServerDecrypter_C_setProgress");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgress, progress) == 0x000000, "Member 'WBP_ServerDecrypter_C_setProgress::progress' has a wrong offset!");

// Function WBP_ServerDecrypter.WBP_ServerDecrypter_C.setProgressbarVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_ServerDecrypter_C_setProgressbarVisibility final
{
public:
	bool                                          visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerDecrypter_C_setProgressbarVisibility) == 0x000001, "Wrong alignment on WBP_ServerDecrypter_C_setProgressbarVisibility");
static_assert(sizeof(WBP_ServerDecrypter_C_setProgressbarVisibility) == 0x000005, "Wrong size on WBP_ServerDecrypter_C_setProgressbarVisibility");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgressbarVisibility, visible) == 0x000000, "Member 'WBP_ServerDecrypter_C_setProgressbarVisibility::visible' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgressbarVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_ServerDecrypter_C_setProgressbarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgressbarVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_ServerDecrypter_C_setProgressbarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgressbarVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ServerDecrypter_C_setProgressbarVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerDecrypter_C_setProgressbarVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_ServerDecrypter_C_setProgressbarVisibility::K2Node_Select_Default' has a wrong offset!");

}

