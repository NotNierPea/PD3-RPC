#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_ModMeta

#include "Basic.hpp"

#include "UDE_ModEnvironment_structs.hpp"
#include "UDS_ModActorStruct_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_ModMeta.PDA_ModMeta_C
// 0x00B8 (0x00F0 - 0x0038)
class UPDA_ModMeta_C : public UPrimaryDataAsset
{
public:
	class FName                                   ModID;                                             // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ModVersion;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EUDE_ModEnvironment                           ModEnvironment;                                    // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ModName;                                           // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ModAuthors;                                        // 0x0068(0x0010)(Edit, BlueprintVisible)
	class FText                                   ModDescription;                                    // 0x0078(0x0018)(Edit, BlueprintVisible)
	TArray<class UPD3HeistDataAsset*>             Heists;                                            // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<class UPDA_ModMeta_C*>                 Dependencies;                                      // 0x00A0(0x0010)(Edit, BlueprintVisible, AdvancedDisplay)
	class FString                                 License;                                           // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash)
	TArray<class UClass*>                         PersistentObjects;                                 // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FUDS_ModActorStruct>            ModActors;                                         // 0x00D0(0x0010)(Edit, BlueprintVisible)
	class FString                                 ModLoaderVersion;                                  // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_ModMeta_C">();
	}
	static class UPDA_ModMeta_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_ModMeta_C>();
	}
};
static_assert(alignof(UPDA_ModMeta_C) == 0x000008, "Wrong alignment on UPDA_ModMeta_C");
static_assert(sizeof(UPDA_ModMeta_C) == 0x0000F0, "Wrong size on UPDA_ModMeta_C");
static_assert(offsetof(UPDA_ModMeta_C, ModID) == 0x000038, "Member 'UPDA_ModMeta_C::ModID' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModVersion) == 0x000048, "Member 'UPDA_ModMeta_C::ModVersion' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModEnvironment) == 0x000058, "Member 'UPDA_ModMeta_C::ModEnvironment' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModName) == 0x00005C, "Member 'UPDA_ModMeta_C::ModName' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModAuthors) == 0x000068, "Member 'UPDA_ModMeta_C::ModAuthors' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModDescription) == 0x000078, "Member 'UPDA_ModMeta_C::ModDescription' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, Heists) == 0x000090, "Member 'UPDA_ModMeta_C::Heists' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, Dependencies) == 0x0000A0, "Member 'UPDA_ModMeta_C::Dependencies' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, License) == 0x0000B0, "Member 'UPDA_ModMeta_C::License' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, PersistentObjects) == 0x0000C0, "Member 'UPDA_ModMeta_C::PersistentObjects' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModActors) == 0x0000D0, "Member 'UPDA_ModMeta_C::ModActors' has a wrong offset!");
static_assert(offsetof(UPDA_ModMeta_C, ModLoaderVersion) == 0x0000E0, "Member 'UPDA_ModMeta_C::ModLoaderVersion' has a wrong offset!");

}

