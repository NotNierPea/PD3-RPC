#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArmorChunk_StatLine

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.ExecuteUbergraph_WBP_ArmorChunk_StatLine
// 0x0008 (0x0008 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine) == 0x000004, "Wrong alignment on WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine) == 0x000008, "Wrong size on WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine, EntryPoint) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_ArmorChunk_StatLine_C_ExecuteUbergraph_WBP_ArmorChunk_StatLine::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ArmorChunk_StatLine_C_PreConstruct");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_PreConstruct) == 0x000001, "Wrong size on WBP_ArmorChunk_StatLine_C_PreConstruct");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.SetValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_SetValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_SetValue) == 0x000008, "Wrong alignment on WBP_ArmorChunk_StatLine_C_SetValue");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_SetValue) == 0x000020, "Wrong size on WBP_ArmorChunk_StatLine_C_SetValue");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetValue, Value) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_SetValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_ArmorChunk_StatLine_C_SetValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.SetPlateRegen
// 0x0070 (0x0070 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_SetPlateRegen final
{
public:
	float                                         PlateRegen;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_SetPlateRegen) == 0x000008, "Wrong alignment on WBP_ArmorChunk_StatLine_C_SetPlateRegen");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_SetPlateRegen) == 0x000070, "Wrong size on WBP_ArmorChunk_StatLine_C_SetPlateRegen");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetPlateRegen, PlateRegen) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_SetPlateRegen::PlateRegen' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetPlateRegen, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_ArmorChunk_StatLine_C_SetPlateRegen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetPlateRegen, K2Node_MakeArray_Array) == 0x000048, "Member 'WBP_ArmorChunk_StatLine_C_SetPlateRegen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetPlateRegen, CallFunc_Format_ReturnValue) == 0x000058, "Member 'WBP_ArmorChunk_StatLine_C_SetPlateRegen::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.SetAmmoCapacity
// 0x0090 (0x0090 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_SetAmmoCapacity final
{
public:
	float                                         AmmoCap;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity) == 0x000008, "Wrong alignment on WBP_ArmorChunk_StatLine_C_SetAmmoCapacity");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity) == 0x000090, "Wrong size on WBP_ArmorChunk_StatLine_C_SetAmmoCapacity");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, AmmoCap) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::AmmoCap' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetAmmoCapacity, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_ArmorChunk_StatLine_C_SetAmmoCapacity::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_ArmorChunk_StatLine.WBP_ArmorChunk_StatLine_C.SetSpeedPenalty
// 0x0080 (0x0080 - 0x0000)
struct WBP_ArmorChunk_StatLine_C_SetSpeedPenalty final
{
public:
	ESBZArmorSpeedPenalty                         SpeedPenalty;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZArmorSpeedPenalty                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty) == 0x000008, "Wrong alignment on WBP_ArmorChunk_StatLine_C_SetSpeedPenalty");
static_assert(sizeof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty) == 0x000080, "Wrong size on WBP_ArmorChunk_StatLine_C_SetSpeedPenalty");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, SpeedPenalty) == 0x000000, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::SpeedPenalty' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, Temp_byte_Variable) == 0x000001, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, Temp_text_Variable) == 0x000008, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, Temp_text_Variable_1) == 0x000020, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, Temp_text_Variable_2) == 0x000038, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, Temp_text_Variable_3) == 0x000050, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_StatLine_C_SetSpeedPenalty, K2Node_Select_Default) == 0x000068, "Member 'WBP_ArmorChunk_StatLine_C_SetSpeedPenalty::K2Node_Select_Default' has a wrong offset!");

}

