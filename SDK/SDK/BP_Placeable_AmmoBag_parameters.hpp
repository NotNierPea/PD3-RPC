#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Placeable_AmmoBag

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.ExecuteUbergraph_BP_Placeable_AmmoBag
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZShoutTargetComponent*               K2Node_ComponentBoundEvent_ShoutTarget;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_ComponentBoundEvent_Shouter;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ChargesChangeTo;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_Component;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bReset;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag");
static_assert(sizeof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag) == 0x0000D8, "Wrong size on BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, EntryPoint) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_struct_Variable) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_delegate_Variable) == 0x000018, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_struct_Variable_1) == 0x000030, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_struct_Variable_2) == 0x000058, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, CallFunc_PostEvent_ReturnValue) == 0x00007C, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_ShoutTarget) == 0x000080, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_ShoutTarget' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Shouter) == 0x000088, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Shouter' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_Event_ChargesChangeTo) == 0x000090, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_Event_ChargesChangeTo' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_Event_bDoCosmetics) == 0x000094, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Component) == 0x000098, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_bReset) == 0x0000A0, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Interactable_1) == 0x0000A8, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Interactor_1) == 0x0000B0, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x0000B8, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, CallFunc_PostEvent_ReturnValue_1) == 0x0000BC, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Interactable) == 0x0000C0, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_Interactor) == 0x0000C8, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x0000D0, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag, CallFunc_PostEvent_ReturnValue_2) == 0x0000D4, "Member 'BP_Placeable_AmmoBag_C_ExecuteUbergraph_BP_Placeable_AmmoBag::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature");
static_assert(sizeof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature) == 0x000010, "Wrong size on BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature, Component) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature::Component' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature, bReset) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_BndEvt__BP_Placeable_AmmoBag_ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature::bReset' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.OnChargesChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_Placeable_AmmoBag_C_OnChargesChanged final
{
public:
	float                                         ChargesChangeTo;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_OnChargesChanged) == 0x000004, "Wrong alignment on BP_Placeable_AmmoBag_C_OnChargesChanged");
static_assert(sizeof(BP_Placeable_AmmoBag_C_OnChargesChanged) == 0x000008, "Wrong size on BP_Placeable_AmmoBag_C_OnChargesChanged");
static_assert(offsetof(BP_Placeable_AmmoBag_C_OnChargesChanged, ChargesChangeTo) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_OnChargesChanged::ChargesChangeTo' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_OnChargesChanged, bDoCosmetics) == 0x000004, "Member 'BP_Placeable_AmmoBag_C_OnChargesChanged::bDoCosmetics' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature final
{
public:
	class USBZShoutTargetComponent*               ShoutTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Shouter;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature");
static_assert(sizeof(BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature, ShoutTarget) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature::ShoutTarget' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature, Shouter) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature::Shouter' has a wrong offset!");

// Function BP_Placeable_AmmoBag.BP_Placeable_AmmoBag_C.UpdateCharges
// 0x0020 (0x0020 - 0x0000)
struct BP_Placeable_AmmoBag_C_UpdateCharges final
{
public:
	float                                         NewChargeCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Placeable_AmmoBag_C_UpdateCharges) == 0x000008, "Wrong alignment on BP_Placeable_AmmoBag_C_UpdateCharges");
static_assert(sizeof(BP_Placeable_AmmoBag_C_UpdateCharges) == 0x000020, "Wrong size on BP_Placeable_AmmoBag_C_UpdateCharges");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, NewChargeCount) == 0x000000, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::NewChargeCount' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, Temp_int_Variable) == 0x000004, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, Temp_int_Variable_1) == 0x00000C, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Placeable_AmmoBag_C_UpdateCharges, K2Node_Select_Default) == 0x000018, "Member 'BP_Placeable_AmmoBag_C_UpdateCharges::K2Node_Select_Default' has a wrong offset!");

}

