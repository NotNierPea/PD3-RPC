#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CivilianController

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_CivilianController.BP_CivilianController_C.ExecuteUbergraph_BP_CivilianController
// 0x0040 (0x0040 - 0x0000)
struct BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0004(0x000C)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZCivilianManager*                    CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllowedToFlee_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZCharacter*                          K2Node_DynamicCast_AsSBZCharacter;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController) == 0x000008, "Wrong alignment on BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController");
static_assert(sizeof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController) == 0x000040, "Wrong size on BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, EntryPoint) == 0x000000, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000004, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, K2Node_Event_PossessedPawn) == 0x000010, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, CallFunc_IsAllowedToFlee_ReturnValue) == 0x000020, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::CallFunc_IsAllowedToFlee_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, K2Node_DynamicCast_AsSBZCharacter) == 0x000030, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::K2Node_DynamicCast_AsSBZCharacter' has a wrong offset!");
static_assert(offsetof(BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CivilianController_C_ExecuteUbergraph_BP_CivilianController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CivilianController.BP_CivilianController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_CivilianController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CivilianController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_CivilianController_C_ReceivePossess");
static_assert(sizeof(BP_CivilianController_C_ReceivePossess) == 0x000008, "Wrong size on BP_CivilianController_C_ReceivePossess");
static_assert(offsetof(BP_CivilianController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_CivilianController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

}

