#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FOR_USBDrive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LocationBase_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FOR_USBDrive.BP_FOR_USBDrive_C
// 0x0010 (0x0378 - 0x0368)
class ABP_FOR_USBDrive_C final : public ABP_LocationBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FOR_USBDrive_C;                  // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZAIObjectiveComponent*               SBZAIObjective;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FOR_USBDrive(int32 EntryPoint);
	void OnStateChanged(int32 OldState, int32 NewState, bool bDoCosmetics);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FOR_USBDrive_C">();
	}
	static class ABP_FOR_USBDrive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FOR_USBDrive_C>();
	}
};
static_assert(alignof(ABP_FOR_USBDrive_C) == 0x000008, "Wrong alignment on ABP_FOR_USBDrive_C");
static_assert(sizeof(ABP_FOR_USBDrive_C) == 0x000378, "Wrong size on ABP_FOR_USBDrive_C");
static_assert(offsetof(ABP_FOR_USBDrive_C, UberGraphFrame_BP_FOR_USBDrive_C) == 0x000368, "Member 'ABP_FOR_USBDrive_C::UberGraphFrame_BP_FOR_USBDrive_C' has a wrong offset!");
static_assert(offsetof(ABP_FOR_USBDrive_C, SBZAIObjective) == 0x000370, "Member 'ABP_FOR_USBDrive_C::SBZAIObjective' has a wrong offset!");

}

