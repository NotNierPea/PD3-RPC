#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EscapeVan

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_EscapeVan.BP_EscapeVan_C.ExecuteUbergraph_BP_EscapeVan
// 0x0018 (0x0018 - 0x0000)
struct BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBagType*                      K2Node_ComponentBoundEvent_BagType;                // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyVariationToSkeletal_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan) == 0x000008, "Wrong alignment on BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan");
static_assert(sizeof(BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan) == 0x000018, "Wrong size on BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan");
static_assert(offsetof(BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan, EntryPoint) == 0x000000, "Member 'BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan, K2Node_ComponentBoundEvent_BagType) == 0x000008, "Member 'BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan::K2Node_ComponentBoundEvent_BagType' has a wrong offset!");
static_assert(offsetof(BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan, CallFunc_ApplyVariationToSkeletal_ReturnValue) == 0x000010, "Member 'BP_EscapeVan_C_ExecuteUbergraph_BP_EscapeVan::CallFunc_ApplyVariationToSkeletal_ReturnValue' has a wrong offset!");

// Function BP_EscapeVan.BP_EscapeVan_C.BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature final
{
public:
	const class USBZBagType*                      BagType;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature");
static_assert(sizeof(BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature) == 0x000008, "Wrong size on BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature");
static_assert(offsetof(BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature, BagType) == 0x000000, "Member 'BP_EscapeVan_C_BndEvt__BP_EscapeVan_SBZSecuredBagVisualize_K2Node_ComponentBoundEvent_0_SBZSecuredBagVisualizeBagAddedSignature__DelegateSignature::BagType' has a wrong offset!");

// Function BP_EscapeVan.BP_EscapeVan_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_EscapeVan_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_ApplyVariationToSkeletal_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EscapeVan_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_EscapeVan_C_UserConstructionScript");
static_assert(sizeof(BP_EscapeVan_C_UserConstructionScript) == 0x000001, "Wrong size on BP_EscapeVan_C_UserConstructionScript");
static_assert(offsetof(BP_EscapeVan_C_UserConstructionScript, CallFunc_ApplyVariationToSkeletal_ReturnValue) == 0x000000, "Member 'BP_EscapeVan_C_UserConstructionScript::CallFunc_ApplyVariationToSkeletal_ReturnValue' has a wrong offset!");

}

