#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoreHeistAtmoVarObjectHeist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WeatherSettings_structs.hpp"
#include "TimeSettings_structs.hpp"
#include "ModActorBase_classes.hpp"
#include "SkyMaterials_structs.hpp"
#include "WeatherType_structs.hpp"
#include "TimeType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MoreHeistAtmoVarObjectHeist.MoreHeistAtmoVarObjectHeist_C
// 0x0040 (0x0308 - 0x02C8)
class AMoreHeistAtmoVarObjectHeist_C : public AModActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MoreHeistAtmoVarObjectHeist_C;      // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 TargetLevelName;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FWeatherSettings& Settings)> OnWeatherSet;            // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FTimeSettings& TimeSettings)> OnTimeSet;              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMoreHeistAtmospherePersistent_C*       MoreHeistAtmospherePersistent;                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MoreHeistAtmoVarObjectHeist(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ProcessWeather(const struct FWeatherSettings& Settings);
	void Process_Time(const struct FTimeSettings& TimeSettings);
	void DeleteDirLight();
	void SetHeightFog(float ZLocation, float Density, float Falloff, const struct FColor& FogColor);
	void OverrideSky(bool OverrideIntensity, float SkylightIntensity, ESkyMaterials SkyboxType, bool OverrideColors, const struct FColor& DirLightColor, float DirLightIntensityAdd, const struct FColor& SkylightColor);
	void DeleteSunMoon();
	void SpawnRain(int32 MinIntensity, int32 MaxIntensity, float ZOffset, const struct FColor& RainColor, const struct FColor& SplashColor, TArray<class FString>& HideRainRoomNames);
	void AreCompatible(EWeatherType WeatherType, ETimeType TimeType, bool* AreCompatible_0);
	void OverrideAtmosphericFog();
	void GetRowOfTimeType(ETimeType TimeType, struct FTimeSettings* Settings);
	void GetRowOfWeatherType(EWeatherType WeatherType, struct FWeatherSettings* Settings);
	void OverrideProcessingVolume(const struct FPostProcessSettings& Settings);
	void GetSkybox(class AActor** SkyboxActor);
	void OverrideVolumetricClouds(float Altitude, float SkyboxSize);
	void GetSkyboxMaterials(bool Newer, TMap<ESkyMaterials, class UMaterialInstance*>* AllMaterials);
	void GetHeistSkyboxMat(class FName DirectoryPath, const class FString& AssetName, ESkyMaterials SkyMatEnum, TMap<ESkyMaterials, class UMaterialInstance*>& Dictionary);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MoreHeistAtmoVarObjectHeist_C">();
	}
	static class AMoreHeistAtmoVarObjectHeist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMoreHeistAtmoVarObjectHeist_C>();
	}
};
static_assert(alignof(AMoreHeistAtmoVarObjectHeist_C) == 0x000008, "Wrong alignment on AMoreHeistAtmoVarObjectHeist_C");
static_assert(sizeof(AMoreHeistAtmoVarObjectHeist_C) == 0x000308, "Wrong size on AMoreHeistAtmoVarObjectHeist_C");
static_assert(offsetof(AMoreHeistAtmoVarObjectHeist_C, UberGraphFrame_MoreHeistAtmoVarObjectHeist_C) == 0x0002C8, "Member 'AMoreHeistAtmoVarObjectHeist_C::UberGraphFrame_MoreHeistAtmoVarObjectHeist_C' has a wrong offset!");
static_assert(offsetof(AMoreHeistAtmoVarObjectHeist_C, TargetLevelName) == 0x0002D0, "Member 'AMoreHeistAtmoVarObjectHeist_C::TargetLevelName' has a wrong offset!");
static_assert(offsetof(AMoreHeistAtmoVarObjectHeist_C, OnWeatherSet) == 0x0002E0, "Member 'AMoreHeistAtmoVarObjectHeist_C::OnWeatherSet' has a wrong offset!");
static_assert(offsetof(AMoreHeistAtmoVarObjectHeist_C, OnTimeSet) == 0x0002F0, "Member 'AMoreHeistAtmoVarObjectHeist_C::OnTimeSet' has a wrong offset!");
static_assert(offsetof(AMoreHeistAtmoVarObjectHeist_C, MoreHeistAtmospherePersistent) == 0x000300, "Member 'AMoreHeistAtmoVarObjectHeist_C::MoreHeistAtmospherePersistent' has a wrong offset!");

}

