#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HW12DEV_WeaponStats_Entry_TwoText

#include "Basic.hpp"

#include "HW12DEV_WeaponStats_Entry_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HW12DEV_WeaponStats_Entry_TwoText.HW12DEV_WeaponStats_Entry_TwoText_C
// 0x0068 (0x0310 - 0x02A8)
class UHW12DEV_WeaponStats_Entry_TwoText_C final : public UHW12DEV_WeaponStats_Entry_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZUITextBlock*                        Text_WeaponStat_Label_1;                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Value1Text;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Value2Text;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           DowngradeColour;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UpgradeColour;                                     // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColour;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextSuffix;                                        // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_HW12DEV_WeaponStats_Entry_TwoText(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetBaseCompare(float Base, float Compare, bool HasCompare, bool FlipCompare);
	void SetBaseCompareArray(TArray<float>& Base, TArray<float>& Compare, bool HasCompare, bool FlipCompare);
	void GetMinMaxOfFloatArray(TArray<float>& Array, float* Min, float* Max);
	void FormatMinMaxOfFloatArray(TArray<float>& Array, class FText* Text);
	void DetermineDowngradeUpgradeColour(float BaseVal, float CompareVal, struct FLinearColor* Colour);
	void SetText(const class FText& Text, class UTextBlock* TextObject, bool IncludeSuffix);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HW12DEV_WeaponStats_Entry_TwoText_C">();
	}
	static class UHW12DEV_WeaponStats_Entry_TwoText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHW12DEV_WeaponStats_Entry_TwoText_C>();
	}
};
static_assert(alignof(UHW12DEV_WeaponStats_Entry_TwoText_C) == 0x000008, "Wrong alignment on UHW12DEV_WeaponStats_Entry_TwoText_C");
static_assert(sizeof(UHW12DEV_WeaponStats_Entry_TwoText_C) == 0x000310, "Wrong size on UHW12DEV_WeaponStats_Entry_TwoText_C");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, UberGraphFrame) == 0x0002A8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, Text_WeaponStat_Label_1) == 0x0002B0, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::Text_WeaponStat_Label_1' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, Value1Text) == 0x0002B8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::Value1Text' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, Value2Text) == 0x0002C0, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::Value2Text' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, DowngradeColour) == 0x0002C8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::DowngradeColour' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, UpgradeColour) == 0x0002D8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::UpgradeColour' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, DefaultColour) == 0x0002E8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::DefaultColour' has a wrong offset!");
static_assert(offsetof(UHW12DEV_WeaponStats_Entry_TwoText_C, TextSuffix) == 0x0002F8, "Member 'UHW12DEV_WeaponStats_Entry_TwoText_C::TextSuffix' has a wrong offset!");

}

