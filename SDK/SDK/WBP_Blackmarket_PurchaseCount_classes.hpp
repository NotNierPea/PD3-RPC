#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Blackmarket_PurchaseCount

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Blackmarket_PurchaseCount.WBP_Blackmarket_PurchaseCount_C
// 0x0028 (0x02B8 - 0x0290)
class UWBP_Blackmarket_PurchaseCount_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         Panel_Horizontal;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         In_Max_Count;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCheckBox*>                      Checkboxes;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_WBP_Blackmarket_PurchaseCount(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetMaxCount(int32 InMaxCount);
	void RebuildButtons();
	void SetCount(int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Blackmarket_PurchaseCount_C">();
	}
	static class UWBP_Blackmarket_PurchaseCount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Blackmarket_PurchaseCount_C>();
	}
};
static_assert(alignof(UWBP_Blackmarket_PurchaseCount_C) == 0x000008, "Wrong alignment on UWBP_Blackmarket_PurchaseCount_C");
static_assert(sizeof(UWBP_Blackmarket_PurchaseCount_C) == 0x0002B8, "Wrong size on UWBP_Blackmarket_PurchaseCount_C");
static_assert(offsetof(UWBP_Blackmarket_PurchaseCount_C, UberGraphFrame) == 0x000290, "Member 'UWBP_Blackmarket_PurchaseCount_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Blackmarket_PurchaseCount_C, Panel_Horizontal) == 0x000298, "Member 'UWBP_Blackmarket_PurchaseCount_C::Panel_Horizontal' has a wrong offset!");
static_assert(offsetof(UWBP_Blackmarket_PurchaseCount_C, In_Max_Count) == 0x0002A0, "Member 'UWBP_Blackmarket_PurchaseCount_C::In_Max_Count' has a wrong offset!");
static_assert(offsetof(UWBP_Blackmarket_PurchaseCount_C, CurrentCount) == 0x0002A4, "Member 'UWBP_Blackmarket_PurchaseCount_C::CurrentCount' has a wrong offset!");
static_assert(offsetof(UWBP_Blackmarket_PurchaseCount_C, Checkboxes) == 0x0002A8, "Member 'UWBP_Blackmarket_PurchaseCount_C::Checkboxes' has a wrong offset!");

}

