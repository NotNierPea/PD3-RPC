#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryBaseData_Icon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryBaseData_Icon.WBP_InventoryBaseData_Icon_C
// 0x0038 (0x02F0 - 0x02B8)
class UWBP_InventoryBaseData_Icon_C final : public USBZBaseInventoryItemVisualsWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Icon;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              ImageSize;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseImageSize;                                     // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           EmptySprite;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EmptyIconColor;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_InventoryBaseData_Icon(int32 EntryPoint);
	void OnLoadingChanged(bool bIsLoading);
	void OnInitialized();
	void SpriteLoaded(class UPaperSprite* OutLoadedSprite);
	void EmptySet();
	void PreConstruct(bool IsDesignTime);
	void SetEmptyIcon();
	void SetIcon(class UPaperSprite* InSprite);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryBaseData_Icon_C">();
	}
	static class UWBP_InventoryBaseData_Icon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryBaseData_Icon_C>();
	}
};
static_assert(alignof(UWBP_InventoryBaseData_Icon_C) == 0x000008, "Wrong alignment on UWBP_InventoryBaseData_Icon_C");
static_assert(sizeof(UWBP_InventoryBaseData_Icon_C) == 0x0002F0, "Wrong size on UWBP_InventoryBaseData_Icon_C");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, UberGraphFrame) == 0x0002B8, "Member 'UWBP_InventoryBaseData_Icon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, Image_Icon) == 0x0002C0, "Member 'UWBP_InventoryBaseData_Icon_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, ImageSize) == 0x0002C8, "Member 'UWBP_InventoryBaseData_Icon_C::ImageSize' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, bUseImageSize) == 0x0002D0, "Member 'UWBP_InventoryBaseData_Icon_C::bUseImageSize' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, EmptySprite) == 0x0002D8, "Member 'UWBP_InventoryBaseData_Icon_C::EmptySprite' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryBaseData_Icon_C, EmptyIconColor) == 0x0002E0, "Member 'UWBP_InventoryBaseData_Icon_C::EmptyIconColor' has a wrong offset!");

}

