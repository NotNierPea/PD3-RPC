#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Safe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Safe.BP_Safe_C
// 0x0060 (0x0338 - 0x02D8)
class ABP_Safe_C final : public ASBZReplicatedBinaryStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Safe_01;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnPoint;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   gen_interactable_sec_safe_05x05_titan;             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkGameObject*                          NewVar_1;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenAngle;                                         // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_2;                                          // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Open;                                              // 0x0320(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICableConnectionInterface_C> NewVar_0;                                    // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Safe(int32 EntryPoint);
	void OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics);
	void OnRep_Open();
	void SpawnItemInContainer(class UClass* WhatShould_Spawn, class ABP_RoomSpawnController_C* RoomControllerRef, class AActor** SpawnedActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Safe_C">();
	}
	static class ABP_Safe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Safe_C>();
	}
};
static_assert(alignof(ABP_Safe_C) == 0x000008, "Wrong alignment on ABP_Safe_C");
static_assert(sizeof(ABP_Safe_C) == 0x000338, "Wrong size on ABP_Safe_C");
static_assert(offsetof(ABP_Safe_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_Safe_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, Ak) == 0x0002E0, "Member 'ABP_Safe_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, SK_Safe_01) == 0x0002E8, "Member 'ABP_Safe_C::SK_Safe_01' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, SpawnPoint) == 0x0002F0, "Member 'ABP_Safe_C::SpawnPoint' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, gen_interactable_sec_safe_05x05_titan) == 0x0002F8, "Member 'ABP_Safe_C::gen_interactable_sec_safe_05x05_titan' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, DefaultSceneRoot) == 0x000300, "Member 'ABP_Safe_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, NewVar_1) == 0x000308, "Member 'ABP_Safe_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, OpenAngle) == 0x000310, "Member 'ABP_Safe_C::OpenAngle' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, NewVar_2) == 0x000314, "Member 'ABP_Safe_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, Open) == 0x000320, "Member 'ABP_Safe_C::Open' has a wrong offset!");
static_assert(offsetof(ABP_Safe_C, NewVar_0) == 0x000328, "Member 'ABP_Safe_C::NewVar_0' has a wrong offset!");

}

