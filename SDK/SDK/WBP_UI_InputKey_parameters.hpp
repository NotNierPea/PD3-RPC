#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_InputKey

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.ExecuteUbergraph_WBP_UI_InputKey
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Event_NewActionKeyIcon;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0048(0x0028)()
	class FString                                 K2Node_Event_NewActionKeyName;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInInverted;                          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0090(0x0028)()
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey) == 0x000008, "Wrong alignment on WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey");
static_assert(sizeof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey) == 0x0000E8, "Wrong size on WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, EntryPoint) == 0x000000, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_Event_NewActionKeyIcon) == 0x000008, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_Event_NewActionKeyIcon' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput) == 0x000010, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_MakeStruct_SlateColor_1) == 0x000048, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_Event_NewActionKeyName) == 0x000070, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_Event_NewActionKeyName' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_Len_ReturnValue) == 0x000080, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_Event_bInInverted) == 0x000084, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_Event_bInInverted' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_Min_ReturnValue) == 0x000088, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, K2Node_Select_Default) == 0x000090, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_GetSubstring_ReturnValue) == 0x0000B8, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000E0, "Member 'WBP_UI_InputKey_C_ExecuteUbergraph_WBP_UI_InputKey::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.SetInverted
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_InputKey_C_SetInverted final
{
public:
	bool                                          bInInverted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_InputKey_C_SetInverted) == 0x000001, "Wrong alignment on WBP_UI_InputKey_C_SetInverted");
static_assert(sizeof(WBP_UI_InputKey_C_SetInverted) == 0x000001, "Wrong size on WBP_UI_InputKey_C_SetInverted");
static_assert(offsetof(WBP_UI_InputKey_C_SetInverted, bInInverted) == 0x000000, "Member 'WBP_UI_InputKey_C_SetInverted::bInInverted' has a wrong offset!");

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.OnKeyNameChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_InputKey_C_OnKeyNameChanged final
{
public:
	class FString                                 NewActionKeyName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_InputKey_C_OnKeyNameChanged) == 0x000008, "Wrong alignment on WBP_UI_InputKey_C_OnKeyNameChanged");
static_assert(sizeof(WBP_UI_InputKey_C_OnKeyNameChanged) == 0x000010, "Wrong size on WBP_UI_InputKey_C_OnKeyNameChanged");
static_assert(offsetof(WBP_UI_InputKey_C_OnKeyNameChanged, NewActionKeyName) == 0x000000, "Member 'WBP_UI_InputKey_C_OnKeyNameChanged::NewActionKeyName' has a wrong offset!");

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.OnKeyIconChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_InputKey_C_OnKeyIconChanged final
{
public:
	class UPaperSprite*                           NewActionKeyIcon;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_InputKey_C_OnKeyIconChanged) == 0x000008, "Wrong alignment on WBP_UI_InputKey_C_OnKeyIconChanged");
static_assert(sizeof(WBP_UI_InputKey_C_OnKeyIconChanged) == 0x000008, "Wrong size on WBP_UI_InputKey_C_OnKeyIconChanged");
static_assert(offsetof(WBP_UI_InputKey_C_OnKeyIconChanged, NewActionKeyIcon) == 0x000000, "Member 'WBP_UI_InputKey_C_OnKeyIconChanged::NewActionKeyIcon' has a wrong offset!");

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_InputKey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_InputKey_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_InputKey_C_PreConstruct");
static_assert(sizeof(WBP_UI_InputKey_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_InputKey_C_PreConstruct");
static_assert(offsetof(WBP_UI_InputKey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_InputKey_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_InputKey.WBP_UI_InputKey_C.SetInvertedVisuals
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_InputKey_C_SetInvertedVisuals final
{
public:
	bool                                          InInverted;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_InputKey_C_SetInvertedVisuals) == 0x000008, "Wrong alignment on WBP_UI_InputKey_C_SetInvertedVisuals");
static_assert(sizeof(WBP_UI_InputKey_C_SetInvertedVisuals) == 0x000068, "Wrong size on WBP_UI_InputKey_C_SetInvertedVisuals");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, InInverted) == 0x000000, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::InInverted' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, CallFunc_SelectColor_ReturnValue_2) == 0x000050, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_InputKey_C_SetInvertedVisuals, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'WBP_UI_InputKey_C_SetInvertedVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

