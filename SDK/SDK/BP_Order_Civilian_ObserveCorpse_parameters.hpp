#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Order_Civilian_ObserveCorpse

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Order_Civilian_ObserveCorpse.BP_Order_Civilian_ObserveCorpse_C.ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse
// 0x0028 (0x0028 - 0x0000)
struct BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse) == 0x000008, "Wrong alignment on BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse");
static_assert(sizeof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse) == 0x000028, "Wrong size on BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse, EntryPoint) == 0x000000, "Member 'BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse, K2Node_Event_Pawn) == 0x000008, "Member 'BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse, K2Node_DynamicCast_AsAIController) == 0x000018, "Member 'BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Order_Civilian_ObserveCorpse_C_ExecuteUbergraph_BP_Order_Civilian_ObserveCorpse::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Order_Civilian_ObserveCorpse.BP_Order_Civilian_ObserveCorpse_C.OnStartedBP
// 0x0008 (0x0008 - 0x0000)
struct BP_Order_Civilian_ObserveCorpse_C_OnStartedBP final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Order_Civilian_ObserveCorpse_C_OnStartedBP) == 0x000008, "Wrong alignment on BP_Order_Civilian_ObserveCorpse_C_OnStartedBP");
static_assert(sizeof(BP_Order_Civilian_ObserveCorpse_C_OnStartedBP) == 0x000008, "Wrong size on BP_Order_Civilian_ObserveCorpse_C_OnStartedBP");
static_assert(offsetof(BP_Order_Civilian_ObserveCorpse_C_OnStartedBP, Pawn) == 0x000000, "Member 'BP_Order_Civilian_ObserveCorpse_C_OnStartedBP::Pawn' has a wrong offset!");

}

