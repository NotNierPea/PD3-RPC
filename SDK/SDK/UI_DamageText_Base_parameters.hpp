#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DamageText_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_DamageText_Base.UI_DamageText_Base_C.SetDisplayText
// 0x0068 (0x0068 - 0x0000)
struct UI_DamageText_Base_C_SetDisplayText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsKillshot;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Critical;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsArmor;                                           // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FontScaleOffset;                                   // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
};
static_assert(alignof(UI_DamageText_Base_C_SetDisplayText) == 0x000008, "Wrong alignment on UI_DamageText_Base_C_SetDisplayText");
static_assert(sizeof(UI_DamageText_Base_C_SetDisplayText) == 0x000068, "Wrong size on UI_DamageText_Base_C_SetDisplayText");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, InText) == 0x000000, "Member 'UI_DamageText_Base_C_SetDisplayText::InText' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, IsKillshot) == 0x000018, "Member 'UI_DamageText_Base_C_SetDisplayText::IsKillshot' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, Critical) == 0x000019, "Member 'UI_DamageText_Base_C_SetDisplayText::Critical' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, IsArmor) == 0x00001A, "Member 'UI_DamageText_Base_C_SetDisplayText::IsArmor' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, FontScaleOffset) == 0x00001C, "Member 'UI_DamageText_Base_C_SetDisplayText::FontScaleOffset' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'UI_DamageText_Base_C_SetDisplayText::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, CallFunc_SelectColor_ReturnValue_1) == 0x000030, "Member 'UI_DamageText_Base_C_SetDisplayText::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayText, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'UI_DamageText_Base_C_SetDisplayText::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_DamageText_Base.UI_DamageText_Base_C.SetDisplayScale
// 0x0004 (0x0004 - 0x0000)
struct UI_DamageText_Base_C_SetDisplayScale final
{
public:
	float                                         InUserSpecifiedScale;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageText_Base_C_SetDisplayScale) == 0x000004, "Wrong alignment on UI_DamageText_Base_C_SetDisplayScale");
static_assert(sizeof(UI_DamageText_Base_C_SetDisplayScale) == 0x000004, "Wrong size on UI_DamageText_Base_C_SetDisplayScale");
static_assert(offsetof(UI_DamageText_Base_C_SetDisplayScale, InUserSpecifiedScale) == 0x000000, "Member 'UI_DamageText_Base_C_SetDisplayScale::InUserSpecifiedScale' has a wrong offset!");

// Function UI_DamageText_Base.UI_DamageText_Base_C.GetDisplayScale
// 0x0004 (0x0004 - 0x0000)
struct UI_DamageText_Base_C_GetDisplayScale final
{
public:
	float                                         UserSpecifiedScale;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageText_Base_C_GetDisplayScale) == 0x000004, "Wrong alignment on UI_DamageText_Base_C_GetDisplayScale");
static_assert(sizeof(UI_DamageText_Base_C_GetDisplayScale) == 0x000004, "Wrong size on UI_DamageText_Base_C_GetDisplayScale");
static_assert(offsetof(UI_DamageText_Base_C_GetDisplayScale, UserSpecifiedScale) == 0x000000, "Member 'UI_DamageText_Base_C_GetDisplayScale::UserSpecifiedScale' has a wrong offset!");

// Function UI_DamageText_Base.UI_DamageText_Base_C.SetArmorOutline
// 0x0090 (0x0090 - 0x0000)
struct UI_DamageText_Base_C_SetArmorOutline final
{
public:
	class UTextBlock*                             InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArmor;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0010(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0030(0x0060)(HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageText_Base_C_SetArmorOutline) == 0x000008, "Wrong alignment on UI_DamageText_Base_C_SetArmorOutline");
static_assert(sizeof(UI_DamageText_Base_C_SetArmorOutline) == 0x000090, "Wrong size on UI_DamageText_Base_C_SetArmorOutline");
static_assert(offsetof(UI_DamageText_Base_C_SetArmorOutline, InputPin) == 0x000000, "Member 'UI_DamageText_Base_C_SetArmorOutline::InputPin' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetArmorOutline, IsArmor) == 0x000008, "Member 'UI_DamageText_Base_C_SetArmorOutline::IsArmor' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetArmorOutline, K2Node_MakeStruct_FontOutlineSettings) == 0x000010, "Member 'UI_DamageText_Base_C_SetArmorOutline::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_SetArmorOutline, K2Node_MakeStruct_SlateFontInfo) == 0x000030, "Member 'UI_DamageText_Base_C_SetArmorOutline::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function UI_DamageText_Base.UI_DamageText_Base_C.NewFunction_0
// 0x00E0 (0x00E0 - 0x0000)
struct UI_DamageText_Base_C_NewFunction_0 final
{
public:
	bool                                          IsKillshot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Critical;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FontScaleOffset;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0018(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0080(0x0060)(HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageText_Base_C_NewFunction_0) == 0x000008, "Wrong alignment on UI_DamageText_Base_C_NewFunction_0");
static_assert(sizeof(UI_DamageText_Base_C_NewFunction_0) == 0x0000E0, "Wrong size on UI_DamageText_Base_C_NewFunction_0");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, IsKillshot) == 0x000000, "Member 'UI_DamageText_Base_C_NewFunction_0::IsKillshot' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, Critical) == 0x000001, "Member 'UI_DamageText_Base_C_NewFunction_0::Critical' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, FontScaleOffset) == 0x000004, "Member 'UI_DamageText_Base_C_NewFunction_0::FontScaleOffset' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'UI_DamageText_Base_C_NewFunction_0::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'UI_DamageText_Base_C_NewFunction_0::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'UI_DamageText_Base_C_NewFunction_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000014, "Member 'UI_DamageText_Base_C_NewFunction_0::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, K2Node_MakeStruct_SlateFontInfo) == 0x000018, "Member 'UI_DamageText_Base_C_NewFunction_0::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, CallFunc_FTrunc_ReturnValue_1) == 0x000078, "Member 'UI_DamageText_Base_C_NewFunction_0::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_DamageText_Base_C_NewFunction_0, K2Node_MakeStruct_SlateFontInfo_1) == 0x000080, "Member 'UI_DamageText_Base_C_NewFunction_0::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

}

