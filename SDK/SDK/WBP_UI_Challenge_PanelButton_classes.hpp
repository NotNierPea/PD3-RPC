#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenge_PanelButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C
// 0x00F0 (0x04F8 - 0x0408)
class UWBP_UI_Challenge_PanelButton_C final : public USBZMainMenuBaseChallengeButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZUITextBlock*                        Completed_T;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_65;                                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_403;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ChallengeButtonHighlight;                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ChallengeLocked;                             // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Locked;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RewardIcon;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_ChallengeButton;                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Locked;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_ChallengeProgress;                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        SBZText_ChallengeName;                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_ChallengeDescription;                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Root;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_ChallengeDescription;                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Locked;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_Progress;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RewardQuantity;                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              TopInfo_SB;                                        // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxValueToUse;                                     // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinValueToUse;                                     // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           InfamyIcon;                                        // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           GoldIcon;                                          // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           PaydayCreditIcon;                                  // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultSize;                                       // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSmallSize;                                      // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_WBP_UI_Challenge_PanelButton(int32 EntryPoint);
	void OnChallengeDataInititalized(const struct FSBZChallengeData& InChallengeData);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void OnLoaded_575B882949292613E393E8B9DEA74294(class UObject* Loaded);
	void SetChallengeName(const struct FSBZChallengeData& Challenge);
	void SetChallengeDescription(const struct FSBZChallengeData& Challenge);
	void UpdateVisualsBasedOnChallengeStatus(EChallengeStatusEnum InChallengeStatus);
	void SetProgressBarPercentage(int32 Progress, int32 TotalProgress);
	void ConvertProgressMinMaxToMeters(int32 InMaxValueToUse, int32 InMinValueToUse);
	void SetProgressMinMax(int32 InMaxValueToUse, int32 InMinValueToUse);
	void SetProgressText();
	void IsInfamyReward(int32 InInfamyRewardPoints, bool* OutIsHasInfamyRewardPoints);
	void SetInfamyRewardInfo(int32 InInfamyRewardPoints);
	void SetRewardIcon(class UPaperSprite* InIconSprite);
	void SetGoldRewardInfo(int32 InQuantity);
	void SetCreditsRewardInfo(int32 InQuantity);
	void SetItemRewardInfo(class UPaperSprite* InIconSprite, int32 InItemQuantity);
	void SetRewardValueVisibility(int32 InItemQuantity);
	void UpdateRewardIconDimensions(class UPaperSprite* Sprite);
	void SetWidgetSize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Challenge_PanelButton_C">();
	}
	static class UWBP_UI_Challenge_PanelButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Challenge_PanelButton_C>();
	}
};
static_assert(alignof(UWBP_UI_Challenge_PanelButton_C) == 0x000008, "Wrong alignment on UWBP_UI_Challenge_PanelButton_C");
static_assert(sizeof(UWBP_UI_Challenge_PanelButton_C) == 0x0004F8, "Wrong size on UWBP_UI_Challenge_PanelButton_C");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, UberGraphFrame) == 0x000408, "Member 'UWBP_UI_Challenge_PanelButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Completed_T) == 0x000410, "Member 'UWBP_UI_Challenge_PanelButton_C::Completed_T' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_3) == 0x000418, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_4) == 0x000420, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_4' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_5) == 0x000428, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_5' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_6) == 0x000430, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_6' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_65) == 0x000438, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_65' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_403) == 0x000440, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_403' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_ChallengeButtonHighlight) == 0x000448, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_ChallengeButtonHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_ChallengeLocked) == 0x000450, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_ChallengeLocked' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_Locked) == 0x000458, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Image_RewardIcon) == 0x000460, "Member 'UWBP_UI_Challenge_PanelButton_C::Image_RewardIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, InvalidationBox_ChallengeButton) == 0x000468, "Member 'UWBP_UI_Challenge_PanelButton_C::InvalidationBox_ChallengeButton' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Overlay_Locked) == 0x000470, "Member 'UWBP_UI_Challenge_PanelButton_C::Overlay_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, ProgressBar_ChallengeProgress) == 0x000478, "Member 'UWBP_UI_Challenge_PanelButton_C::ProgressBar_ChallengeProgress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, SBZText_ChallengeName) == 0x000480, "Member 'UWBP_UI_Challenge_PanelButton_C::SBZText_ChallengeName' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, ScaleBox_ChallengeDescription) == 0x000488, "Member 'UWBP_UI_Challenge_PanelButton_C::ScaleBox_ChallengeDescription' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, SizeBox_Root) == 0x000490, "Member 'UWBP_UI_Challenge_PanelButton_C::SizeBox_Root' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Text_ChallengeDescription) == 0x000498, "Member 'UWBP_UI_Challenge_PanelButton_C::Text_ChallengeDescription' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Text_Locked) == 0x0004A0, "Member 'UWBP_UI_Challenge_PanelButton_C::Text_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, Text_Progress) == 0x0004A8, "Member 'UWBP_UI_Challenge_PanelButton_C::Text_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, TextBlock_RewardQuantity) == 0x0004B0, "Member 'UWBP_UI_Challenge_PanelButton_C::TextBlock_RewardQuantity' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, TopInfo_SB) == 0x0004B8, "Member 'UWBP_UI_Challenge_PanelButton_C::TopInfo_SB' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, MaxValueToUse) == 0x0004C0, "Member 'UWBP_UI_Challenge_PanelButton_C::MaxValueToUse' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, MinValueToUse) == 0x0004C4, "Member 'UWBP_UI_Challenge_PanelButton_C::MinValueToUse' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, InfamyIcon) == 0x0004C8, "Member 'UWBP_UI_Challenge_PanelButton_C::InfamyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, GoldIcon) == 0x0004D0, "Member 'UWBP_UI_Challenge_PanelButton_C::GoldIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, PaydayCreditIcon) == 0x0004D8, "Member 'UWBP_UI_Challenge_PanelButton_C::PaydayCreditIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, DefaultSize) == 0x0004E0, "Member 'UWBP_UI_Challenge_PanelButton_C::DefaultSize' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, SmallSize) == 0x0004E8, "Member 'UWBP_UI_Challenge_PanelButton_C::SmallSize' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Challenge_PanelButton_C, UseSmallSize) == 0x0004F0, "Member 'UWBP_UI_Challenge_PanelButton_C::UseSmallSize' has a wrong offset!");

}

