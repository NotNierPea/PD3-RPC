#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAndSHeistObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MoreHeistAtmoVarObjectHeist_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAndSHeistObject.GAndSHeistObject_C
// 0x0018 (0x0320 - 0x0308)
class AGAndSHeistObject_C final : public AMoreHeistAtmoVarObjectHeist_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GAndSHeistObject_C;                 // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ADirectionalLight*                      DirectionalLight;                                  // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirLightTargetValue;                               // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAndSHeistObject(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void TimeSet(const struct FTimeSettings& TimeSettings);
	void ReceiveBeginPlay();
	void TickExec_E133159F401604CA4ECEFA9B69AD4528(const class UDelegateTimer* Timer, float ElapsedTime, float TimeSinceLast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAndSHeistObject_C">();
	}
	static class AGAndSHeistObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGAndSHeistObject_C>();
	}
};
static_assert(alignof(AGAndSHeistObject_C) == 0x000008, "Wrong alignment on AGAndSHeistObject_C");
static_assert(sizeof(AGAndSHeistObject_C) == 0x000320, "Wrong size on AGAndSHeistObject_C");
static_assert(offsetof(AGAndSHeistObject_C, UberGraphFrame_GAndSHeistObject_C) == 0x000308, "Member 'AGAndSHeistObject_C::UberGraphFrame_GAndSHeistObject_C' has a wrong offset!");
static_assert(offsetof(AGAndSHeistObject_C, DirectionalLight) == 0x000310, "Member 'AGAndSHeistObject_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(AGAndSHeistObject_C, DirLightTargetValue) == 0x000318, "Member 'AGAndSHeistObject_C::DirLightTargetValue' has a wrong offset!");

}

