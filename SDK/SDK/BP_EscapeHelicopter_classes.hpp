#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EscapeHelicopter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EscapeHelicopter.BP_EscapeHelicopter_C
// 0x00C0 (0x0760 - 0x06A0)
class ABP_EscapeHelicopter_C : public ASBZAerialVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Coll_fix;                                          // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockPlayerCollision_02;                           // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockPlayerCollision_01;                           // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockCollision;                                    // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation15;                                     // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation14;                                     // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation13;                                     // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation12;                                     // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation11;                                     // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation10;                                     // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation09;                                     // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation08;                                     // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation07;                                     // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation06;                                     // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation05;                                     // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation04;                                     // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation03;                                     // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation02;                                     // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation01;                                     // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZSecuredBagVisualizeComponent*       SBZSecuredBagVisualize;                            // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Raycast_Locator;                                   // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_Vehicle_Downwash;                               // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DistanceTimer;                                     // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EscapeHelicopter(int32 EntryPoint);
	void CustomEvent_1(class ASBZAerialVehicle* Vehicle, class FName State);
	void ReceiveOnDoorStateChanged(ESBZAerialVehicleDoor Door, bool bIsDoorOpen);
	void ReceiveBeginPlay();
	void CustomEvent_0(class ASBZAerialVehicle* Vehicle);
	void UserConstructionScript();
	void CheckDistanceToGround(class USceneComponent* GeoTracking, struct FVector* Location, float* DistanceToGround);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EscapeHelicopter_C">();
	}
	static class ABP_EscapeHelicopter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EscapeHelicopter_C>();
	}
};
static_assert(alignof(ABP_EscapeHelicopter_C) == 0x000010, "Wrong alignment on ABP_EscapeHelicopter_C");
static_assert(sizeof(ABP_EscapeHelicopter_C) == 0x000760, "Wrong size on ABP_EscapeHelicopter_C");
static_assert(offsetof(ABP_EscapeHelicopter_C, UberGraphFrame) == 0x0006A0, "Member 'ABP_EscapeHelicopter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, Coll_fix) == 0x0006A8, "Member 'ABP_EscapeHelicopter_C::Coll_fix' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BlockPlayerCollision_02) == 0x0006B0, "Member 'ABP_EscapeHelicopter_C::BlockPlayerCollision_02' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BlockPlayerCollision_01) == 0x0006B8, "Member 'ABP_EscapeHelicopter_C::BlockPlayerCollision_01' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BlockCollision) == 0x0006C0, "Member 'ABP_EscapeHelicopter_C::BlockCollision' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation15) == 0x0006C8, "Member 'ABP_EscapeHelicopter_C::BagLocation15' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation14) == 0x0006D0, "Member 'ABP_EscapeHelicopter_C::BagLocation14' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation13) == 0x0006D8, "Member 'ABP_EscapeHelicopter_C::BagLocation13' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation12) == 0x0006E0, "Member 'ABP_EscapeHelicopter_C::BagLocation12' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation11) == 0x0006E8, "Member 'ABP_EscapeHelicopter_C::BagLocation11' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation10) == 0x0006F0, "Member 'ABP_EscapeHelicopter_C::BagLocation10' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation09) == 0x0006F8, "Member 'ABP_EscapeHelicopter_C::BagLocation09' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation08) == 0x000700, "Member 'ABP_EscapeHelicopter_C::BagLocation08' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation07) == 0x000708, "Member 'ABP_EscapeHelicopter_C::BagLocation07' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation06) == 0x000710, "Member 'ABP_EscapeHelicopter_C::BagLocation06' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation05) == 0x000718, "Member 'ABP_EscapeHelicopter_C::BagLocation05' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation04) == 0x000720, "Member 'ABP_EscapeHelicopter_C::BagLocation04' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation03) == 0x000728, "Member 'ABP_EscapeHelicopter_C::BagLocation03' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation02) == 0x000730, "Member 'ABP_EscapeHelicopter_C::BagLocation02' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, BagLocation01) == 0x000738, "Member 'ABP_EscapeHelicopter_C::BagLocation01' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, SBZSecuredBagVisualize) == 0x000740, "Member 'ABP_EscapeHelicopter_C::SBZSecuredBagVisualize' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, Raycast_Locator) == 0x000748, "Member 'ABP_EscapeHelicopter_C::Raycast_Locator' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, FX_Vehicle_Downwash) == 0x000750, "Member 'ABP_EscapeHelicopter_C::FX_Vehicle_Downwash' has a wrong offset!");
static_assert(offsetof(ABP_EscapeHelicopter_C, DistanceTimer) == 0x000758, "Member 'ABP_EscapeHelicopter_C::DistanceTimer' has a wrong offset!");

}

