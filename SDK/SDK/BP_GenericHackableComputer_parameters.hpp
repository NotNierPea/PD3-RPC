#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericHackableComputer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.ExecuteUbergraph_BP_GenericHackableComputer
// 0x0278 (0x0278 - 0x0000)
struct BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3; // 0x0090(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_ProgressDone;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_ProcessText;                          // 0x00C0(0x0018)(ConstParm)
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4; // 0x00E4(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x0100(0x0010)(ConstParm, ReferenceParm)
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_1;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZHackableActorState                        K2Node_Event_OldState;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHackableActorState                        K2Node_Event_NewState;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5; // 0x011C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_6;                            // 0x0138(0x0010)(ConstParm, ReferenceParm)
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_2;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_3;        // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_3;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_4;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_4;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewIndex;                             // 0x018C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_5;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_5;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6; // 0x01AC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class FText                                   K2Node_Event_SucessText;                           // 0x01C0(0x0018)(ConstParm)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_7;                            // 0x01D8(0x0010)(ConstParm, ReferenceParm)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_6;        // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7; // 0x01F0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ComputerBase_C*                    K2Node_DynamicCast_AsWBP_Computer_Base_6;          // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_2;         // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_2;           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2; // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_3;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_4;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_5;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_6;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_7;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer");
static_assert(sizeof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer) == 0x000278, "Wrong size on BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, EntryPoint) == 0x000000, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable) == 0x000008, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable) == 0x000018, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_1) == 0x000030, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_2) == 0x000058, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_3) == 0x000080, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_3) == 0x000090, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_ProgressDone) == 0x0000A4, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_ProgressDone' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_4) == 0x0000A8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0000B8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_ProcessText) == 0x0000C0, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_ProcessText' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base) == 0x0000D8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_TextIsEmpty_ReturnValue) == 0x0000E1, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_4) == 0x0000E4, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0000F8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_5) == 0x000100, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_1) == 0x000110, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_OldState) == 0x000119, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_NewState) == 0x00011A, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_SwitchEnum_CmpSuccess) == 0x00011B, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_5) == 0x00011C, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x000130, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_6) == 0x000138, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_2) == 0x000148, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_3) == 0x000158, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_3) == 0x000160, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_4) == 0x000170, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_4) == 0x000178, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_4) == 0x000180, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue) == 0x000184, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000188, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_NewIndex) == 0x00018C, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_NewIndex' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_5) == 0x000190, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000198, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_5) == 0x0001A0, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_5) == 0x0001A8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_6) == 0x0001AC, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_Event_SucessText) == 0x0001C0, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_Event_SucessText' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_struct_Variable_7) == 0x0001D8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_GetUserWidgetObject_ReturnValue_6) == 0x0001E8, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_GetUserWidgetObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, Temp_delegate_Variable_7) == 0x0001F0, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_AsWBP_Computer_Base_6) == 0x000208, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_AsWBP_Computer_Base_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_DynamicCast_bSuccess_6) == 0x000210, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_1) == 0x000214, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactable_2) == 0x000218, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactable_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactor_2) == 0x000220, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactor_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2) == 0x000228, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactable_1) == 0x000230, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactor_1) == 0x000238, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x000240, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_2) == 0x000244, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_3) == 0x000248, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_4) == 0x00024C, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_5) == 0x000250, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_6) == 0x000254, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_PostEvent_ReturnValue_7) == 0x000258, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_PostEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactable) == 0x000260, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_Interactor) == 0x000268, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000270, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue) == 0x000271, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000272, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000273, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000274, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000275, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000276, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000277, "Member 'BP_GenericHackableComputer_C_ExecuteUbergraph_BP_GenericHackableComputer::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_GenericHackableComputer_C_BndEvt__BP_GenericHackableComputer_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BP_UpdateCustomSuccessText
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText final
{
public:
	class FText                                   SucessText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText");
static_assert(sizeof(BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText) == 0x000018, "Wrong size on BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText, SucessText) == 0x000000, "Member 'BP_GenericHackableComputer_C_BP_UpdateCustomSuccessText::SucessText' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BP_DisplayTextIndexChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged) == 0x000004, "Wrong alignment on BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged");
static_assert(sizeof(BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged) == 0x000004, "Wrong size on BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged, NewIndex) == 0x000000, "Member 'BP_GenericHackableComputer_C_BP_DisplayTextIndexChanged::NewIndex' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BP_OnStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_GenericHackableComputer_C_BP_OnStateChanged final
{
public:
	ESBZHackableActorState                        OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZHackableActorState                        NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericHackableComputer_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_GenericHackableComputer_C_BP_OnStateChanged");
static_assert(sizeof(BP_GenericHackableComputer_C_BP_OnStateChanged) == 0x000002, "Wrong size on BP_GenericHackableComputer_C_BP_OnStateChanged");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_OnStateChanged, OldState) == 0x000000, "Member 'BP_GenericHackableComputer_C_BP_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_OnStateChanged, NewState) == 0x000001, "Member 'BP_GenericHackableComputer_C_BP_OnStateChanged::NewState' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BP_OnHackingStarted
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericHackableComputer_C_BP_OnHackingStarted final
{
public:
	class FText                                   ProcessText;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GenericHackableComputer_C_BP_OnHackingStarted) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_BP_OnHackingStarted");
static_assert(sizeof(BP_GenericHackableComputer_C_BP_OnHackingStarted) == 0x000018, "Wrong size on BP_GenericHackableComputer_C_BP_OnHackingStarted");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_OnHackingStarted, ProcessText) == 0x000000, "Member 'BP_GenericHackableComputer_C_BP_OnHackingStarted::ProcessText' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.BP_UpdateProgressBar
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericHackableComputer_C_BP_UpdateProgressBar final
{
public:
	int32                                         ProgressDone;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericHackableComputer_C_BP_UpdateProgressBar) == 0x000004, "Wrong alignment on BP_GenericHackableComputer_C_BP_UpdateProgressBar");
static_assert(sizeof(BP_GenericHackableComputer_C_BP_UpdateProgressBar) == 0x000004, "Wrong size on BP_GenericHackableComputer_C_BP_UpdateProgressBar");
static_assert(offsetof(BP_GenericHackableComputer_C_BP_UpdateProgressBar, ProgressDone) == 0x000000, "Member 'BP_GenericHackableComputer_C_BP_UpdateProgressBar::ProgressDone' has a wrong offset!");

// Function BP_GenericHackableComputer.BP_GenericHackableComputer_C.VisionPredicate
// 0x0030 (0x0030 - 0x0000)
struct BP_GenericHackableComputer_C_VisionPredicate final
{
public:
	const class AActor*                           Viewer;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericHackableComputer_C_VisionPredicate) == 0x000008, "Wrong alignment on BP_GenericHackableComputer_C_VisionPredicate");
static_assert(sizeof(BP_GenericHackableComputer_C_VisionPredicate) == 0x000030, "Wrong size on BP_GenericHackableComputer_C_VisionPredicate");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, Viewer) == 0x000000, "Member 'BP_GenericHackableComputer_C_VisionPredicate::Viewer' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, ReturnValue) == 0x000008, "Member 'BP_GenericHackableComputer_C_VisionPredicate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, CallFunc_GetActorRightVector_ReturnValue) == 0x00000C, "Member 'BP_GenericHackableComputer_C_VisionPredicate::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_GenericHackableComputer_C_VisionPredicate::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, CallFunc_Dot_VectorVector_ReturnValue) == 0x000024, "Member 'BP_GenericHackableComputer_C_VisionPredicate::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericHackableComputer_C_VisionPredicate, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_GenericHackableComputer_C_VisionPredicate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}

