#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TLMVoiceChat

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class TLMVoiceChat.TLMVoiceChatSubsystem
// 0x0230 (0x0268 - 0x0038)
class UTLMVoiceChatSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_38[0xA8];                                      // 0x0038(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& ChannelName, const class FString& PlayerName, bool bIsTalking)> OnVoiceChatPlayerTalkingUpdatedDelegate; // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& EOSProdID, bool bIsMuted)> OnPlayerMuteUpdated; // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& EOSProdID, bool bIsBlocked)> OnPlayerBlockUpdated; // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& EOSId, bool bJoined)> OnVoiceSessionParticipantsChange_EOSId; // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x148];                                    // 0x0120(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetAudioInputMute();
	float GetAudioInputVolume();
	bool GetAudioOutputMute();
	float GetAudioOutputVolume();
	bool GetPlayerBlocked(const class FString& EOSUserId);
	bool GetPlayerMuted(const class FString& PlayerName, bool* bIsMuted);
	bool GetPlayersInChannel(TArray<class FString>* PlayersInChannel);
	bool IsPlayerInChannel();
	void SetAudioInputMute(const bool bMute);
	void SetAudioInputVolume(float Volume);
	void SetAudioOutputMute(const bool bMute);
	void SetAudioOutputVolume(float Volume);
	void SetPlayerBlocked(const class FString& EOSUserId, bool bBlocked);
	void SetPlayerMuted(const class FString& PlayerName, bool bMuted);
	void SetPushToTalkEnabled(const bool bEnabled);
	void SetVoiceChatEnabled(const bool bEnabled);

	class FString GetCurrentUserId() const;
	void GetPlayerIds(class FString* PlatformUserId, class FString* EOSUserId) const;
	bool GetPushToTalkEnabled() const;
	bool GetVoiceChatEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLMVoiceChatSubsystem">();
	}
	static class UTLMVoiceChatSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLMVoiceChatSubsystem>();
	}
};
static_assert(alignof(UTLMVoiceChatSubsystem) == 0x000008, "Wrong alignment on UTLMVoiceChatSubsystem");
static_assert(sizeof(UTLMVoiceChatSubsystem) == 0x000268, "Wrong size on UTLMVoiceChatSubsystem");
static_assert(offsetof(UTLMVoiceChatSubsystem, OnVoiceChatPlayerTalkingUpdatedDelegate) == 0x0000E0, "Member 'UTLMVoiceChatSubsystem::OnVoiceChatPlayerTalkingUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(UTLMVoiceChatSubsystem, OnPlayerMuteUpdated) == 0x0000F0, "Member 'UTLMVoiceChatSubsystem::OnPlayerMuteUpdated' has a wrong offset!");
static_assert(offsetof(UTLMVoiceChatSubsystem, OnPlayerBlockUpdated) == 0x000100, "Member 'UTLMVoiceChatSubsystem::OnPlayerBlockUpdated' has a wrong offset!");
static_assert(offsetof(UTLMVoiceChatSubsystem, OnVoiceSessionParticipantsChange_EOSId) == 0x000110, "Member 'UTLMVoiceChatSubsystem::OnVoiceSessionParticipantsChange_EOSId' has a wrong offset!");

}

