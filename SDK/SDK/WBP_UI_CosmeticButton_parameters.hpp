#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_CosmeticButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.ExecuteUbergraph_WBP_UI_CosmeticButton
// 0x0048 (0x0048 - 0x0000)
struct WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZCosmeticsDataAsset*           CallFunc_GetCosmeticItemData_ReturnValue;          // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InItemCount;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDefaultItem_ReturnValue;                // 0x001C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton) == 0x000008, "Wrong alignment on WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton");
static_assert(sizeof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton) == 0x000048, "Wrong size on WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, EntryPoint) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, CallFunc_GetCosmeticItemData_ReturnValue) == 0x000008, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::CallFunc_GetCosmeticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, Temp_byte_Variable) == 0x000011, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, K2Node_Event_bInHasFocus) == 0x000013, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, K2Node_Event_bInIsHovered) == 0x000014, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, K2Node_Event_InItemCount) == 0x000018, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::K2Node_Event_InItemCount' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, CallFunc_IsDefaultItem_ReturnValue) == 0x00001C, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::CallFunc_IsDefaultItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, K2Node_Select_Default) == 0x000038, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'WBP_UI_CosmeticButton_C_ExecuteUbergraph_WBP_UI_CosmeticButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.OnItemCountChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_CosmeticButton_C_OnItemCountChanged final
{
public:
	int32                                         InItemCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_OnItemCountChanged) == 0x000004, "Wrong alignment on WBP_UI_CosmeticButton_C_OnItemCountChanged");
static_assert(sizeof(WBP_UI_CosmeticButton_C_OnItemCountChanged) == 0x000004, "Wrong size on WBP_UI_CosmeticButton_C_OnItemCountChanged");
static_assert(offsetof(WBP_UI_CosmeticButton_C_OnItemCountChanged, InItemCount) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_OnItemCountChanged::InItemCount' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_CosmeticButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_CosmeticButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_CosmeticButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_CosmeticButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_CosmeticButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_CosmeticButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_CosmeticButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_CosmeticButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_CosmeticButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_CosmeticButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_CosmeticButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_CosmeticButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_CosmeticButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_CosmeticButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.SetRarityColour
// 0x0040 (0x0040 - 0x0000)
struct WBP_UI_CosmeticButton_C_SetRarityColour final
{
public:
	ESBZRarity                                    Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColourForRarity_Colour;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZRarity                                    Temp_byte_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZItemRarity                                Temp_byte_Variable_7;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZCosmeticsDataAsset*           CallFunc_GetCosmeticItemData_ReturnValue;          // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZRarity                                    K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColourForRarity_Colour_1;              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_SetRarityColour) == 0x000008, "Wrong alignment on WBP_UI_CosmeticButton_C_SetRarityColour");
static_assert(sizeof(WBP_UI_CosmeticButton_C_SetRarityColour) == 0x000040, "Wrong size on WBP_UI_CosmeticButton_C_SetRarityColour");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_4) == 0x000004, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_5) == 0x000005, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, CallFunc_GetColourForRarity_Colour) == 0x000008, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::CallFunc_GetColourForRarity_Colour' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_6) == 0x000018, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, Temp_byte_Variable_7) == 0x000019, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, CallFunc_GetCosmeticItemData_ReturnValue) == 0x000020, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::CallFunc_GetCosmeticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, K2Node_Select_Default) == 0x000029, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_SetRarityColour, CallFunc_GetColourForRarity_Colour_1) == 0x00002C, "Member 'WBP_UI_CosmeticButton_C_SetRarityColour::CallFunc_GetColourForRarity_Colour_1' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.FocusedChangedVisuals
// 0x0014 (0x0014 - 0x0000)
struct WBP_UI_CosmeticButton_C_FocusedChangedVisuals final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_FocusedChangedVisuals) == 0x000004, "Wrong alignment on WBP_UI_CosmeticButton_C_FocusedChangedVisuals");
static_assert(sizeof(WBP_UI_CosmeticButton_C_FocusedChangedVisuals) == 0x000014, "Wrong size on WBP_UI_CosmeticButton_C_FocusedChangedVisuals");
static_assert(offsetof(WBP_UI_CosmeticButton_C_FocusedChangedVisuals, bIsFocused) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_FocusedChangedVisuals::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_CosmeticButton_C_FocusedChangedVisuals, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_UI_CosmeticButton_C_FocusedChangedVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_CosmeticButton.WBP_UI_CosmeticButton_C.HoverChangedVisuals
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_CosmeticButton_C_HoverChangedVisuals final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_CosmeticButton_C_HoverChangedVisuals) == 0x000001, "Wrong alignment on WBP_UI_CosmeticButton_C_HoverChangedVisuals");
static_assert(sizeof(WBP_UI_CosmeticButton_C_HoverChangedVisuals) == 0x000001, "Wrong size on WBP_UI_CosmeticButton_C_HoverChangedVisuals");
static_assert(offsetof(WBP_UI_CosmeticButton_C_HoverChangedVisuals, bIsHovered) == 0x000000, "Member 'WBP_UI_CosmeticButton_C_HoverChangedVisuals::bIsHovered' has a wrong offset!");

}

