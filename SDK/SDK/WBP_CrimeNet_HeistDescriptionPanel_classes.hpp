#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CrimeNet_HeistDescriptionPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C
// 0x0100 (0x0390 - 0x0290)
class UWBP_CrimeNet_HeistDescriptionPanel_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FrameTextDifficulty_Anim;                          // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_LevelIcon;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Hard;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Normal;                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Overkill;                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_VeryHard;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* SecurityCompany_01;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* SecurityCompany_02;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* SecurityCompany_03;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_BestTime_Loud;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_BestTime_Stealth;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Desc_LevelDescription;                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Desc_LevelName;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Difficulty;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Tittle_DifficultyModifiers;                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_SecurityCompanies;                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPaperSprite*                           TWK_DefaultHeistImage;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPD3HeistDataAsset*                     RT_HeistData;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                RT_Difficulty;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESBZDifficulty, class FText>             DifficultyDesc;                                    // 0x0330(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ESlateVisibility                              In_Visibility;                                     // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Out_Min;                                           // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Max;                                           // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel(int32 EntryPoint);
	void InitializeHeistData(class UPD3HeistDataAsset* InHeistData);
	void OnInitialized();
	void UpdatePanelTimer(float Timer, bool bIsStealth);
	void SetNoHeistData();
	void UpdateDifficultyVisuals(ESBZDifficulty InDifficulty);
	void SetDifficulty(ESBZDifficulty InDifficulty);
	void UpdateTimers();
	void InitializeSecurityCompanies();
	void Display_Panel_Animation();
	void Update_Security_Companies_for_Difficulty();
	class FString GetSecurityCompanyName(class USBZSecurityCompanyVisualsWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CrimeNet_HeistDescriptionPanel_C">();
	}
	static class UWBP_CrimeNet_HeistDescriptionPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CrimeNet_HeistDescriptionPanel_C>();
	}
};
static_assert(alignof(UWBP_CrimeNet_HeistDescriptionPanel_C) == 0x000008, "Wrong alignment on UWBP_CrimeNet_HeistDescriptionPanel_C");
static_assert(sizeof(UWBP_CrimeNet_HeistDescriptionPanel_C) == 0x000390, "Wrong size on UWBP_CrimeNet_HeistDescriptionPanel_C");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, UberGraphFrame) == 0x000290, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, FrameTextDifficulty_Anim) == 0x000298, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::FrameTextDifficulty_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Image_LevelIcon) == 0x0002A0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Image_LevelIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Image_RiskLevel_Hard) == 0x0002A8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Image_RiskLevel_Hard' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Image_RiskLevel_Normal) == 0x0002B0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Image_RiskLevel_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Image_RiskLevel_Overkill) == 0x0002B8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Image_RiskLevel_Overkill' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Image_RiskLevel_VeryHard) == 0x0002C0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Image_RiskLevel_VeryHard' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, SecurityCompany_01) == 0x0002C8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::SecurityCompany_01' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, SecurityCompany_02) == 0x0002D0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::SecurityCompany_02' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, SecurityCompany_03) == 0x0002D8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::SecurityCompany_03' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_BestTime_Loud) == 0x0002E0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_BestTime_Loud' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_BestTime_Stealth) == 0x0002E8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_BestTime_Stealth' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_Desc_LevelDescription) == 0x0002F0, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_Desc_LevelDescription' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_Desc_LevelName) == 0x0002F8, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_Desc_LevelName' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_Difficulty) == 0x000300, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_Difficulty' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Text_Tittle_DifficultyModifiers) == 0x000308, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Text_Tittle_DifficultyModifiers' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, VerticalBox_SecurityCompanies) == 0x000310, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::VerticalBox_SecurityCompanies' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, TWK_DefaultHeistImage) == 0x000318, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::TWK_DefaultHeistImage' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, RT_HeistData) == 0x000320, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::RT_HeistData' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, RT_Difficulty) == 0x000328, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::RT_Difficulty' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, DifficultyDesc) == 0x000330, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::DifficultyDesc' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, In_Visibility) == 0x000380, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::In_Visibility' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Out_Min) == 0x000384, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Out_Min' has a wrong offset!");
static_assert(offsetof(UWBP_CrimeNet_HeistDescriptionPanel_C, Out_Max) == 0x000388, "Member 'UWBP_CrimeNet_HeistDescriptionPanel_C::Out_Max' has a wrong offset!");

}

