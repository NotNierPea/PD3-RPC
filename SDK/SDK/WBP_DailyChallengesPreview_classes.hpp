#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengesPreview

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DailyChallengesPreview.WBP_DailyChallengesPreview_C
// 0x0050 (0x02E0 - 0x0290)
class UWBP_DailyChallengesPreview_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_UI_Menu_ActionInputButton_C*       ActionButton;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Dailies_VB;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ChallengesStackValue;                              // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDailiesToShow;                                  // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DailyItemCountLimit;                               // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundChallengeCount;                               // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddedChallengeCount;                               // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZChallengeData>              ChallengesNotFound;                                // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          InputEnabled;                                      // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_DailyChallengesPreview(int32 EntryPoint);
	void EnableInput(bool InEnable);
	void OnInstallStateChanged(bool bIsGameInstallPending);
	void OnInitialized();
	void OnDailyChallengesUpdated();
	void BndEvt__WBP_DailyChallengesPreview_ActionButton_K2Node_ComponentBoundEvent_0_OnButtonClicked__DelegateSignature();
	void OpenChallengesScreen();
	void BndEvt__WBP_DailyChallengesPreview_ActionButton_K2Node_ComponentBoundEvent_1_SBZOnActionChanged__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void UpdateChallengesFromData();
	void Update_Visibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DailyChallengesPreview_C">();
	}
	static class UWBP_DailyChallengesPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DailyChallengesPreview_C>();
	}
};
static_assert(alignof(UWBP_DailyChallengesPreview_C) == 0x000008, "Wrong alignment on UWBP_DailyChallengesPreview_C");
static_assert(sizeof(UWBP_DailyChallengesPreview_C) == 0x0002E0, "Wrong size on UWBP_DailyChallengesPreview_C");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, UberGraphFrame) == 0x000290, "Member 'UWBP_DailyChallengesPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, ActionButton) == 0x000298, "Member 'UWBP_DailyChallengesPreview_C::ActionButton' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, Dailies_VB) == 0x0002A0, "Member 'UWBP_DailyChallengesPreview_C::Dailies_VB' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, ChallengesStackValue) == 0x0002A8, "Member 'UWBP_DailyChallengesPreview_C::ChallengesStackValue' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, MaxDailiesToShow) == 0x0002B4, "Member 'UWBP_DailyChallengesPreview_C::MaxDailiesToShow' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, DailyItemCountLimit) == 0x0002B8, "Member 'UWBP_DailyChallengesPreview_C::DailyItemCountLimit' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, FoundChallengeCount) == 0x0002BC, "Member 'UWBP_DailyChallengesPreview_C::FoundChallengeCount' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, AddedChallengeCount) == 0x0002C0, "Member 'UWBP_DailyChallengesPreview_C::AddedChallengeCount' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, ChallengesNotFound) == 0x0002C8, "Member 'UWBP_DailyChallengesPreview_C::ChallengesNotFound' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengesPreview_C, InputEnabled) == 0x0002D8, "Member 'UWBP_DailyChallengesPreview_C::InputEnabled' has a wrong offset!");

}

