#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SingleCableBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CableBox_Color_Enum_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "LowEntryExtendedStandardLibrary_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SingleCableBox.BP_SingleCableBox_C
// 0x0110 (0x03E0 - 0x02D0)
class ABP_SingleCableBox_C final : public ASBZStaticInteractionActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   NumBox;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender_1;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InteractDoor;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_4;                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_3;                           // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_2;                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable_Cable_1;                           // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cable_4;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cable_3;                                           // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cable_2;                                           // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cable_1;                                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CableBox;                                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OpenDoor_NewTrack_0_E2677A4E4F1194558D7B1589ABA68384; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenDoor__Direction_E2677A4E4F1194558D7B1589ABA68384; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenDoor;                                          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CableArray;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstance*>              MaterialArray;                                     // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMeshComponent*                   CurrentCable;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CorrectColorToCut;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInt;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZObjective*                          SBZObjectiveRef;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZReplicatedBinaryStateActor*         SBZReplicatedBinaryState;                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECableBox_Color_Enum                          ColEnum;                                           // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorUsingBoxReference;                            // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          IsDisabled;                                        // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x03C8(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)

public:
	void ExecuteUbergraph_BP_SingleCableBox(int32 EntryPoint);
	void BndEvt__Interactable_K2Node_ComponentBoundEvent_10_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__SBZInteractable_Cable_4_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__SBZInteractable_Cable_3_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__SBZInteractable_Cable_2_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__SBZInteractable_Cable_1_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void Randomize();
	void SetCorrectColor();
	void Wrong();
	void ClientGrayOut();
	void WrongWireCut();
	void RigthWireCut();
	void ReceiveBeginPlay();
	void OpenDoor__UpdateFunc();
	void OpenDoor__FinishedFunc();
	void OnRep_RandomInt();
	void NewFunction_0();
	void OnRep_Text();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SingleCableBox_C">();
	}
	static class ABP_SingleCableBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SingleCableBox_C>();
	}
};
static_assert(alignof(ABP_SingleCableBox_C) == 0x000008, "Wrong alignment on ABP_SingleCableBox_C");
static_assert(sizeof(ABP_SingleCableBox_C) == 0x0003E0, "Wrong size on ABP_SingleCableBox_C");
static_assert(offsetof(ABP_SingleCableBox_C, UberGraphFrame) == 0x0002D0, "Member 'ABP_SingleCableBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, NumBox) == 0x0002D8, "Member 'ABP_SingleCableBox_C::NumBox' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, TextRender_1) == 0x0002E0, "Member 'ABP_SingleCableBox_C::TextRender_1' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, TextRender) == 0x0002E8, "Member 'ABP_SingleCableBox_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Ak) == 0x0002F0, "Member 'ABP_SingleCableBox_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, InteractDoor) == 0x0002F8, "Member 'ABP_SingleCableBox_C::InteractDoor' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZInteractable_Cable_4) == 0x000300, "Member 'ABP_SingleCableBox_C::SBZInteractable_Cable_4' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZInteractable_Cable_3) == 0x000308, "Member 'ABP_SingleCableBox_C::SBZInteractable_Cable_3' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZInteractable_Cable_2) == 0x000310, "Member 'ABP_SingleCableBox_C::SBZInteractable_Cable_2' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZInteractable_Cable_1) == 0x000318, "Member 'ABP_SingleCableBox_C::SBZInteractable_Cable_1' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Door) == 0x000320, "Member 'ABP_SingleCableBox_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Cable_4) == 0x000328, "Member 'ABP_SingleCableBox_C::Cable_4' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Cable_3) == 0x000330, "Member 'ABP_SingleCableBox_C::Cable_3' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Cable_2) == 0x000338, "Member 'ABP_SingleCableBox_C::Cable_2' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Cable_1) == 0x000340, "Member 'ABP_SingleCableBox_C::Cable_1' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, CableBox) == 0x000348, "Member 'ABP_SingleCableBox_C::CableBox' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, OpenDoor_NewTrack_0_E2677A4E4F1194558D7B1589ABA68384) == 0x000350, "Member 'ABP_SingleCableBox_C::OpenDoor_NewTrack_0_E2677A4E4F1194558D7B1589ABA68384' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, OpenDoor__Direction_E2677A4E4F1194558D7B1589ABA68384) == 0x000354, "Member 'ABP_SingleCableBox_C::OpenDoor__Direction_E2677A4E4F1194558D7B1589ABA68384' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, OpenDoor) == 0x000358, "Member 'ABP_SingleCableBox_C::OpenDoor' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, CableArray) == 0x000360, "Member 'ABP_SingleCableBox_C::CableArray' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, MaterialArray) == 0x000370, "Member 'ABP_SingleCableBox_C::MaterialArray' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, CurrentCable) == 0x000380, "Member 'ABP_SingleCableBox_C::CurrentCable' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, CorrectColorToCut) == 0x000388, "Member 'ABP_SingleCableBox_C::CorrectColorToCut' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, RandomInt) == 0x000390, "Member 'ABP_SingleCableBox_C::RandomInt' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZObjectiveRef) == 0x000398, "Member 'ABP_SingleCableBox_C::SBZObjectiveRef' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, SBZReplicatedBinaryState) == 0x0003A0, "Member 'ABP_SingleCableBox_C::SBZReplicatedBinaryState' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, ColEnum) == 0x0003A8, "Member 'ABP_SingleCableBox_C::ColEnum' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, ActorUsingBoxReference) == 0x0003B0, "Member 'ABP_SingleCableBox_C::ActorUsingBoxReference' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, IsDisabled) == 0x0003C0, "Member 'ABP_SingleCableBox_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(ABP_SingleCableBox_C, Text) == 0x0003C8, "Member 'ABP_SingleCableBox_C::Text' has a wrong offset!");

}

