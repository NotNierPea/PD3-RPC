#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArmorChunk_EquippedDisplay

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ArmorChunk_EquippedDisplay.WBP_ArmorChunk_EquippedDisplay_C
// 0x0060 (0x02F0 - 0x0290)
class UWBP_ArmorChunk_EquippedDisplay_C final : public UUserWidget
{
public:
	class UWBP_ArmorChunk_StatLine_C*             AmmoCap_StatLine;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_StatLine_C*             ConsumableSlots_StatLine;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_StatLine_C*             MaxDowns_StatLine;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PassiveStat_T;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_StatLine_C*             PlateRegen_StatLine;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_StatLine_C*             Plates_StatLine;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_EquippedDisplay_Slot_C* Slot1;                                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_EquippedDisplay_Slot_C* Slot2;                                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_EquippedDisplay_Slot_C* Slot3;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_EquippedDisplay_Slot_C* Slot4;                                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Slots_Hb;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArmorChunk_StatLine_C*             SpeedPenalty_StatLine;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetSlotData(const struct FSBZArmorConfig& ArmorConfig, bool IsLoadout);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ArmorChunk_EquippedDisplay_C">();
	}
	static class UWBP_ArmorChunk_EquippedDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ArmorChunk_EquippedDisplay_C>();
	}
};
static_assert(alignof(UWBP_ArmorChunk_EquippedDisplay_C) == 0x000008, "Wrong alignment on UWBP_ArmorChunk_EquippedDisplay_C");
static_assert(sizeof(UWBP_ArmorChunk_EquippedDisplay_C) == 0x0002F0, "Wrong size on UWBP_ArmorChunk_EquippedDisplay_C");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, AmmoCap_StatLine) == 0x000290, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::AmmoCap_StatLine' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, ConsumableSlots_StatLine) == 0x000298, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::ConsumableSlots_StatLine' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, MaxDowns_StatLine) == 0x0002A0, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::MaxDowns_StatLine' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, PassiveStat_T) == 0x0002A8, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::PassiveStat_T' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, PlateRegen_StatLine) == 0x0002B0, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::PlateRegen_StatLine' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Plates_StatLine) == 0x0002B8, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Plates_StatLine' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Slot1) == 0x0002C0, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Slot1' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Slot2) == 0x0002C8, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Slot2' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Slot3) == 0x0002D0, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Slot3' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Slot4) == 0x0002D8, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Slot4' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, Slots_Hb) == 0x0002E0, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::Slots_Hb' has a wrong offset!");
static_assert(offsetof(UWBP_ArmorChunk_EquippedDisplay_C, SpeedPenalty_StatLine) == 0x0002E8, "Member 'UWBP_ArmorChunk_EquippedDisplay_C::SpeedPenalty_StatLine' has a wrong offset!");

}

