#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_ItemSlotButton

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton
// 0x0030 (0x0030 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsActiveItem;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZInventoryBaseData*            CallFunc_GetItemData_ReturnValue;                  // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_ReturnValue;                  // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton) == 0x000030, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, Temp_byte_Variable) == 0x000004, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, K2Node_Event_IsDesignTime) == 0x000006, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, K2Node_Event_bInHasFocus) == 0x000007, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, K2Node_Event_bInIsHovered) == 0x000008, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, K2Node_Event_bIsActiveItem) == 0x000009, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::K2Node_Event_bIsActiveItem' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, CallFunc_GetItemData_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, CallFunc_IsAvailable_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::CallFunc_IsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, Temp_bool_Variable) == 0x000019, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton, K2Node_Select_Default) == 0x000028, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ItemSlotButton::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.SetActiveItem
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem final
{
public:
	bool                                          bIsActiveItem;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem) == 0x000001, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem, bIsActiveItem) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetActiveItem::bIsActiveItem' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_OnFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_OnFocused");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused) == 0x000028, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_OnFocused");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_OnFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_ItemSlotButton_C_OnFocused::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_ItemSlotButton_C_OnFocused::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_OnFocused, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_ItemSlotButton_C_OnFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.InitializeItemVisuals
// 0x0188 (0x0188 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals final
{
public:
	class USBZInventoryBaseData*                  InInventoryData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZArmorData*                          K2Node_DynamicCast_AsSBZArmor_Data;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZEquippableData*                     K2Node_DynamicCast_AsSBZEquippable_Data;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZOverskillLoadoutData*               K2Node_DynamicCast_AsSBZOverskill_Loadout_Data;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0038(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLockedByDLC_ReturnValue;                // 0x0052(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0058(0x0018)(ConstParm)
	ESBZUIItemSource                              CallFunc_GetItemSource_ReturnValue;                // 0x0070(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	int32                                         CallFunc_GetInfamyLevel_ReturnValue;               // 0x00E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	bool                                          CallFunc_IsAvailable_ReturnValue;                  // 0x0158(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0170(0x0018)()
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals) == 0x000188, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, InInventoryData) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::InInventoryData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_AsSBZArmor_Data) == 0x000008, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_AsSBZArmor_Data' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_AsSBZEquippable_Data) == 0x000018, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_AsSBZEquippable_Data' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_AsSBZOverskill_Loadout_Data) == 0x000028, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_AsSBZOverskill_Loadout_Data' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_GetDisplayName_OutDisplayName) == 0x000038, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_GetDisplayName_OutHasText) == 0x000050, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_IsLockedByDLC_ReturnValue) == 0x000052, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_IsLockedByDLC_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_GetSkillName_ReturnValue) == 0x000058, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_GetItemSource_ReturnValue) == 0x000070, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_GetItemSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_GetInfamyLevel_ReturnValue) == 0x0000E8, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_GetInfamyLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_MakeArray_Array_1) == 0x000130, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_IsAvailable_ReturnValue) == 0x000158, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_IsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, K2Node_MakeArray_Array_2) == 0x000160, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals, CallFunc_Format_ReturnValue_2) == 0x000170, "Member 'WBP_UI_Inventory_ItemSlotButton_C_InitializeItemVisuals::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.SetItemNameColour
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour final
{
public:
	struct FLinearColor                           DesiredColour;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0040(0x0028)()
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour) == 0x000068, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour, DesiredColour) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour::DesiredColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour, CallFunc_TextIsEmpty_ReturnValue) == 0x000039, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour, K2Node_MakeStruct_SlateColor_1) == 0x000040, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetItemNameColour::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.RefreshVisuals
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals) == 0x000002, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000001, "Member 'WBP_UI_Inventory_ItemSlotButton_C_RefreshVisuals::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_ItemSlotButton.WBP_UI_Inventory_ItemSlotButton_C.SetArmorChunkImages
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages final
{
public:
	class USBZArmorData*                          ArmorData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESBZArmorChunkType>                    CallFunc_GetChunkTypeArray_ReturnValue;            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	ESBZArmorChunkType                            CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZArmorSettings*                CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZArmorChunkTypeData                 CallFunc_GetChunkData_ReturnValue;                 // 0x0038(0x0054)(ConstParm, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages");
static_assert(sizeof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages) == 0x0000B0, "Wrong size on WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, ArmorData) == 0x000000, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::ArmorData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_GetChunkTypeArray_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_GetChunkTypeArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Get_ReturnValue) == 0x000030, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_GetChunkData_ReturnValue) == 0x000038, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_GetChunkData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'WBP_UI_Inventory_ItemSlotButton_C_SetArmorChunkImages::CallFunc_Array_Get_Item_1' has a wrong offset!");

}

