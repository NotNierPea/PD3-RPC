#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SecurityScreen

#include "Basic.hpp"

#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SecurityScreen.BP_SecurityScreen_C
// 0x0020 (0x02D8 - 0x02B8)
class ABP_SecurityScreen_C final : public ASBZViewTargetCollectionInteraction
{
public:
	class UStaticMeshComponent*                   Plane;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Screen;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RotateFlippedMesh;                                 // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SecurityScreen_C">();
	}
	static class ABP_SecurityScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SecurityScreen_C>();
	}
};
static_assert(alignof(ABP_SecurityScreen_C) == 0x000008, "Wrong alignment on ABP_SecurityScreen_C");
static_assert(sizeof(ABP_SecurityScreen_C) == 0x0002D8, "Wrong size on ABP_SecurityScreen_C");
static_assert(offsetof(ABP_SecurityScreen_C, Plane) == 0x0002B8, "Member 'ABP_SecurityScreen_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_SecurityScreen_C, SBZOutline) == 0x0002C0, "Member 'ABP_SecurityScreen_C::SBZOutline' has a wrong offset!");
static_assert(offsetof(ABP_SecurityScreen_C, Screen) == 0x0002C8, "Member 'ABP_SecurityScreen_C::Screen' has a wrong offset!");
static_assert(offsetof(ABP_SecurityScreen_C, RotateFlippedMesh) == 0x0002D0, "Member 'ABP_SecurityScreen_C::RotateFlippedMesh' has a wrong offset!");

}

