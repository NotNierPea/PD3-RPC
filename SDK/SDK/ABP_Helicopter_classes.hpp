#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Helicopter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Helicopter.ABP_Helicopter_C
// 0x0420 (0x0E80 - 0x0A60)
class UABP_Helicopter_C final : public USBZAerialVehicleAnimation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0A68(0x0030)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose;                         // 0x0A98(0x0020)()
	struct FSBZAnimNode_BuiltInAnimMontagePlayer  SBZAnimGraphNode_BuiltInAnimMontagePlayer;         // 0x0AB8(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0BB8(0x0138)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0CF0(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0E28(0x0048)()
	float                                         Main_Rotor_Yaw;                                    // 0x0E70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tail_Rotor_Yaw;                                    // 0x0E74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Main_Rotor_Speed;                                  // 0x0E78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tail_Rotor_Speed;                                  // 0x0E7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Helicopter(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Helicopter_AnimGraphNode_ModifyBone_A78D83F4407A86000184928B157B16F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Helicopter_AnimGraphNode_ModifyBone_AC792ADB49F5E54BC06324AEBDF31802();
	void SetDoorState(ESBZAerialVehicleDoor Door, bool bIsOpen);
	void UpdateRotorYaw(float Current_Yaw, float Speed, float Delta_Time, float* New_Yaw);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Helicopter_C">();
	}
	static class UABP_Helicopter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Helicopter_C>();
	}
};
static_assert(alignof(UABP_Helicopter_C) == 0x000010, "Wrong alignment on UABP_Helicopter_C");
static_assert(sizeof(UABP_Helicopter_C) == 0x000E80, "Wrong size on UABP_Helicopter_C");
static_assert(offsetof(UABP_Helicopter_C, UberGraphFrame) == 0x000A60, "Member 'UABP_Helicopter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, AnimGraphNode_ComponentToLocalSpace) == 0x000A68, "Member 'UABP_Helicopter_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, AnimGraphNode_MeshRefPose) == 0x000A98, "Member 'UABP_Helicopter_C::AnimGraphNode_MeshRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, SBZAnimGraphNode_BuiltInAnimMontagePlayer) == 0x000AB8, "Member 'UABP_Helicopter_C::SBZAnimGraphNode_BuiltInAnimMontagePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, AnimGraphNode_ModifyBone_1) == 0x000BB8, "Member 'UABP_Helicopter_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, AnimGraphNode_ModifyBone) == 0x000CF0, "Member 'UABP_Helicopter_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, AnimGraphNode_Root) == 0x000E28, "Member 'UABP_Helicopter_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, Main_Rotor_Yaw) == 0x000E70, "Member 'UABP_Helicopter_C::Main_Rotor_Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, Tail_Rotor_Yaw) == 0x000E74, "Member 'UABP_Helicopter_C::Tail_Rotor_Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, Main_Rotor_Speed) == 0x000E78, "Member 'UABP_Helicopter_C::Main_Rotor_Speed' has a wrong offset!");
static_assert(offsetof(UABP_Helicopter_C, Tail_Rotor_Speed) == 0x000E7C, "Member 'UABP_Helicopter_C::Tail_Rotor_Speed' has a wrong offset!");

}

