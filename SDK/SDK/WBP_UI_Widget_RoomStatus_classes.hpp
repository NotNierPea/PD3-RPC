#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_RoomStatus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Widget_RoomStatus.WBP_UI_Widget_RoomStatus_C
// 0x0028 (0x02E8 - 0x02C0)
class UWBP_UI_Widget_RoomStatus_C final : public UPD3HUDRoomStatusWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnChanged;                                         // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_FrameRoom;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_RoomName;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_RoomStatus;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_Widget_RoomStatus(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnHeistGoneLoud();
	void OnRoomTypeChanged(ESBZRoomType InRoomType);
	void OnNoRoomData();
	void OnRoomChanged(class ASBZRoomVolume* RoomVolume);
	void GetColorForState(ESBZRoomType RoomType_0, struct FLinearColor* RoomTypeColor);
	void SetRoomTypeText(ESBZRoomType RoomType_0);
	void SetRoomName(const class FText& InRoomName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Widget_RoomStatus_C">();
	}
	static class UWBP_UI_Widget_RoomStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Widget_RoomStatus_C>();
	}
};
static_assert(alignof(UWBP_UI_Widget_RoomStatus_C) == 0x000008, "Wrong alignment on UWBP_UI_Widget_RoomStatus_C");
static_assert(sizeof(UWBP_UI_Widget_RoomStatus_C) == 0x0002E8, "Wrong size on UWBP_UI_Widget_RoomStatus_C");
static_assert(offsetof(UWBP_UI_Widget_RoomStatus_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_UI_Widget_RoomStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_RoomStatus_C, OnChanged) == 0x0002C8, "Member 'UWBP_UI_Widget_RoomStatus_C::OnChanged' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_RoomStatus_C, Image_FrameRoom) == 0x0002D0, "Member 'UWBP_UI_Widget_RoomStatus_C::Image_FrameRoom' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_RoomStatus_C, Text_RoomName) == 0x0002D8, "Member 'UWBP_UI_Widget_RoomStatus_C::Text_RoomName' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_RoomStatus_C, Text_RoomStatus) == 0x0002E0, "Member 'UWBP_UI_Widget_RoomStatus_C::Text_RoomStatus' has a wrong offset!");

}

