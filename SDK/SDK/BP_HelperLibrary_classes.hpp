#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HelperLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HelperLibrary.BP_HelperLibrary_C
// 0x0000 (0x0030 - 0x0030)
class UBP_HelperLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void GlassHit(class UStaticMeshComponent* HitMesh, int32 VariationIndex, float VariationSetting, class UAkAudioEvent* Sound, bool bDoCosmetics, bool bDestroyed, int32 ParticleCount, float ParticleSize, const struct FLinearColor& ParticleColor, class APawn* Instigator, class UObject* __WorldContext);
	static void GlassHit_MultiVFX(class UStaticMeshComponent* HitMesh, int32 VariationIndex, float VariationSetting, class UAkAudioEvent* Sound, bool bDoCosmetics, bool bDestroyed, class APawn* Instigator, TArray<struct FBPS_GlassHit_VFXData>& VFX, class UObject* __WorldContext);
	static void SetMeshIfValid(class UStaticMeshComponent* StaticMeshComponent, class UStaticMesh* NewStaticMesh, class UObject* __WorldContext);
	static void Set_All_Players_Ignore_Start_Penetrating(class AActor* Target, bool ShouldIgnore, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HelperLibrary_C">();
	}
	static class UBP_HelperLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HelperLibrary_C>();
	}
};
static_assert(alignof(UBP_HelperLibrary_C) == 0x000008, "Wrong alignment on UBP_HelperLibrary_C");
static_assert(sizeof(UBP_HelperLibrary_C) == 0x000030, "Wrong size on UBP_HelperLibrary_C");

}

