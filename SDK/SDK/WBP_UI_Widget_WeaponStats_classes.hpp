#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_WeaponStats

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Widget_WeaponStats.WBP_UI_Widget_WeaponStats_C
// 0x00D8 (0x04A0 - 0x03C8)
class UWBP_UI_Widget_WeaponStats_C final : public USBZMainMenuWeaponStatsWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHW12DEV_WeaponStats_Entry_TwoText_C*   HW12DEV_WeaponStats_Entry_TwoText;                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHW12DEV_WeaponStats_Entry_TwoText_C*   HW12DEV_WeaponStats_Entry_TwoText_121;             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHW12DEV_WeaponStats_Entry_TwoTextHeader_C* HW12DEV_WeaponStats_Entry_TwoTextHeader;       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Accuracy_A;                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Accuracy_B;                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Handling_A;                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Handling_B;                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Recoil_A;                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Recoil_B;                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Stability_A;                // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_WeaponStat_Stability_B;                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Equipped_Divider;             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Equipped_Inventory;           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Equipped_Mag;                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Selected_Divider;             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Selected_Inventory;           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_Ammo_Selected_Mag;                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_FireMode_Equipped;                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WeaponStat_FireMode_Selected;                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bFlipCompare;                                      // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DowngradeColour;                                   // 0x046C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UpgradeColour;                                     // 0x047C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColour;                                     // 0x048C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_Widget_WeaponStats(int32 EntryPoint);
	void OnUpdateVisuals();
	void SetAmmoStat();
	void SetWeaponStat(class UProgressBar* ProgressBarA, class UProgressBar* ProgressBarB, float BaseStat, float CompareStat);
	void GetStatValuesFromEquippableConfig(const struct FSBZEquippableConfig& Equippable_Config, TArray<float>* Damage, TArray<float>* Recoil, TArray<float>* Stability, TArray<float>* Accuracy, TArray<float>* Handling, TArray<float>* FireRate);
	void GetFirstNValuesFromArray(TArray<float>& Array, int32 Values, TArray<float>* OutArray);
	void DetermineDowngradeUpgradeColour(float BaseVal, float CompareVal, struct FLinearColor* Colour);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Widget_WeaponStats_C">();
	}
	static class UWBP_UI_Widget_WeaponStats_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Widget_WeaponStats_C>();
	}
};
static_assert(alignof(UWBP_UI_Widget_WeaponStats_C) == 0x000008, "Wrong alignment on UWBP_UI_Widget_WeaponStats_C");
static_assert(sizeof(UWBP_UI_Widget_WeaponStats_C) == 0x0004A0, "Wrong size on UWBP_UI_Widget_WeaponStats_C");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, UberGraphFrame) == 0x0003C8, "Member 'UWBP_UI_Widget_WeaponStats_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, HW12DEV_WeaponStats_Entry_TwoText) == 0x0003D0, "Member 'UWBP_UI_Widget_WeaponStats_C::HW12DEV_WeaponStats_Entry_TwoText' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, HW12DEV_WeaponStats_Entry_TwoText_121) == 0x0003D8, "Member 'UWBP_UI_Widget_WeaponStats_C::HW12DEV_WeaponStats_Entry_TwoText_121' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, HW12DEV_WeaponStats_Entry_TwoTextHeader) == 0x0003E0, "Member 'UWBP_UI_Widget_WeaponStats_C::HW12DEV_WeaponStats_Entry_TwoTextHeader' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Accuracy_A) == 0x0003E8, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Accuracy_A' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Accuracy_B) == 0x0003F0, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Accuracy_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Handling_A) == 0x0003F8, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Handling_A' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Handling_B) == 0x000400, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Handling_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Recoil_A) == 0x000408, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Recoil_A' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Recoil_B) == 0x000410, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Recoil_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Stability_A) == 0x000418, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Stability_A' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, ProgressBar_WeaponStat_Stability_B) == 0x000420, "Member 'UWBP_UI_Widget_WeaponStats_C::ProgressBar_WeaponStat_Stability_B' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Equipped_Divider) == 0x000428, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Equipped_Divider' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Equipped_Inventory) == 0x000430, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Equipped_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Equipped_Mag) == 0x000438, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Equipped_Mag' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Selected_Divider) == 0x000440, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Selected_Divider' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Selected_Inventory) == 0x000448, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Selected_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_Ammo_Selected_Mag) == 0x000450, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_Ammo_Selected_Mag' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_FireMode_Equipped) == 0x000458, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_FireMode_Equipped' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, Text_WeaponStat_FireMode_Selected) == 0x000460, "Member 'UWBP_UI_Widget_WeaponStats_C::Text_WeaponStat_FireMode_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, bFlipCompare) == 0x000468, "Member 'UWBP_UI_Widget_WeaponStats_C::bFlipCompare' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, DowngradeColour) == 0x00046C, "Member 'UWBP_UI_Widget_WeaponStats_C::DowngradeColour' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, UpgradeColour) == 0x00047C, "Member 'UWBP_UI_Widget_WeaponStats_C::UpgradeColour' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Widget_WeaponStats_C, DefaultColour) == 0x00048C, "Member 'UWBP_UI_Widget_WeaponStats_C::DefaultColour' has a wrong offset!");

}

