#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_RinoHud_CounterIcon_ActorInclusion

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct ST_RinoHud_CounterIcon_ActorInclusion.ST_RinoHud_CounterIcon_ActorInclusion
// 0x0018 (0x0018 - 0x0000)
struct FST_RinoHud_CounterIcon_ActorInclusion final
{
public:
	class UClass*                                 Actor_2_7D62A8914DDE24F63D1010886410B255;          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSubtract_5_672EC3BE410B4CBCAECBFE9B1E208D6C;    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCheckIsAlive_7_60162A35426C49F9DBC2158E7A60C163;  // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsBinaryActor_9_4F34E1674F32BCAC259AFD9653875172; // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBinaryStateMatch_17_106F3FA442F26E23F242BCBB42AD1A66; // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsIntActor_13_657CD13A46C5EFC3F8DF008431B81BBA;   // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         intStateMatch_15_0B61888E4930CEBC123978923ABC55B4; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FST_RinoHud_CounterIcon_ActorInclusion) == 0x000008, "Wrong alignment on FST_RinoHud_CounterIcon_ActorInclusion");
static_assert(sizeof(FST_RinoHud_CounterIcon_ActorInclusion) == 0x000018, "Wrong size on FST_RinoHud_CounterIcon_ActorInclusion");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, Actor_2_7D62A8914DDE24F63D1010886410B255) == 0x000000, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::Actor_2_7D62A8914DDE24F63D1010886410B255' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, bIsSubtract_5_672EC3BE410B4CBCAECBFE9B1E208D6C) == 0x000008, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::bIsSubtract_5_672EC3BE410B4CBCAECBFE9B1E208D6C' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, bCheckIsAlive_7_60162A35426C49F9DBC2158E7A60C163) == 0x000009, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::bCheckIsAlive_7_60162A35426C49F9DBC2158E7A60C163' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, bIsBinaryActor_9_4F34E1674F32BCAC259AFD9653875172) == 0x00000A, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::bIsBinaryActor_9_4F34E1674F32BCAC259AFD9653875172' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, bBinaryStateMatch_17_106F3FA442F26E23F242BCBB42AD1A66) == 0x00000B, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::bBinaryStateMatch_17_106F3FA442F26E23F242BCBB42AD1A66' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, bIsIntActor_13_657CD13A46C5EFC3F8DF008431B81BBA) == 0x00000C, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::bIsIntActor_13_657CD13A46C5EFC3F8DF008431B81BBA' has a wrong offset!");
static_assert(offsetof(FST_RinoHud_CounterIcon_ActorInclusion, intStateMatch_15_0B61888E4930CEBC123978923ABC55B4) == 0x000010, "Member 'FST_RinoHud_CounterIcon_ActorInclusion::intStateMatch_15_0B61888E4930CEBC123978923ABC55B4' has a wrong offset!");

}

