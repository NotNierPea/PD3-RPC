#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NRFTWAtmoVarHeist

#include "Basic.hpp"

#include "TimeSettings_structs.hpp"


namespace SDK::Params
{

// Function NRFTWAtmoVarHeist.NRFTWAtmoVarHeist_C.ExecuteUbergraph_NRFTWAtmoVarHeist
// 0x0650 (0x0650 - 0x0000)
struct NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FTimeSettings& TimeSettings)> K2Node_CreateDelegate_OutputDelegate;  // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class UDelegateTimer* Timer, float ElapsedTime, float TimeSinceLast)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDelegateTimer*                   K2Node_CustomEvent_Timer;                          // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSinceLast;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDelegateTimer*                         Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDelegateTimer*                         CallFunc_CreateDelegateTimer_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirectionalLight*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSettings                          K2Node_CustomEvent_TimeSettings;                   // 0x0070(0x05B0)(HasGetValueTypeHash)
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x0620(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x062B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtmosphericFog*                        CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist) == 0x000010, "Wrong alignment on NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist");
static_assert(sizeof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist) == 0x000650, "Wrong size on NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, EntryPoint) == 0x000000, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::EntryPoint' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CustomEvent_Timer) == 0x000030, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CustomEvent_Timer' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CustomEvent_ElapsedTime) == 0x000038, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CustomEvent_TimeSinceLast) == 0x00003C, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CustomEvent_TimeSinceLast' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, Temp_float_Variable) == 0x000040, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, Temp_float_Variable_1) == 0x000044, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, Temp_object_Variable) == 0x000048, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_CreateDelegateTimer_ReturnValue) == 0x000050, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_CreateDelegateTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_GetActorOfClass_ReturnValue) == 0x000060, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_CustomEvent_TimeSettings) == 0x000070, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_CustomEvent_TimeSettings' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x000620, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_DynamicCast_bSuccess) == 0x000628, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000629, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00062A, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_BooleanOR_ReturnValue) == 0x00062B, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000630, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, K2Node_Event_DeltaSeconds) == 0x000638, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_Lerp_ReturnValue) == 0x00063C, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000640, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000644, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000648, "Member 'NRFTWAtmoVarHeist_C_ExecuteUbergraph_NRFTWAtmoVarHeist::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function NRFTWAtmoVarHeist.NRFTWAtmoVarHeist_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NRFTWAtmoVarHeist_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NRFTWAtmoVarHeist_C_ReceiveTick) == 0x000004, "Wrong alignment on NRFTWAtmoVarHeist_C_ReceiveTick");
static_assert(sizeof(NRFTWAtmoVarHeist_C_ReceiveTick) == 0x000004, "Wrong size on NRFTWAtmoVarHeist_C_ReceiveTick");
static_assert(offsetof(NRFTWAtmoVarHeist_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NRFTWAtmoVarHeist_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NRFTWAtmoVarHeist.NRFTWAtmoVarHeist_C.TimeSet
// 0x05B0 (0x05B0 - 0x0000)
struct NRFTWAtmoVarHeist_C_TimeSet final
{
public:
	struct FTimeSettings                          TimeSettings;                                      // 0x0000(0x05B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NRFTWAtmoVarHeist_C_TimeSet) == 0x000010, "Wrong alignment on NRFTWAtmoVarHeist_C_TimeSet");
static_assert(sizeof(NRFTWAtmoVarHeist_C_TimeSet) == 0x0005B0, "Wrong size on NRFTWAtmoVarHeist_C_TimeSet");
static_assert(offsetof(NRFTWAtmoVarHeist_C_TimeSet, TimeSettings) == 0x000000, "Member 'NRFTWAtmoVarHeist_C_TimeSet::TimeSettings' has a wrong offset!");

// Function NRFTWAtmoVarHeist.NRFTWAtmoVarHeist_C.TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3
// 0x0010 (0x0010 - 0x0000)
struct NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3 final
{
public:
	const class UDelegateTimer*                   Timer;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSinceLast;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3) == 0x000008, "Wrong alignment on NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3");
static_assert(sizeof(NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3) == 0x000010, "Wrong size on NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3");
static_assert(offsetof(NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3, Timer) == 0x000000, "Member 'NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3::Timer' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3, ElapsedTime) == 0x000008, "Member 'NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3, TimeSinceLast) == 0x00000C, "Member 'NRFTWAtmoVarHeist_C_TickExec_F08F7DC24B7798AA50E3BC9749ABDAE3::TimeSinceLast' has a wrong offset!");

}

