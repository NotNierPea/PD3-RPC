#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WP_VariationSelector

#include "Basic.hpp"

#include "WP_VariationSelector_classes.hpp"
#include "WP_VariationSelector_parameters.hpp"


namespace SDK
{

// Function WP_VariationSelector.WP_VariationSelector_C.ExecuteUbergraph_WP_VariationSelector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWP_VariationSelector_C::ExecuteUbergraph_WP_VariationSelector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "ExecuteUbergraph_WP_VariationSelector");

	Params::WP_VariationSelector_C_ExecuteUbergraph_WP_VariationSelector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WP_VariationSelector.WP_VariationSelector_C.BndEvt__WP_VariationSelector_CollapseButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWP_VariationSelector_C::BndEvt__WP_VariationSelector_CollapseButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "BndEvt__WP_VariationSelector_CollapseButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WP_VariationSelector.WP_VariationSelector_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWP_VariationSelector_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WP_VariationSelector.WP_VariationSelector_C.BndEvt__WP_VariationSelector_TimeNextButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWP_VariationSelector_C::BndEvt__WP_VariationSelector_TimeNextButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "BndEvt__WP_VariationSelector_TimeNextButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WP_VariationSelector.WP_VariationSelector_C.BndEvt__WP_VariationSelector_WeatherNextButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWP_VariationSelector_C::BndEvt__WP_VariationSelector_WeatherNextButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "BndEvt__WP_VariationSelector_WeatherNextButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WP_VariationSelector.WP_VariationSelector_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWP_VariationSelector_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WP_VariationSelector.WP_VariationSelector_C.Set Available Weather
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EWeatherType>&                   NotAllowed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWP_VariationSelector_C::Set_Available_Weather(TArray<EWeatherType>& NotAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "Set Available Weather");

	Params::WP_VariationSelector_C_Set_Available_Weather Parms{};

	Parms.NotAllowed = std::move(NotAllowed);

	UObject::ProcessEvent(Func, &Parms);

	NotAllowed = std::move(Parms.NotAllowed);
}


// Function WP_VariationSelector.WP_VariationSelector_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    HeistName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWP_VariationSelector_C::Initialize(const class FString& HeistName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "Initialize");

	Params::WP_VariationSelector_C_Initialize Parms{};

	Parms.HeistName = std::move(HeistName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WP_VariationSelector.WP_VariationSelector_C.SetWeather
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeatherType                            Weather                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWP_VariationSelector_C::SetWeather(EWeatherType Weather)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "SetWeather");

	Params::WP_VariationSelector_C_SetWeather Parms{};

	Parms.Weather = Weather;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WP_VariationSelector.WP_VariationSelector_C.SetTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeType                               Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWP_VariationSelector_C::SetTime(ETimeType Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "SetTime");

	Params::WP_VariationSelector_C_SetTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WP_VariationSelector.WP_VariationSelector_C.Get Next Available Time
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeType*                              TimeType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWP_VariationSelector_C::Get_Next_Available_Time(ETimeType* TimeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WP_VariationSelector_C", "Get Next Available Time");

	Params::WP_VariationSelector_C_Get_Next_Available_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TimeType != nullptr)
		*TimeType = Parms.TimeType;
}

}

