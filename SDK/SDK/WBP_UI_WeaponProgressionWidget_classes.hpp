#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_WeaponProgressionWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_WeaponProgressionWidget.WBP_UI_WeaponProgressionWidget_C
// 0x0028 (0x0388 - 0x0360)
class UWBP_UI_WeaponProgressionWidget_C final : public USBZMainMenuWeaponProgressionDisplayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay_WeaponProgression;                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_LevelProgression;                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_WeaponExperience;                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_WeaponLevel;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_WeaponProgressionWidget(int32 EntryPoint);
	void OnDataEmpty();
	void OnNewWeaponData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_WeaponProgressionWidget_C">();
	}
	static class UWBP_UI_WeaponProgressionWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_WeaponProgressionWidget_C>();
	}
};
static_assert(alignof(UWBP_UI_WeaponProgressionWidget_C) == 0x000008, "Wrong alignment on UWBP_UI_WeaponProgressionWidget_C");
static_assert(sizeof(UWBP_UI_WeaponProgressionWidget_C) == 0x000388, "Wrong size on UWBP_UI_WeaponProgressionWidget_C");
static_assert(offsetof(UWBP_UI_WeaponProgressionWidget_C, UberGraphFrame) == 0x000360, "Member 'UWBP_UI_WeaponProgressionWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponProgressionWidget_C, Overlay_WeaponProgression) == 0x000368, "Member 'UWBP_UI_WeaponProgressionWidget_C::Overlay_WeaponProgression' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponProgressionWidget_C, ProgressBar_LevelProgression) == 0x000370, "Member 'UWBP_UI_WeaponProgressionWidget_C::ProgressBar_LevelProgression' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponProgressionWidget_C, Text_WeaponExperience) == 0x000378, "Member 'UWBP_UI_WeaponProgressionWidget_C::Text_WeaponExperience' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponProgressionWidget_C, Text_WeaponLevel) == 0x000380, "Member 'UWBP_UI_WeaponProgressionWidget_C::Text_WeaponLevel' has a wrong offset!");

}

