#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ServerBrowser_DifficultyFilter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ServerBrowserFilterSelectorType_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ServerBrowser_DifficultyFilter.WBP_ServerBrowser_DifficultyFilter_C
// 0x00D8 (0x0450 - 0x0378)
class UWBP_ServerBrowser_DifficultyFilter_C final : public USBZSelectorWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background_I;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Left;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Right;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DifficultySkulls;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Selector_B;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Skull_Hard;                                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Skull_Normal;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Skull_Overkill;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Skull_VeryHard;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Space_LeftTitle;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Space_RightTitle;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_ColonBreak;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_FilterSelection;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_FilterType;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_OptionChoice;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TitleAndText_Hb;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_ServerBrowserFilterSelectorType             SelectorType;                                      // 0x0400(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           OptionChoices;                                     // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(int32 SelectionIndex)> OptionSelected;                             // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsConstructed;                                    // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsInLine;                                         // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bExcludeAnyDifficulty;                             // 0x042A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHideColon;                                        // 0x042B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           ActiveColor_Opacity;                               // 0x042C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InactiveColor_Opacity;                             // 0x043C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsReadOnly;                                       // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_ServerBrowser_DifficultyFilter(int32 EntryPoint);
	void Reset();
	void ButtonFocusedChanged(bool bInHasFocus);
	void SetReadOnly(bool IsReadOnly);
	void Construct();
	void OnSelectionOptionChanged(int32 InCurrentIndex, bool bOverrideReadOnly);
	void Destruct();
	void OnSelectedRight();
	void OnSelectedLeft();
	void BndEvt__WBP_ServerBrowser_DifficultyFilter_Button_Left_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_ServerBrowser_DifficultyFilter_Button_Right_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void BuildOptionsArray();
	void UpdateVisuals();
	void MakeInLine();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ServerBrowser_DifficultyFilter_C">();
	}
	static class UWBP_ServerBrowser_DifficultyFilter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ServerBrowser_DifficultyFilter_C>();
	}
};
static_assert(alignof(UWBP_ServerBrowser_DifficultyFilter_C) == 0x000008, "Wrong alignment on UWBP_ServerBrowser_DifficultyFilter_C");
static_assert(sizeof(UWBP_ServerBrowser_DifficultyFilter_C) == 0x000450, "Wrong size on UWBP_ServerBrowser_DifficultyFilter_C");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, UberGraphFrame) == 0x000378, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Background_I) == 0x000380, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Background_I' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Button_Left) == 0x000388, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Button_Left' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Button_Right) == 0x000390, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Button_Right' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, DifficultySkulls) == 0x000398, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::DifficultySkulls' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Selector_B) == 0x0003A0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Selector_B' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Skull_Hard) == 0x0003A8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Skull_Hard' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Skull_Normal) == 0x0003B0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Skull_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Skull_Overkill) == 0x0003B8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Skull_Overkill' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Skull_VeryHard) == 0x0003C0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Skull_VeryHard' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Space_LeftTitle) == 0x0003C8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Space_LeftTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Space_RightTitle) == 0x0003D0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Space_RightTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Text_ColonBreak) == 0x0003D8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Text_ColonBreak' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Text_FilterSelection) == 0x0003E0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Text_FilterSelection' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Text_FilterType) == 0x0003E8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Text_FilterType' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, Text_OptionChoice) == 0x0003F0, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::Text_OptionChoice' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, TitleAndText_Hb) == 0x0003F8, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::TitleAndText_Hb' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, SelectorType) == 0x000400, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::SelectorType' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, OptionChoices) == 0x000408, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::OptionChoices' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, OptionSelected) == 0x000418, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::OptionSelected' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, bIsConstructed) == 0x000428, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::bIsConstructed' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, bIsInLine) == 0x000429, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::bIsInLine' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, bExcludeAnyDifficulty) == 0x00042A, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::bExcludeAnyDifficulty' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, bHideColon) == 0x00042B, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::bHideColon' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, ActiveColor_Opacity) == 0x00042C, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::ActiveColor_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, InactiveColor_Opacity) == 0x00043C, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::InactiveColor_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_DifficultyFilter_C, bIsReadOnly) == 0x00044C, "Member 'UWBP_ServerBrowser_DifficultyFilter_C::bIsReadOnly' has a wrong offset!");

}

