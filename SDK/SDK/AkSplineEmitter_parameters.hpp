#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AkSplineEmitter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AkSplineEmitter.AkSplineEmitter_C.ExecuteUbergraph_AkSplineEmitter
// 0x02D8 (0x02D8 - 0x0000)
struct AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0134(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01F0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0244(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter) == 0x000008, "Wrong alignment on AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter");
static_assert(sizeof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter) == 0x0002D8, "Wrong size on AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, EntryPoint) == 0x000000, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::EntryPoint' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetCameraRotation_ReturnValue) == 0x000010, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00001C, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Conv_BoolToText_ReturnValue) == 0x000030, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x000090, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000098, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_X) == 0x0000A4, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_Y_1) == 0x0000B4, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_MakeVector_ReturnValue) == 0x0000BC, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint) == 0x0000C8, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1) == 0x0000CC, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_MapRangeClamped_ReturnValue) == 0x0000D0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D4, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000D8, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000130, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, Temp_delegate_Variable) == 0x000134, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000148, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_MakeStruct_FormatArgumentData_2) == 0x000160, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, Temp_struct_Variable) == 0x0001A0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_MakeArray_Array) == 0x0001B0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_PostAkEvent_ReturnValue) == 0x0001C0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_Conv_TextToString_ReturnValue) == 0x0001E0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, K2Node_CreateDelegate_OutputDelegate) == 0x0001F0, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000208, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000210, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000218, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetCameraLocation_ReturnValue) == 0x000220, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_GetCameraRotation_ReturnValue_1) == 0x00022C, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000238, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000244, "Member 'AkSplineEmitter_C_ExecuteUbergraph_AkSplineEmitter::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AkSplineEmitter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AkSplineEmitter_C_ReceiveTick) == 0x000004, "Wrong alignment on AkSplineEmitter_C_ReceiveTick");
static_assert(sizeof(AkSplineEmitter_C_ReceiveTick) == 0x000004, "Wrong size on AkSplineEmitter_C_ReceiveTick");
static_assert(offsetof(AkSplineEmitter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AkSplineEmitter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.UserConstructionScript
// 0x0080 (0x0080 - 0x0000)
struct AkSplineEmitter_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AkSplineEmitter_C_UserConstructionScript) == 0x000010, "Wrong alignment on AkSplineEmitter_C_UserConstructionScript");
static_assert(sizeof(AkSplineEmitter_C_UserConstructionScript) == 0x000080, "Wrong size on AkSplineEmitter_C_UserConstructionScript");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'AkSplineEmitter_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, Temp_int_Variable) == 0x000030, "Member 'AkSplineEmitter_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000044, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000050, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00005C, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000060, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x00006C, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'AkSplineEmitter_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.GetControlledPawnLocation
// 0x0038 (0x0038 - 0x0000)
struct AkSplineEmitter_C_GetControlledPawnLocation final
{
public:
	class APawn*                                  ControlledPawnReference;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ControlledPawnLocation;                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AkSplineEmitter_C_GetControlledPawnLocation) == 0x000008, "Wrong alignment on AkSplineEmitter_C_GetControlledPawnLocation");
static_assert(sizeof(AkSplineEmitter_C_GetControlledPawnLocation) == 0x000038, "Wrong size on AkSplineEmitter_C_GetControlledPawnLocation");
static_assert(offsetof(AkSplineEmitter_C_GetControlledPawnLocation, ControlledPawnReference) == 0x000000, "Member 'AkSplineEmitter_C_GetControlledPawnLocation::ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetControlledPawnLocation, ControlledPawnLocation) == 0x000008, "Member 'AkSplineEmitter_C_GetControlledPawnLocation::ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetControlledPawnLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'AkSplineEmitter_C_GetControlledPawnLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetControlledPawnLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AkSplineEmitter_C_GetControlledPawnLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetControlledPawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AkSplineEmitter_C_GetControlledPawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.GetPlayerControllerCameraRotation
// 0x0028 (0x0028 - 0x0000)
struct AkSplineEmitter_C_GetPlayerControllerCameraRotation final
{
public:
	struct FRotator                               PlayerControllerCameraRotation;                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AkSplineEmitter_C_GetPlayerControllerCameraRotation) == 0x000008, "Wrong alignment on AkSplineEmitter_C_GetPlayerControllerCameraRotation");
static_assert(sizeof(AkSplineEmitter_C_GetPlayerControllerCameraRotation) == 0x000028, "Wrong size on AkSplineEmitter_C_GetPlayerControllerCameraRotation");
static_assert(offsetof(AkSplineEmitter_C_GetPlayerControllerCameraRotation, PlayerControllerCameraRotation) == 0x000000, "Member 'AkSplineEmitter_C_GetPlayerControllerCameraRotation::PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetPlayerControllerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'AkSplineEmitter_C_GetPlayerControllerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetPlayerControllerCameraRotation, CallFunc_GetCameraRotation_ReturnValue) == 0x000018, "Member 'AkSplineEmitter_C_GetPlayerControllerCameraRotation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.GetIsInsideSpline
// 0x0058 (0x0058 - 0x0000)
struct AkSplineEmitter_C_GetIsInsideSpline final
{
public:
	bool                                          IsInsideSpline_;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInsideSplineChanged_;                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AkSplineEmitter_C_GetIsInsideSpline) == 0x000008, "Wrong alignment on AkSplineEmitter_C_GetIsInsideSpline");
static_assert(sizeof(AkSplineEmitter_C_GetIsInsideSpline) == 0x000058, "Wrong size on AkSplineEmitter_C_GetIsInsideSpline");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, IsInsideSpline_) == 0x000000, "Member 'AkSplineEmitter_C_GetIsInsideSpline::IsInsideSpline_' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, IsInsideSplineChanged_) == 0x000001, "Member 'AkSplineEmitter_C_GetIsInsideSpline::IsInsideSplineChanged_' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x000008, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000010, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference_1) == 0x000020, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000028, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000040, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_Dot_VectorVector_ReturnValue) == 0x00004C, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetIsInsideSpline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000051, "Member 'AkSplineEmitter_C_GetIsInsideSpline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AkSplineEmitter.AkSplineEmitter_C.GetDistanceToPlayerFromClosestSplinePoint
// 0x0038 (0x0038 - 0x0000)
struct AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint final
{
public:
	float                                         DistanceToPlayerFromClosestSplinePoint;            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint) == 0x000008, "Wrong alignment on AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint");
static_assert(sizeof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint) == 0x000038, "Wrong size on AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, DistanceToPlayerFromClosestSplinePoint) == 0x000000, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::DistanceToPlayerFromClosestSplinePoint' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'AkSplineEmitter_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_VSize_ReturnValue' has a wrong offset!");

}

