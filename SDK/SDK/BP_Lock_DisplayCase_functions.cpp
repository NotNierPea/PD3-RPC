#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lock_DisplayCase

#include "Basic.hpp"

#include "BP_Lock_DisplayCase_classes.hpp"
#include "BP_Lock_DisplayCase_parameters.hpp"


namespace SDK
{

// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.ExecuteUbergraph_BP_Lock_DisplayCase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_DisplayCase_C::ExecuteUbergraph_BP_Lock_DisplayCase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_DisplayCase_C", "ExecuteUbergraph_BP_Lock_DisplayCase");

	Params::BP_Lock_DisplayCase_C_ExecuteUbergraph_BP_Lock_DisplayCase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.BP_OnMiniGameSuccess
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDoCosmetics                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Lock_DisplayCase_C::BP_OnMiniGameSuccess(bool bDoCosmetics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_DisplayCase_C", "BP_OnMiniGameSuccess");

	Params::BP_Lock_DisplayCase_C_BP_OnMiniGameSuccess Parms{};

	Parms.bDoCosmetics = bDoCosmetics;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_DisplayCase.BP_Lock_DisplayCase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lock_DisplayCase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_DisplayCase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

