#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_ArmorSlotButton

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsActiveArmorSlot;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton) == 0x000018, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, K2Node_Event_bIsActiveArmorSlot) == 0x000004, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::K2Node_Event_bIsActiveArmorSlot' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, Temp_bool_Variable) == 0x000005, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, Temp_byte_Variable) == 0x000006, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, K2Node_Select_Default) == 0x000009, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, K2Node_Event_bInIsHovered) == 0x00000A, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, K2Node_Event_bInHasFocus) == 0x00000B, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_ArmorSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.SetActiveArmorSlot
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot final
{
public:
	bool                                          bIsActiveArmorSlot;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot) == 0x000001, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot, bIsActiveArmorSlot) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_SetActiveArmorSlot::bIsActiveArmorSlot' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_OnFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_OnFocused");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused) == 0x000028, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_OnFocused");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_OnFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_OnFocused::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_OnFocused::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_OnFocused, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_OnFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.Set Armor Name Colour
// 0x0088 (0x0088 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour final
{
public:
	struct FLinearColor                           DesiredColour;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZArmorData*                    CallFunc_GetArmorInSlot_ReturnValue;               // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0030(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour) == 0x000088, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, DesiredColour) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::DesiredColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, Temp_struct_Variable) == 0x000010, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, CallFunc_GetArmorInSlot_ReturnValue) == 0x000020, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::CallFunc_GetArmorInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, CallFunc_GetDisplayName_OutDisplayName) == 0x000030, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, CallFunc_GetDisplayName_OutHasText) == 0x000048, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, Temp_bool_Variable) == 0x000049, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, K2Node_Select_Default) == 0x00004C, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_Set_Armor_Name_Colour::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.InitializeArmorVisuals
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals final
{
public:
	bool                                          ArmorValid;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZArmorData*                    CallFunc_GetArmorInSlot_ReturnValue;               // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZArmorData*                    CallFunc_GetArmorInSlot_ReturnValue_1;             // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0020(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZArmorData*                    CallFunc_GetArmorInSlot_ReturnValue_2;             // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZArmorInventorySlot                 CallFunc_GetArmorSlot_ReturnValue;                 // 0x0048(0x0068)()
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals) == 0x0000B0, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, ArmorValid) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::ArmorValid' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetArmorInSlot_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetArmorInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetArmorInSlot_ReturnValue_1) == 0x000010, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetArmorInSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetDisplayName_OutDisplayName) == 0x000020, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetDisplayName_OutHasText) == 0x000038, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetArmorInSlot_ReturnValue_2) == 0x000040, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetArmorInSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals, CallFunc_GetArmorSlot_ReturnValue) == 0x000048, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_InitializeArmorVisuals::CallFunc_GetArmorSlot_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_ArmorSlotButton.WBP_UI_Inventory_ArmorSlotButton_C.CanCustomize
// 0x0003 (0x0003 - 0x0000)
struct WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize final
{
public:
	bool                                          CanCustomize_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize) == 0x000001, "Wrong alignment on WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize");
static_assert(sizeof(WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize) == 0x000003, "Wrong size on WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize, CanCustomize_0) == 0x000000, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize::CanCustomize_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize, CallFunc_IsEmpty_ReturnValue) == 0x000001, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_UI_Inventory_ArmorSlotButton_C_CanCustomize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

