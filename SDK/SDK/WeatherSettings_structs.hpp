#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeatherSettings

#include "Basic.hpp"

#include "WeatherType_structs.hpp"
#include "SkyMaterials_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct WeatherSettings.WeatherSettings
// 0x0058 (0x0058 - 0x0000)
struct FWeatherSettings final
{
public:
	EWeatherType                                  WeatherType_22_FB6DF599435EDEB3D9CF9E9085BEFB3E;   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeleteDirectionalLight_1_A9EC8494465BD18CDA5BE2873D06B3A1; // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideFog_4_E298DF244277B3402C845EA39CC90822;    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FogZLocation_7_26E6587F4DC2FA489A3B64BA81C764B9;   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogDensity_9_3C2E8ADE4E74A671D2CF259950FEDF29;     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 FogColor_63_B9870FA843A273A4CF1CD29E69C09F18;      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogFalloff_11_1D0B47A14F9104A6FF68D18C806C63B4;    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideSky_25_B386A7684BCD5E2076C138A9BDFCBE2F;   // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkylightIntensity_28_AF0D91AD42BCB4CCE8F4B6A7ADB21D72; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkyMaterials                                 SkyboxType_31_B86CE8BD4134BFEFF9EE49AC1FD41A03;    // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeleteSunMoon_34_0D4421E7445D2AB3A2ECEDAB5BE5F214; // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableRain_14_ED898AAC4BE2A1FD74B76699FFB788E5;    // 0x001E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinRainIntensity_35_92EBAB944AF7E497CDC4818FC4F407EB; // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRainIntensity_36_8B2D570D4A82E03CD049D482DE3C13F1; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RainZOffset_39_09DDCA91444404BB839C93AC350BE379;   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideRainColor_53_81AEF30F4D78606197351F9E2FF6E44D; // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 RainColor_47_6E0D0A6D429A28A610B9E88003061B83;     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 SplashColor_49_E66640B2437FE3E100D717AF5D59619F;   // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         HideRainRoomNames_59_7C1FA057422A8287F51332B1C580CB27; // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          AddVolumetricClouds_65_9D9FC19144F11ABA32E3449E62BD3094; // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Altitude_68_7F8F19D542E1EA791F87D1B8D93DE66E;      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxSize_71_42F9A3334DB6C099200045A1AE17879F;    // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FWeatherSettings) == 0x000008, "Wrong alignment on FWeatherSettings");
static_assert(sizeof(FWeatherSettings) == 0x000058, "Wrong size on FWeatherSettings");
static_assert(offsetof(FWeatherSettings, WeatherType_22_FB6DF599435EDEB3D9CF9E9085BEFB3E) == 0x000000, "Member 'FWeatherSettings::WeatherType_22_FB6DF599435EDEB3D9CF9E9085BEFB3E' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, DeleteDirectionalLight_1_A9EC8494465BD18CDA5BE2873D06B3A1) == 0x000001, "Member 'FWeatherSettings::DeleteDirectionalLight_1_A9EC8494465BD18CDA5BE2873D06B3A1' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, OverrideFog_4_E298DF244277B3402C845EA39CC90822) == 0x000002, "Member 'FWeatherSettings::OverrideFog_4_E298DF244277B3402C845EA39CC90822' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, FogZLocation_7_26E6587F4DC2FA489A3B64BA81C764B9) == 0x000004, "Member 'FWeatherSettings::FogZLocation_7_26E6587F4DC2FA489A3B64BA81C764B9' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, FogDensity_9_3C2E8ADE4E74A671D2CF259950FEDF29) == 0x000008, "Member 'FWeatherSettings::FogDensity_9_3C2E8ADE4E74A671D2CF259950FEDF29' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, FogColor_63_B9870FA843A273A4CF1CD29E69C09F18) == 0x00000C, "Member 'FWeatherSettings::FogColor_63_B9870FA843A273A4CF1CD29E69C09F18' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, FogFalloff_11_1D0B47A14F9104A6FF68D18C806C63B4) == 0x000010, "Member 'FWeatherSettings::FogFalloff_11_1D0B47A14F9104A6FF68D18C806C63B4' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, OverrideSky_25_B386A7684BCD5E2076C138A9BDFCBE2F) == 0x000014, "Member 'FWeatherSettings::OverrideSky_25_B386A7684BCD5E2076C138A9BDFCBE2F' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, SkylightIntensity_28_AF0D91AD42BCB4CCE8F4B6A7ADB21D72) == 0x000018, "Member 'FWeatherSettings::SkylightIntensity_28_AF0D91AD42BCB4CCE8F4B6A7ADB21D72' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, SkyboxType_31_B86CE8BD4134BFEFF9EE49AC1FD41A03) == 0x00001C, "Member 'FWeatherSettings::SkyboxType_31_B86CE8BD4134BFEFF9EE49AC1FD41A03' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, DeleteSunMoon_34_0D4421E7445D2AB3A2ECEDAB5BE5F214) == 0x00001D, "Member 'FWeatherSettings::DeleteSunMoon_34_0D4421E7445D2AB3A2ECEDAB5BE5F214' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, EnableRain_14_ED898AAC4BE2A1FD74B76699FFB788E5) == 0x00001E, "Member 'FWeatherSettings::EnableRain_14_ED898AAC4BE2A1FD74B76699FFB788E5' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, MinRainIntensity_35_92EBAB944AF7E497CDC4818FC4F407EB) == 0x000020, "Member 'FWeatherSettings::MinRainIntensity_35_92EBAB944AF7E497CDC4818FC4F407EB' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, MaxRainIntensity_36_8B2D570D4A82E03CD049D482DE3C13F1) == 0x000024, "Member 'FWeatherSettings::MaxRainIntensity_36_8B2D570D4A82E03CD049D482DE3C13F1' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, RainZOffset_39_09DDCA91444404BB839C93AC350BE379) == 0x000028, "Member 'FWeatherSettings::RainZOffset_39_09DDCA91444404BB839C93AC350BE379' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, OverrideRainColor_53_81AEF30F4D78606197351F9E2FF6E44D) == 0x00002C, "Member 'FWeatherSettings::OverrideRainColor_53_81AEF30F4D78606197351F9E2FF6E44D' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, RainColor_47_6E0D0A6D429A28A610B9E88003061B83) == 0x000030, "Member 'FWeatherSettings::RainColor_47_6E0D0A6D429A28A610B9E88003061B83' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, SplashColor_49_E66640B2437FE3E100D717AF5D59619F) == 0x000034, "Member 'FWeatherSettings::SplashColor_49_E66640B2437FE3E100D717AF5D59619F' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, HideRainRoomNames_59_7C1FA057422A8287F51332B1C580CB27) == 0x000038, "Member 'FWeatherSettings::HideRainRoomNames_59_7C1FA057422A8287F51332B1C580CB27' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, AddVolumetricClouds_65_9D9FC19144F11ABA32E3449E62BD3094) == 0x000048, "Member 'FWeatherSettings::AddVolumetricClouds_65_9D9FC19144F11ABA32E3449E62BD3094' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, Altitude_68_7F8F19D542E1EA791F87D1B8D93DE66E) == 0x00004C, "Member 'FWeatherSettings::Altitude_68_7F8F19D542E1EA791F87D1B8D93DE66E' has a wrong offset!");
static_assert(offsetof(FWeatherSettings, SkyboxSize_71_42F9A3334DB6C099200045A1AE17879F) == 0x000050, "Member 'FWeatherSettings::SkyboxSize_71_42F9A3334DB6C099200045A1AE17879F' has a wrong offset!");

}

