#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AICivilianLinkedAnimation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AICivilianLinkedAnimation.ABP_AICivilianLinkedAnimation_C
// 0x0A90 (0x0E20 - 0x0390)
class UABP_AICivilianLinkedAnimation_C final : public USBZAICharacterLinkedAnimation
{
public:
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0398(0x0048)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03E0(0x0130)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0510(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0548(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0580(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05B8(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x05F0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0628(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x0660(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x06C8(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0798(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x07E0(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x08B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08F8(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x09C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0A10(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0AE0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B28(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0B68(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0BB0(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0C70(0x0168)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0DD8(0x0048)()

public:
	void ExecuteUbergraph_ABP_AICivilianLinkedAnimation(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void FullBodyAction(const struct FPoseLink& InPose, struct FPoseLink* FullBodyAction_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AICivilianLinkedAnimation_C">();
	}
	static class UABP_AICivilianLinkedAnimation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AICivilianLinkedAnimation_C>();
	}
};
static_assert(alignof(UABP_AICivilianLinkedAnimation_C) == 0x000010, "Wrong alignment on UABP_AICivilianLinkedAnimation_C");
static_assert(sizeof(UABP_AICivilianLinkedAnimation_C) == 0x000E20, "Wrong size on UABP_AICivilianLinkedAnimation_C");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, UberGraphFrame) == 0x000390, "Member 'UABP_AICivilianLinkedAnimation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_Root_1) == 0x000398, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_LinkedInputPose) == 0x0003E0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult_5) == 0x000510, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult_4) == 0x000548, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult_3) == 0x000580, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult_2) == 0x0005B8, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult_1) == 0x0005F0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_TransitionResult) == 0x000628, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_ModifyCurve) == 0x000660, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_SequencePlayer_3) == 0x0006C8, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateResult_4) == 0x000798, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_SequencePlayer_2) == 0x0007E0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateResult_3) == 0x0008B0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_SequencePlayer_1) == 0x0008F8, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateResult_2) == 0x0009C8, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_SequencePlayer) == 0x000A10, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateResult_1) == 0x000AE0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_UseCachedPose) == 0x000B28, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateResult) == 0x000B68, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_StateMachine) == 0x000BB0, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_SaveCachedPose) == 0x000C70, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_AICivilianLinkedAnimation_C, AnimGraphNode_Root) == 0x000DD8, "Member 'UABP_AICivilianLinkedAnimation_C::AnimGraphNode_Root' has a wrong offset!");

}

