#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SBZAnalyticsLegacy

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SBZAnalyticsLegacy.SBZAnalyticsProvider
// 0x0008 (0x0038 - 0x0030)
class USBZAnalyticsProvider : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SBZAnalyticsProvider">();
	}
	static class USBZAnalyticsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USBZAnalyticsProvider>();
	}
};
static_assert(alignof(USBZAnalyticsProvider) == 0x000008, "Wrong alignment on USBZAnalyticsProvider");
static_assert(sizeof(USBZAnalyticsProvider) == 0x000038, "Wrong size on USBZAnalyticsProvider");

// Class SBZAnalyticsLegacy.SBZAccelByteAnalyticsProvider
// 0x0020 (0x0058 - 0x0038)
class USBZAccelByteAnalyticsProvider final : public USBZAnalyticsProvider
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SBZAccelByteAnalyticsProvider">();
	}
	static class USBZAccelByteAnalyticsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USBZAccelByteAnalyticsProvider>();
	}
};
static_assert(alignof(USBZAccelByteAnalyticsProvider) == 0x000008, "Wrong alignment on USBZAccelByteAnalyticsProvider");
static_assert(sizeof(USBZAccelByteAnalyticsProvider) == 0x000058, "Wrong size on USBZAccelByteAnalyticsProvider");

// Class SBZAnalyticsLegacy.SBZFileAnalyticsProvider
// 0x0050 (0x0088 - 0x0038)
class USBZFileAnalyticsProvider final : public USBZAnalyticsProvider
{
public:
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SBZFileAnalyticsProvider">();
	}
	static class USBZFileAnalyticsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USBZFileAnalyticsProvider>();
	}
};
static_assert(alignof(USBZFileAnalyticsProvider) == 0x000008, "Wrong alignment on USBZFileAnalyticsProvider");
static_assert(sizeof(USBZFileAnalyticsProvider) == 0x000088, "Wrong size on USBZFileAnalyticsProvider");

// Class SBZAnalyticsLegacy.SBZMockAnalyticsProvider
// 0x0020 (0x0058 - 0x0038)
class USBZMockAnalyticsProvider final : public USBZAnalyticsProvider
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SBZMockAnalyticsProvider">();
	}
	static class USBZMockAnalyticsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USBZMockAnalyticsProvider>();
	}
};
static_assert(alignof(USBZMockAnalyticsProvider) == 0x000008, "Wrong alignment on USBZMockAnalyticsProvider");
static_assert(sizeof(USBZMockAnalyticsProvider) == 0x000058, "Wrong size on USBZMockAnalyticsProvider");

}

