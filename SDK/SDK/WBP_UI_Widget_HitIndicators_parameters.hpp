#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_HitIndicators

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_HitIndicators.WBP_UI_Widget_HitIndicators_C.UpdateVisibility
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Widget_HitIndicators_C_UpdateVisibility final
{
public:
	class UImage*                                 ImageWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         deltatime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewOpacity;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility) == 0x000008, "Wrong alignment on WBP_UI_Widget_HitIndicators_C_UpdateVisibility");
static_assert(sizeof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility) == 0x000028, "Wrong size on WBP_UI_Widget_HitIndicators_C_UpdateVisibility");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, ImageWidget) == 0x000000, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::ImageWidget' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, deltatime) == 0x000008, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::deltatime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, NewOpacity) == 0x00000C, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::NewOpacity' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, CallFunc_BreakColor_R) == 0x000010, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, CallFunc_BreakColor_G) == 0x000014, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, CallFunc_BreakColor_B) == 0x000018, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, CallFunc_BreakColor_A) == 0x00001C, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_UpdateVisibility, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HitIndicators_C_UpdateVisibility::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HitIndicators.WBP_UI_Widget_HitIndicators_C.RotateToActor
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_HitIndicators_C_RotateToActor final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HitIndicators_C_RotateToActor) == 0x000008, "Wrong alignment on WBP_UI_Widget_HitIndicators_C_RotateToActor");
static_assert(sizeof(WBP_UI_Widget_HitIndicators_C_RotateToActor) == 0x000008, "Wrong size on WBP_UI_Widget_HitIndicators_C_RotateToActor");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_RotateToActor, InActor) == 0x000000, "Member 'WBP_UI_Widget_HitIndicators_C_RotateToActor::InActor' has a wrong offset!");

// Function WBP_UI_Widget_HitIndicators.WBP_UI_Widget_HitIndicators_C.SetIndicatorScale
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Widget_HitIndicators_C_SetIndicatorScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale) == 0x000008, "Wrong alignment on WBP_UI_Widget_HitIndicators_C_SetIndicatorScale");
static_assert(sizeof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale) == 0x000018, "Wrong size on WBP_UI_Widget_HitIndicators_C_SetIndicatorScale");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale, Scale) == 0x000000, "Member 'WBP_UI_Widget_HitIndicators_C_SetIndicatorScale::Scale' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_HitIndicators_C_SetIndicatorScale::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_HitIndicators_C_SetIndicatorScale::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HitIndicators_C_SetIndicatorScale, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WBP_UI_Widget_HitIndicators_C_SetIndicatorScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

