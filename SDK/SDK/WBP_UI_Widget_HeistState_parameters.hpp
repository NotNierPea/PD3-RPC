#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_HeistState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.ExecuteUbergraph_WBP_UI_Widget_HeistState
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APD3HeistGameState*                     K2Node_DynamicCast_AsPD3Heist_Game_State;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNegotiationEndTime_ReturnValue;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetHostageDemand_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZNegotiationTradeType                      CallFunc_GetNegotiationTradeType_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_OldNrHostages;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_NewNrHostages;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(uint8 OldNrHostages, uint8 NewNrHostages)> K2Node_CreateDelegate_OutputDelegate;  // 0x0060(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(EPD3HeistState OldState, EPD3HeistState NewState)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0074(0x0014)(ZeroConstructor, NoDestructor)
	EPD3HeistState                                K2Node_CustomEvent_OldState;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_CustomEvent_NewState;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESBZNegotiationTradeType OldType, ESBZNegotiationTradeType NewType)> K2Node_CreateDelegate_OutputDelegate_2; // 0x008C(0x0014)(ZeroConstructor, NoDestructor)
	ESBZNegotiationTradeType                      K2Node_CustomEvent_OldType;                        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZNegotiationTradeType                      K2Node_CustomEvent_NewType;                        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float OldTime, float NewTime)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A4(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsActive;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsActive)>               K2Node_CreateDelegate_OutputDelegate_4;            // 0x00BC(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_OldTime;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewTime;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState) == 0x0000E8, "Wrong size on WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_DynamicCast_AsPD3Heist_Game_State) == 0x000048, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_DynamicCast_AsPD3Heist_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, CallFunc_GetNegotiationEndTime_ReturnValue) == 0x000054, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::CallFunc_GetNegotiationEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, CallFunc_GetHostageDemand_ReturnValue) == 0x000058, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::CallFunc_GetHostageDemand_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, CallFunc_GetNegotiationTradeType_ReturnValue) == 0x000059, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::CallFunc_GetNegotiationTradeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_OldNrHostages) == 0x00005A, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_OldNrHostages' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_NewNrHostages) == 0x00005B, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_NewNrHostages' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_SwitchEnum_CmpSuccess) == 0x00005C, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_OldState) == 0x000088, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_NewState) == 0x000089, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_OldType) == 0x0000A0, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_OldType' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_NewType) == 0x0000A1, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_NewType' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A4, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_bIsActive) == 0x0000B8, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_bIsActive' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000BC, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_OldTime) == 0x0000D4, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_OldTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, K2Node_CustomEvent_NewTime) == 0x0000D8, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::K2Node_CustomEvent_NewTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000E0, "Member 'WBP_UI_Widget_HeistState_C_ExecuteUbergraph_WBP_UI_Widget_HeistState::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_HeistState_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_PreConstruct");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Widget_HeistState_C_PreConstruct");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnFBIActivationChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0 final
{
public:
	bool                                          bIsActive;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0) == 0x000001, "Wrong size on WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0, bIsActive) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnFBIActivationChanged_Event_0::bIsActive' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnNegotiationTradeTypeChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged final
{
public:
	ESBZNegotiationTradeType                      OldType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZNegotiationTradeType                      NewType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged) == 0x000002, "Wrong size on WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged, OldType) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged::OldType' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged, NewType) == 0x000001, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationTradeTypeChanged::NewType' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnHostageDemandChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnHostageDemandChanged final
{
public:
	uint8                                         OldNrHostages;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewNrHostages;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnHostageDemandChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnHostageDemandChanged");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnHostageDemandChanged) == 0x000002, "Wrong size on WBP_UI_Widget_HeistState_C_OnHostageDemandChanged");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnHostageDemandChanged, OldNrHostages) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnHostageDemandChanged::OldNrHostages' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnHostageDemandChanged, NewNrHostages) == 0x000001, "Member 'WBP_UI_Widget_HeistState_C_OnHostageDemandChanged::NewNrHostages' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_UI_Widget_HeistState_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_Tick) == 0x000004, "Wrong alignment on WBP_UI_Widget_HeistState_C_Tick");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_Tick) == 0x00003C, "Wrong size on WBP_UI_Widget_HeistState_C_Tick");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnHeistStateChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnHeistStateChanged final
{
public:
	EPD3HeistState                                OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnHeistStateChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnHeistStateChanged");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnHeistStateChanged) == 0x000002, "Wrong size on WBP_UI_Widget_HeistState_C_OnHeistStateChanged");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnHeistStateChanged, OldState) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnHeistStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnHeistStateChanged, NewState) == 0x000001, "Member 'WBP_UI_Widget_HeistState_C_OnHeistStateChanged::NewState' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnNegotiationTimeChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged final
{
public:
	float                                         OldTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewTime;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged) == 0x000008, "Wrong size on WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged, OldTime) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged::OldTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged, NewTime) == 0x000004, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationTimeChanged::NewTime' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnAssaultState
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnAssaultState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnAssaultState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnAssaultState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnAssaultState) == 0x000068, "Wrong size on WBP_UI_Widget_HeistState_C_OnAssaultState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAssaultState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnAssaultState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAssaultState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnAssaultState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAssaultState, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HeistState_C_OnAssaultState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAssaultState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_OnAssaultState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAssaultState, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WBP_UI_Widget_HeistState_C_OnAssaultState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnCasingState
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnCasingState final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnCasingState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnCasingState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnCasingState) == 0x000028, "Wrong size on WBP_UI_Widget_HeistState_C_OnCasingState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnCasingState, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnCasingState::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnNegotiationState
// 0x0038 (0x0038 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnNegotiationState final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnNegotiationState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnNegotiationState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnNegotiationState) == 0x000038, "Wrong size on WBP_UI_Widget_HeistState_C_OnNegotiationState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationState, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationState, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnNegotiationState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'WBP_UI_Widget_HeistState_C_OnNegotiationState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.UpdateNegotiation
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_UI_Widget_HeistState_C_UpdateNegotiation final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatIntToTimerText_ReturnValue;         // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00D0(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_UpdateNegotiation) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_UpdateNegotiation");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_UpdateNegotiation) == 0x0000E8, "Wrong size on WBP_UI_Widget_HeistState_C_UpdateNegotiation");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, Temp_text_Variable) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, Temp_bool_Variable) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000028, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_FormatIntToTimerText_ReturnValue) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_FormatIntToTimerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, K2Node_Select_Default) == 0x000050, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateNegotiation, CallFunc_TextToUpper_ReturnValue) == 0x0000D0, "Member 'WBP_UI_Widget_HeistState_C_UpdateNegotiation::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnSearchState
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnSearchState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnSearchState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnSearchState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnSearchState) == 0x000068, "Wrong size on WBP_UI_Widget_HeistState_C_OnSearchState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnSearchState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnSearchState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnSearchState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnSearchState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnSearchState, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HeistState_C_OnSearchState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnSearchState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_OnSearchState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnSearchState, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WBP_UI_Widget_HeistState_C_OnSearchState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnAnticipationState
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnAnticipationState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnAnticipationState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnAnticipationState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnAnticipationState) == 0x000068, "Wrong size on WBP_UI_Widget_HeistState_C_OnAnticipationState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAnticipationState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnAnticipationState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAnticipationState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnAnticipationState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAnticipationState, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HeistState_C_OnAnticipationState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAnticipationState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_OnAnticipationState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAnticipationState, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WBP_UI_Widget_HeistState_C_OnAnticipationState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnControlState
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnControlState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnControlState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnControlState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnControlState) == 0x000058, "Wrong size on WBP_UI_Widget_HeistState_C_OnControlState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnControlState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnControlState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnControlState, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnControlState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnControlState, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'WBP_UI_Widget_HeistState_C_OnControlState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnPointOfNoReturn
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnPointOfNoReturn final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnPointOfNoReturn) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnPointOfNoReturn");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnPointOfNoReturn) == 0x000058, "Wrong size on WBP_UI_Widget_HeistState_C_OnPointOfNoReturn");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnPointOfNoReturn, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnPointOfNoReturn::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnPointOfNoReturn, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnPointOfNoReturn::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnPointOfNoReturn, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'WBP_UI_Widget_HeistState_C_OnPointOfNoReturn::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnFirstRespondersState
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnFirstRespondersState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnFirstRespondersState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnFirstRespondersState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnFirstRespondersState) == 0x000058, "Wrong size on WBP_UI_Widget_HeistState_C_OnFirstRespondersState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFirstRespondersState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnFirstRespondersState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFirstRespondersState, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnFirstRespondersState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFirstRespondersState, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'WBP_UI_Widget_HeistState_C_OnFirstRespondersState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnAlarmState
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnAlarmState final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnAlarmState) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnAlarmState");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnAlarmState) == 0x000068, "Wrong size on WBP_UI_Widget_HeistState_C_OnAlarmState");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAlarmState, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnAlarmState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAlarmState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnAlarmState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAlarmState, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_HeistState_C_OnAlarmState::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAlarmState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_OnAlarmState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnAlarmState, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WBP_UI_Widget_HeistState_C_OnAlarmState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.UpdateTradeCount
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_UI_Widget_HeistState_C_UpdateTradeCount final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0018)()
	ESBZNegotiationTradeType                      Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00D0(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_UpdateTradeCount) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_UpdateTradeCount");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_UpdateTradeCount) == 0x0000E8, "Wrong size on WBP_UI_Widget_HeistState_C_UpdateTradeCount");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, Temp_text_Variable) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, Temp_text_Variable_1) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, Temp_text_Variable_2) == 0x000030, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, Temp_byte_Variable) == 0x000048, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000049, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, K2Node_Select_Default) == 0x0000B8, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateTradeCount, CallFunc_TextToUpper_ReturnValue) == 0x0000D0, "Member 'WBP_UI_Widget_HeistState_C_UpdateTradeCount::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.UpdateHeistStateText
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_HeistState_C_UpdateHeistStateText final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_UpdateHeistStateText) == 0x000001, "Wrong alignment on WBP_UI_Widget_HeistState_C_UpdateHeistStateText");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_UpdateHeistStateText) == 0x000001, "Wrong size on WBP_UI_Widget_HeistState_C_UpdateHeistStateText");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_UpdateHeistStateText, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_UpdateHeistStateText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_UI_Widget_HeistState.WBP_UI_Widget_HeistState_C.OnFBIActive
// 0x0040 (0x0040 - 0x0000)
struct WBP_UI_Widget_HeistState_C_OnFBIActive final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_HeistState_C_OnFBIActive) == 0x000008, "Wrong alignment on WBP_UI_Widget_HeistState_C_OnFBIActive");
static_assert(sizeof(WBP_UI_Widget_HeistState_C_OnFBIActive) == 0x000040, "Wrong size on WBP_UI_Widget_HeistState_C_OnFBIActive");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFBIActive, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_HeistState_C_OnFBIActive::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFBIActive, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'WBP_UI_Widget_HeistState_C_OnFBIActive::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFBIActive, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'WBP_UI_Widget_HeistState_C_OnFBIActive::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_HeistState_C_OnFBIActive, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_UI_Widget_HeistState_C_OnFBIActive::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

