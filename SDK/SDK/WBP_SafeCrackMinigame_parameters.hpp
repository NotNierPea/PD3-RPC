#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SafeCrackMinigame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.ExecuteUbergraph_WBP_SafeCrackMinigame
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00F4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0140(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMiniGameComponent*                  K2Node_Event_MiniGameComponet;                     // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3MiniGameState                             K2Node_Event_NewState;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_12;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame) == 0x000008, "Wrong alignment on WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame");
static_assert(sizeof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame) == 0x0001C8, "Wrong size on WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, EntryPoint) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_1) == 0x000006, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000010, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_1) == 0x000020, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000028, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_2) == 0x000030, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Not_PreBool_ReturnValue_1) == 0x000032, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue) == 0x000033, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanAND_ReturnValue_1) == 0x000036, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000048, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Abs_ReturnValue) == 0x00004C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000050, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimation_ReturnValue_1) == 0x000058, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_PlayAnimation_ReturnValue_2) == 0x000060, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_3) == 0x000068, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000074, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000078, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_2) == 0x000079, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_4) == 0x00007A, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_3) == 0x00007B, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_4) == 0x00007C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000080, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000084, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_5) == 0x000088, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Abs_ReturnValue_1) == 0x00008C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000090, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_5) == 0x000091, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000A0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000A8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_3) == 0x0000B0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_4) == 0x0000B8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_5) == 0x0000C0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_6) == 0x0000C8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_7) == 0x0000D0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_8) == 0x0000D8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_6) == 0x0000E0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_6) == 0x0000E1, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_Event_Value) == 0x0000E4, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x0000EC, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F1, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0000F3, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_Event_MyGeometry) == 0x0000F4, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_Event_InDeltaTime) == 0x00012C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000130, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000131, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_7) == 0x000132, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x000134, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000138, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000139, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x00013A, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanAND_ReturnValue_2) == 0x00013B, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Not_PreBool_ReturnValue_2) == 0x00013C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanAND_ReturnValue_3) == 0x00013D, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_BooleanOR_ReturnValue_1) == 0x00013E, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_CreateDelegate_OutputDelegate) == 0x000140, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000158, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000160, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x00016C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x000170, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Abs_ReturnValue_2) == 0x000174, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_RandomBool_ReturnValue) == 0x000178, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x000179, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00017C, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000180, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_7) == 0x000181, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_Has_Been_Initd_Variable_8) == 0x000182, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_Event_MiniGameComponet) == 0x000188, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_Event_MiniGameComponet' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000190, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, Temp_bool_IsClosed_Variable_8) == 0x000191, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000192, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_9) == 0x000198, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_10) == 0x0001A0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_11) == 0x0001A8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, K2Node_Event_NewState) == 0x0001B0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_GetPlayerController_ReturnValue_12) == 0x0001B8, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_GetPlayerController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C0, "Member 'WBP_SafeCrackMinigame_C_ExecuteUbergraph_WBP_SafeCrackMinigame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.MiniGameStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_SafeCrackMinigame_C_MiniGameStateChanged final
{
public:
	EPD3MiniGameState                             NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_MiniGameStateChanged) == 0x000001, "Wrong alignment on WBP_SafeCrackMinigame_C_MiniGameStateChanged");
static_assert(sizeof(WBP_SafeCrackMinigame_C_MiniGameStateChanged) == 0x000001, "Wrong size on WBP_SafeCrackMinigame_C_MiniGameStateChanged");
static_assert(offsetof(WBP_SafeCrackMinigame_C_MiniGameStateChanged, NewState) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_MiniGameStateChanged::NewState' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.OnOwningMiniGameComponent
// 0x0008 (0x0008 - 0x0000)
struct WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent final
{
public:
	class USBZMiniGameComponent*                  MiniGameComponet;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent) == 0x000008, "Wrong alignment on WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent");
static_assert(sizeof(WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent) == 0x000008, "Wrong size on WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent");
static_assert(offsetof(WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent, MiniGameComponet) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_OnOwningMiniGameComponent::MiniGameComponet' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SafeCrackMinigame_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_Tick) == 0x000004, "Wrong alignment on WBP_SafeCrackMinigame_C_Tick");
static_assert(sizeof(WBP_SafeCrackMinigame_C_Tick) == 0x00003C, "Wrong size on WBP_SafeCrackMinigame_C_Tick");
static_assert(offsetof(WBP_SafeCrackMinigame_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SafeCrackMinigame_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.BP_OnXAxisChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_SafeCrackMinigame_C_BP_OnXAxisChanged final
{
public:
	float                                         Value_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_BP_OnXAxisChanged) == 0x000004, "Wrong alignment on WBP_SafeCrackMinigame_C_BP_OnXAxisChanged");
static_assert(sizeof(WBP_SafeCrackMinigame_C_BP_OnXAxisChanged) == 0x000004, "Wrong size on WBP_SafeCrackMinigame_C_BP_OnXAxisChanged");
static_assert(offsetof(WBP_SafeCrackMinigame_C_BP_OnXAxisChanged, Value_0) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_BP_OnXAxisChanged::Value_0' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.SetCorrectNumber
// 0x0064 (0x0064 - 0x0000)
struct WBP_SafeCrackMinigame_C_SetCorrectNumber final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_4;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_SetCorrectNumber) == 0x000004, "Wrong alignment on WBP_SafeCrackMinigame_C_SetCorrectNumber");
static_assert(sizeof(WBP_SafeCrackMinigame_C_SetCorrectNumber) == 0x000064, "Wrong size on WBP_SafeCrackMinigame_C_SetCorrectNumber");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000010, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000014, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000018, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00001C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x000028, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00002C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_RandomIntegerInRange_ReturnValue_4) == 0x000030, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_RandomIntegerInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000034, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000038, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00003C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000050, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetCorrectNumber, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000060, "Member 'WBP_SafeCrackMinigame_C_SetCorrectNumber::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.IncreasingRounds
// 0x0014 (0x0014 - 0x0000)
struct WBP_SafeCrackMinigame_C_IncreasingRounds final
{
public:
	bool                                          decrease;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_IncreasingRounds) == 0x000004, "Wrong alignment on WBP_SafeCrackMinigame_C_IncreasingRounds");
static_assert(sizeof(WBP_SafeCrackMinigame_C_IncreasingRounds) == 0x000014, "Wrong size on WBP_SafeCrackMinigame_C_IncreasingRounds");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, decrease) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::decrease' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000003, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_IncreasingRounds, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WBP_SafeCrackMinigame_C_IncreasingRounds::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_SafeCrackMinigame.WBP_SafeCrackMinigame_C.SetNewTimerSpeed
// 0x0010 (0x0010 - 0x0000)
struct WBP_SafeCrackMinigame_C_SetNewTimerSpeed final
{
public:
	float                                         LoopTime_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SafeCrackMinigame_C_SetNewTimerSpeed) == 0x000008, "Wrong alignment on WBP_SafeCrackMinigame_C_SetNewTimerSpeed");
static_assert(sizeof(WBP_SafeCrackMinigame_C_SetNewTimerSpeed) == 0x000010, "Wrong size on WBP_SafeCrackMinigame_C_SetNewTimerSpeed");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetNewTimerSpeed, LoopTime_0) == 0x000000, "Member 'WBP_SafeCrackMinigame_C_SetNewTimerSpeed::LoopTime_0' has a wrong offset!");
static_assert(offsetof(WBP_SafeCrackMinigame_C_SetNewTimerSpeed, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'WBP_SafeCrackMinigame_C_SetNewTimerSpeed::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

