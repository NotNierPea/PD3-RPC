#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimeEnhancements

#include "Basic.hpp"

#include "TimeEnhancements_classes.hpp"
#include "TimeEnhancements_parameters.hpp"


namespace SDK
{

// Function TimeEnhancements.CurveFloatDelegateTimer.CreateCurveFloatDelegateTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Period                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToFirstExecution                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UCurveFloat*                Curve                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoops                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurveDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloatDelegateTimer*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveFloatDelegateTimer* UCurveFloatDelegateTimer::CreateCurveFloatDelegateTimer(class UObject* WorldContextObject, float Period, float DelayToFirstExecution, const class UCurveFloat* Curve, bool bLoops, float CurveDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CurveFloatDelegateTimer", "CreateCurveFloatDelegateTimer");

	Params::CurveFloatDelegateTimer_CreateCurveFloatDelegateTimer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Period = Period;
	Parms.DelayToFirstExecution = DelayToFirstExecution;
	Parms.Curve = Curve;
	Parms.bLoops = bLoops;
	Parms.CurveDuration = CurveDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TimeEnhancements.CurveFloatDelegateTimer.DestroyCurveFloatDelegateTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveFloatDelegateTimer*         Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCurveFloatDelegateTimer::DestroyCurveFloatDelegateTimer(class UCurveFloatDelegateTimer* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CurveFloatDelegateTimer", "DestroyCurveFloatDelegateTimer");

	Params::CurveFloatDelegateTimer_DestroyCurveFloatDelegateTimer Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.CurveFloatDelegateTimer.FireCurveEvalTick
// (Final, Native, Private)
// Parameters:
// const class UDelegateTimer*             Timer                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ElapsedTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeSinceLast                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCurveFloatDelegateTimer::FireCurveEvalTick(const class UDelegateTimer* Timer, float ElapsedTime, float TimeSinceLast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CurveFloatDelegateTimer", "FireCurveEvalTick");

	Params::CurveFloatDelegateTimer_FireCurveEvalTick Parms{};

	Parms.Timer = Timer;
	Parms.ElapsedTime = ElapsedTime;
	Parms.TimeSinceLast = TimeSinceLast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.DelegateTimer.CreateDelegateTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Period                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToFirstExecution                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDelegateTimer*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDelegateTimer* UDelegateTimer::CreateDelegateTimer(class UObject* WorldContextObject, float Period, float DelayToFirstExecution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DelegateTimer", "CreateDelegateTimer");

	Params::DelegateTimer_CreateDelegateTimer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Period = Period;
	Parms.DelayToFirstExecution = DelayToFirstExecution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TimeEnhancements.DelegateTimer.DestroyDelegateTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDelegateTimer*                   Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelegateTimer::DestroyDelegateTimer(class UDelegateTimer* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DelegateTimer", "DestroyDelegateTimer");

	Params::DelegateTimer_DestroyDelegateTimer Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.FiniteStateMachineComponent.OnRep_State
// (Native, Protected)

void UFiniteStateMachineComponent::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FiniteStateMachineComponent", "OnRep_State");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.FiniteStateMachineComponent.SetLocalState
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFiniteStateMachineComponent::SetLocalState(class FName NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FiniteStateMachineComponent", "SetLocalState");

	Params::FiniteStateMachineComponent_SetLocalState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.FiniteStateMachineComponent.SetState
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFiniteStateMachineComponent::SetState(class FName NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FiniteStateMachineComponent", "SetState");

	Params::FiniteStateMachineComponent_SetState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TimeEnhancements.TimeEnhancementsBPLibrary.SixtyFramesPerSecondFrameDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTimeEnhancementsBPLibrary::SixtyFramesPerSecondFrameDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeEnhancementsBPLibrary", "SixtyFramesPerSecondFrameDuration");

	Params::TimeEnhancementsBPLibrary_SixtyFramesPerSecondFrameDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

