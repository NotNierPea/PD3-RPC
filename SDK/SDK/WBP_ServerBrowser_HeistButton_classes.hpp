#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ServerBrowser_HeistButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ServerBrowser_HeistButton.WBP_ServerBrowser_HeistButton_C
// 0x00E0 (0x0530 - 0x0450)
class UWBP_ServerBrowser_HeistButton_C final : public USBZServerBrowserHeistButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Standard_Roll;                                     // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_Smash_Intro_Text;                           // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Special_Border_Motion;                             // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class URetainerBox*                           BWEffect_RB;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DLC_Overlay;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EdgeBar_I;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Host;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_HeistBackground;                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelNameSlashs_T;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Locked_Hb;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Special_Border_SB;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Special_Border_Selected;                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Special_Unselected_Border;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_Host;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_LevelName;                                    // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_PayoutMax;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_PayoutMin;                                    // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_PeopleNum;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Text_Playstyle;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterials;                                  // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultOutlineColor;                               // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedOutlineColor;                              // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsButtonHovered;                                   // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsIntroStoryButtonHovered;                         // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOutroStoryButtonHovered;                         // 0x051A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51B[0x5];                                      // 0x051B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          LockedClicked;                                     // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BorderHeistDynamicMat;                             // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ServerBrowser_HeistButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void DisabledButtonSelected();
	void ButtonSelected();
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_OutroStory_K2Node_ComponentBoundEvent_5_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility InVisibility);
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_IntroStory_K2Node_ComponentBoundEvent_4_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility InVisibility);
	void ButtonHoveredChanged(bool bInIsHovered);
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_IntroStory_K2Node_ComponentBoundEvent_3_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_OutroStory_K2Node_ComponentBoundEvent_2_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_OutroStory_K2Node_ComponentBoundEvent_1_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void BndEvt__WBP_ServerBrowser_HeistButton_Button_IntroStory_K2Node_ComponentBoundEvent_0_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button, bool bIsEnabled_0);
	void OnFocusChanged(bool bIsFocused);
	void Construct();
	void OnHeistDataInitialized();
	void ButtonFocusedChanged(bool bInHasFocus);
	void OnLoaded_4E9ABC0547D2DACA5AA49CA140722AA6(class UObject* Loaded);
	void OnFocusedChanged(bool bIsFocused);
	void OnStoryButtonFocusedChanged(bool bIsFocused);
	void InitializeButtonVisuals();
	void OnStoryButtonVisibilityChanged(ESlateVisibility InVisibility, class USBZServerBrowserStoryModeButton* StoryButton);
	bool IsStoryButtonsVisibleWithController();
	bool IsStoryButtonsVisibleWithMouseAndNotHovered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ServerBrowser_HeistButton_C">();
	}
	static class UWBP_ServerBrowser_HeistButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ServerBrowser_HeistButton_C>();
	}
};
static_assert(alignof(UWBP_ServerBrowser_HeistButton_C) == 0x000008, "Wrong alignment on UWBP_ServerBrowser_HeistButton_C");
static_assert(sizeof(UWBP_ServerBrowser_HeistButton_C) == 0x000530, "Wrong size on UWBP_ServerBrowser_HeistButton_C");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, UberGraphFrame) == 0x000450, "Member 'UWBP_ServerBrowser_HeistButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Standard_Roll) == 0x000458, "Member 'UWBP_ServerBrowser_HeistButton_C::Standard_Roll' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Select_Smash_Intro_Text) == 0x000460, "Member 'UWBP_ServerBrowser_HeistButton_C::Select_Smash_Intro_Text' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Special_Border_Motion) == 0x000468, "Member 'UWBP_ServerBrowser_HeistButton_C::Special_Border_Motion' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, BWEffect_RB) == 0x000470, "Member 'UWBP_ServerBrowser_HeistButton_C::BWEffect_RB' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, DLC_Overlay) == 0x000478, "Member 'UWBP_ServerBrowser_HeistButton_C::DLC_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, EdgeBar_I) == 0x000480, "Member 'UWBP_ServerBrowser_HeistButton_C::EdgeBar_I' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Icon_Host) == 0x000488, "Member 'UWBP_ServerBrowser_HeistButton_C::Icon_Host' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Image_HeistBackground) == 0x000490, "Member 'UWBP_ServerBrowser_HeistButton_C::Image_HeistBackground' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, LevelNameSlashs_T) == 0x000498, "Member 'UWBP_ServerBrowser_HeistButton_C::LevelNameSlashs_T' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Locked_Hb) == 0x0004A0, "Member 'UWBP_ServerBrowser_HeistButton_C::Locked_Hb' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Special_Border_SB) == 0x0004A8, "Member 'UWBP_ServerBrowser_HeistButton_C::Special_Border_SB' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Special_Border_Selected) == 0x0004B0, "Member 'UWBP_ServerBrowser_HeistButton_C::Special_Border_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Special_Unselected_Border) == 0x0004B8, "Member 'UWBP_ServerBrowser_HeistButton_C::Special_Unselected_Border' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_Host) == 0x0004C0, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_Host' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_LevelName) == 0x0004C8, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_LevelName' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_PayoutMax) == 0x0004D0, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_PayoutMax' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_PayoutMin) == 0x0004D8, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_PayoutMin' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_PeopleNum) == 0x0004E0, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_PeopleNum' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, Text_Playstyle) == 0x0004E8, "Member 'UWBP_ServerBrowser_HeistButton_C::Text_Playstyle' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, DynamicMaterials) == 0x0004F0, "Member 'UWBP_ServerBrowser_HeistButton_C::DynamicMaterials' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, DefaultOutlineColor) == 0x0004F8, "Member 'UWBP_ServerBrowser_HeistButton_C::DefaultOutlineColor' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, SelectedOutlineColor) == 0x000508, "Member 'UWBP_ServerBrowser_HeistButton_C::SelectedOutlineColor' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, IsButtonHovered) == 0x000518, "Member 'UWBP_ServerBrowser_HeistButton_C::IsButtonHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, IsIntroStoryButtonHovered) == 0x000519, "Member 'UWBP_ServerBrowser_HeistButton_C::IsIntroStoryButtonHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, IsOutroStoryButtonHovered) == 0x00051A, "Member 'UWBP_ServerBrowser_HeistButton_C::IsOutroStoryButtonHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, LockedClicked) == 0x000520, "Member 'UWBP_ServerBrowser_HeistButton_C::LockedClicked' has a wrong offset!");
static_assert(offsetof(UWBP_ServerBrowser_HeistButton_C, BorderHeistDynamicMat) == 0x000528, "Member 'UWBP_ServerBrowser_HeistButton_C::BorderHeistDynamicMat' has a wrong offset!");

}

