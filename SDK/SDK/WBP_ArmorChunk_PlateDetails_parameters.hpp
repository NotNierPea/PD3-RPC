#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArmorChunk_PlateDetails

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_ArmorChunk_PlateDetails.WBP_ArmorChunk_PlateDetails_C.SetPlateInfo
// 0x0218 (0x0218 - 0x0000)
struct WBP_ArmorChunk_PlateDetails_C_SetPlateInfo final
{
public:
	ESBZArmorChunkType                            PlateType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	ESBZArmorChunkType                            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	ESBZArmorChunkType                            Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0108(0x0018)()
	const class USBZArmorSettings*                CallFunc_Get_ReturnValue;                          // 0x0120(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZArmorChunkType                            Temp_byte_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZArmorChunkTypeData                 CallFunc_GetChunkData_ReturnValue;                 // 0x012C(0x0054)(ConstParm, NoDestructor)
	class FText                                   K2Node_Select_Default_2;                           // 0x0180(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0198(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0200(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo) == 0x000008, "Wrong alignment on WBP_ArmorChunk_PlateDetails_C_SetPlateInfo");
static_assert(sizeof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo) == 0x000218, "Wrong size on WBP_ArmorChunk_PlateDetails_C_SetPlateInfo");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, PlateType) == 0x000000, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::PlateType' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable) == 0x000008, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_byte_Variable) == 0x000020, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_1) == 0x000028, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_2) == 0x000040, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_3) == 0x000058, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_byte_Variable_1) == 0x000070, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, K2Node_Select_Default) == 0x000078, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_4) == 0x000090, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_5) == 0x0000A8, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_6) == 0x0000C0, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_7) == 0x0000D8, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, K2Node_Select_Default_1) == 0x0000F0, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_text_Variable_8) == 0x000108, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, CallFunc_Get_ReturnValue) == 0x000120, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, Temp_byte_Variable_2) == 0x000128, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, CallFunc_GetChunkData_ReturnValue) == 0x00012C, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::CallFunc_GetChunkData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, K2Node_Select_Default_2) == 0x000180, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, CallFunc_Conv_FloatToText_ReturnValue) == 0x000198, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0001B0, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, K2Node_MakeArray_Array) == 0x0001F0, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_PlateDetails_C_SetPlateInfo, CallFunc_Format_ReturnValue) == 0x000200, "Member 'WBP_ArmorChunk_PlateDetails_C_SetPlateInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

}

