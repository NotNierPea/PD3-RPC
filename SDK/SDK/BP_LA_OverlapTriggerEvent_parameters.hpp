#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LA_OverlapTriggerEvent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.ExecuteUbergraph_BP_LA_OverlapTriggerEvent
// 0x0148 (0x0148 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentSectionName_SectionName;        // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZCharacter*                          K2Node_ComponentBoundEvent_Character_1;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 K2Node_ComponentBoundEvent_ActionInstance_1;       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionSlot*                     K2Node_ComponentBoundEvent_ActionSlot_1;           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZLifeActionStopReason                      K2Node_ComponentBoundEvent_Result;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZCharacter*                          K2Node_ComponentBoundEvent_Character;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 K2Node_ComponentBoundEvent_ActionInstance;         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionSlot*                     K2Node_ComponentBoundEvent_ActionSlot;             // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent) == 0x000148, "Wrong size on BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, EntryPoint) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_HasAuthority_ReturnValue_1) == 0x0000B8, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C0, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C8, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D0, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D8, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_AddUnique_ReturnValue) == 0x0000DC, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000E5, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F1, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_Contains_ReturnValue) == 0x0000F2, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_Event_DeltaSeconds) == 0x0000F4, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000F8, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_GetCurrentSectionName_SectionName) == 0x0000FC, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_GetCurrentSectionName_SectionName' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_Character_1) == 0x000108, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_ActionInstance_1) == 0x000110, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_ActionInstance_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_ActionSlot_1) == 0x000118, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_ActionSlot_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_Result) == 0x000120, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_Character) == 0x000128, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_ActionInstance) == 0x000130, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_ActionInstance' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, K2Node_ComponentBoundEvent_ActionSlot) == 0x000138, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::K2Node_ComponentBoundEvent_ActionSlot' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent, CallFunc_Array_Contains_ReturnValue_1) == 0x000140, "Member 'BP_LA_OverlapTriggerEvent_C_ExecuteUbergraph_BP_LA_OverlapTriggerEvent::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature final
{
public:
	class ASBZCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 ActionInstance;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionSlot*                     ActionSlot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature) == 0x000018, "Wrong size on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature, Character) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature::Character' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature, ActionInstance) == 0x000008, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature::ActionInstance' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature, ActionSlot) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_4_SBZLifeActionEventDelegate__DelegateSignature::ActionSlot' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature final
{
public:
	class ASBZCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionInstance*                 ActionInstance;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZLifeActionSlot*                     ActionSlot;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZLifeActionStopReason                      Result;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature) == 0x000020, "Wrong size on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature, Character) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature::Character' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature, ActionInstance) == 0x000008, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature::ActionInstance' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature, ActionSlot) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature::ActionSlot' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature, Result) == 0x000018, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_OverlapTriggerEvent_SBZLifeAction_K2Node_ComponentBoundEvent_1_SBZLifeActionStopEventDelegate__DelegateSignature::Result' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_ReceiveTick");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_ReceiveTick) == 0x000004, "Wrong size on BP_LA_OverlapTriggerEvent_C_ReceiveTick");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_ExitTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_LA_OverlapTriggerEvent_C_BndEvt__BP_LA_Guard_Scripted_DoorGuard_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.SetTriggerEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_SetTriggerEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_SetTriggerEnable) == 0x000001, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_SetTriggerEnable");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_SetTriggerEnable) == 0x000001, "Wrong size on BP_LA_OverlapTriggerEvent_C_SetTriggerEnable");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_SetTriggerEnable, Enable) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_SetTriggerEnable::Enable' has a wrong offset!");

// Function BP_LA_OverlapTriggerEvent.BP_LA_OverlapTriggerEvent_C.GetCurrentSectionName
// 0x0068 (0x0068 - 0x0000)
struct BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName final
{
public:
	class FName                                   SectionName;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CurrentMontage;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZCharacter*                          Character;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Montage_GetCurrentSection_ReturnValue;    // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName) == 0x000008, "Wrong alignment on BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName");
static_assert(sizeof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName) == 0x000068, "Wrong size on BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, SectionName) == 0x000000, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::SectionName' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CurrentMontage) == 0x000010, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CurrentMontage' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, Character) == 0x000018, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::Character' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_Montage_GetCurrentSection_ReturnValue) == 0x000030, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_Montage_GetCurrentSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000040, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000048, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_GetCharacter_ReturnValue) == 0x000058, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName, CallFunc_IsValid_ReturnValue_2) == 0x000061, "Member 'BP_LA_OverlapTriggerEvent_C_GetCurrentSectionName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

