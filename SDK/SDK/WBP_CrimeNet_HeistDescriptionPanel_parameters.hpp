#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CrimeNet_HeistDescriptionPanel

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel
// 0x0020 (0x0020 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                CallFunc_GetMatchmakingDifficulty_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPD3HeistDataAsset*                     K2Node_CustomEvent_InHeistData;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel) == 0x000020, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel, EntryPoint) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel, CallFunc_GetMatchmakingDifficulty_ReturnValue) == 0x000010, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel::CallFunc_GetMatchmakingDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel, K2Node_CustomEvent_InHeistData) == 0x000018, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_ExecuteUbergraph_WBP_CrimeNet_HeistDescriptionPanel::K2Node_CustomEvent_InHeistData' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.InitializeHeistData
// 0x0008 (0x0008 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData final
{
public:
	class UPD3HeistDataAsset*                     InHeistData;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData) == 0x000008, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData, InHeistData) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeHeistData::InHeistData' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.UpdatePanelTimer
// 0x0140 (0x0140 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer final
{
public:
	float                                         Timer;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsStealth;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TimerText;                                         // 0x0008(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatIntToTimerText_ReturnValue;         // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	class UTextBlock*                             K2Node_Select_Default_1;                           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer) == 0x000140, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, Timer) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::Timer' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, bIsStealth) == 0x000004, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::bIsStealth' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, TimerText) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::TimerText' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, CallFunc_FormatIntToTimerText_ReturnValue) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::CallFunc_FormatIntToTimerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, Temp_bool_Variable) == 0x000040, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_MakeArray_Array_1) == 0x0000F0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, Temp_bool_Variable_1) == 0x000100, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_Select_Default) == 0x000120, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer, K2Node_Select_Default_1) == 0x000138, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdatePanelTimer::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.SetNoHeistData
// 0x0060 (0x0060 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData) == 0x000060, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput) == 0x000050, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_SetNoHeistData::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.UpdateDifficultyVisuals
// 0x0058 (0x0058 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals final
{
public:
	ESBZDifficulty                                InDifficulty;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0010(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZUIData*                       CallFunc_GetUIData_ReturnValue;                    // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDifficultyText_OutDifficultyText;      // 0x0038(0x0018)()
	bool                                          CallFunc_GetDifficultyText_bHasText;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals) == 0x000058, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, InDifficulty) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::InDifficulty' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_GetUIManager_ReturnValue) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_GetUIData_ReturnValue) == 0x000030, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_GetDifficultyText_OutDifficultyText) == 0x000038, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_GetDifficultyText_OutDifficultyText' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals, CallFunc_GetDifficultyText_bHasText) == 0x000050, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateDifficultyVisuals::CallFunc_GetDifficultyText_bHasText' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.SetDifficulty
// 0x0002 (0x0002 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty final
{
public:
	ESBZDifficulty                                InDifficulty;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty) == 0x000001, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty) == 0x000002, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty, InDifficulty) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty::InDifficulty' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_SetDifficulty::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.UpdateTimers
// 0x0030 (0x0030 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZPlayerStatisticsManager*            CallFunc_GetPlayerStatisticsManager_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZLevelTimesStruct>           CallFunc_GetHeistBestTimes_ReturnValue;            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FSBZLevelTimesStruct                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers) == 0x000030, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers, CallFunc_GetPlayerStatisticsManager_ReturnValue) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers::CallFunc_GetPlayerStatisticsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers, CallFunc_GetHeistBestTimes_ReturnValue) == 0x000018, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers::CallFunc_GetHeistBestTimes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_UpdateTimers::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.InitializeSecurityCompanies
// 0x0060 (0x0060 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies) == 0x000060, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, Temp_int_Variable) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, Temp_int_Variable_1) == 0x000004, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000011, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000018, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000020, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000024, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_GetChildrenCount_ReturnValue) == 0x000030, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_GetChildAt_ReturnValue) == 0x000040, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_MakeLiteralInt_ReturnValue) == 0x000048, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display) == 0x000050, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_InitializeSecurityCompanies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.Display Panel Animation
// 0x0008 (0x0008 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation) == 0x000008, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Display_Panel_Animation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.Update Security Companies for Difficulty
// 0x0170 (0x0170 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty final
{
public:
	TArray<class FString>                         Array;                                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          IsActive;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDifficulty                                Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CrimeNet_SecurityCompanyDisplay_C* K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSecurityCompanyName_ReturnValue;       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameRecordsManager*                 CallFunc_Get_ReturnValue;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZDifficultyConfiguration>    CallFunc_GetDifficultyConfiguration_ReturnValue;   // 0x00D0(0x0010)(ReferenceParm)
	struct FSBZDifficultyConfiguration            CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_Select_Default_2;                           // 0x0148(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPD3HeistDataAsset*                     CallFunc_GetHeistDataFromLevelShortName_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty) == 0x000170, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Array) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Array' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, IsActive) == 0x000010, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_byte_Variable) == 0x000011, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_byte_Variable_2) == 0x000013, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000030, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Array_Index_Variable_2) == 0x000034, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_bool_Variable) == 0x000039, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, K2Node_Select_Default) == 0x000041, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_byte_Variable_3) == 0x00005C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_byte_Variable_4) == 0x00005D, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_GetAllChildren_ReturnValue) == 0x000068, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display) == 0x000090, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::K2Node_DynamicCast_AsWBP_Crime_Net_Security_Company_Display' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_GetSecurityCompanyName_ReturnValue) == 0x0000A0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_GetSecurityCompanyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B4, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, Temp_bool_Variable_1) == 0x0000BC, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Get_ReturnValue) == 0x0000C0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, K2Node_Select_Default_1) == 0x0000C8, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_GetDifficultyConfiguration_ReturnValue) == 0x0000D0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_GetDifficultyConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Array_Length_ReturnValue_3) == 0x000140, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_Less_IntInt_ReturnValue_2) == 0x000144, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, K2Node_Select_Default_2) == 0x000148, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_BooleanAND_ReturnValue_1) == 0x000158, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_IsEmpty_ReturnValue) == 0x000159, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_GetHeistDataFromLevelShortName_ReturnValue) == 0x000160, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_GetHeistDataFromLevelShortName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000168, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_Update_Security_Companies_for_Difficulty::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_CrimeNet_HeistDescriptionPanel.WBP_CrimeNet_HeistDescriptionPanel_C.GetSecurityCompanyName
// 0x0070 (0x0070 - 0x0000)
struct WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName final
{
public:
	class USBZSecurityCompanyVisualsWidget*       Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         ColonIndex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EnumName;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESBZSecurityCompany                           CallFunc_GetSecurityCompanyEnum_ReturnValue;       // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName) == 0x000008, "Wrong alignment on WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName");
static_assert(sizeof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName) == 0x000070, "Wrong size on WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, Widget) == 0x000000, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::Widget' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, ReturnValue) == 0x000008, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, ColonIndex) == 0x000018, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::ColonIndex' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, EnumName) == 0x000020, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::EnumName' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_GetSecurityCompanyEnum_ReturnValue) == 0x000030, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_GetSecurityCompanyEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_FindSubstring_ReturnValue) == 0x000034, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_GetEnumeratorName_ReturnValue) == 0x000038, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName, CallFunc_RightChop_ReturnValue) == 0x000060, "Member 'WBP_CrimeNet_HeistDescriptionPanel_C_GetSecurityCompanyName::CallFunc_RightChop_ReturnValue' has a wrong offset!");

}

