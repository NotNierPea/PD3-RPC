#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_NeonTube_Little_Pink

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_NeonTube_Little_Pink.BPL_NeonTube_Little_Pink_C
// 0x0038 (0x02E0 - 0x02A8)
class ABPL_NeonTube_Little_Pink_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZPropDamageComponent*                SBZPropDamage;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   SmoothAmbiant;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_DeskLamp_02;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Flicker_Material;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPL_NeonTube_Little_Pink(int32 EntryPoint);
	void BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature(class UActorComponent* PoolComponent, int32 Hits, bool bDoCosmetics, const struct FSBZPropDamageContext& DamageContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_NeonTube_Little_Pink_C">();
	}
	static class ABPL_NeonTube_Little_Pink_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPL_NeonTube_Little_Pink_C>();
	}
};
static_assert(alignof(ABPL_NeonTube_Little_Pink_C) == 0x000008, "Wrong alignment on ABPL_NeonTube_Little_Pink_C");
static_assert(sizeof(ABPL_NeonTube_Little_Pink_C) == 0x0002E0, "Wrong size on ABPL_NeonTube_Little_Pink_C");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, UberGraphFrame) == 0x0002A8, "Member 'ABPL_NeonTube_Little_Pink_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, SBZPropDamage) == 0x0002B0, "Member 'ABPL_NeonTube_Little_Pink_C::SBZPropDamage' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, PointLight) == 0x0002B8, "Member 'ABPL_NeonTube_Little_Pink_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, SmoothAmbiant) == 0x0002C0, "Member 'ABPL_NeonTube_Little_Pink_C::SmoothAmbiant' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, LGT_DeskLamp_02) == 0x0002C8, "Member 'ABPL_NeonTube_Little_Pink_C::LGT_DeskLamp_02' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABPL_NeonTube_Little_Pink_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABPL_NeonTube_Little_Pink_C, Flicker_Material) == 0x0002D8, "Member 'ABPL_NeonTube_Little_Pink_C::Flicker_Material' has a wrong offset!");

}

