#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ModeSelect_ModeButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "E_ButtonLockedState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_ModeSelect_ModeButton.WBP_UI_ModeSelect_ModeButton_C
// 0x0108 (0x0468 - 0x0360)
class UWBP_UI_ModeSelect_ModeButton_C final : public USBZMenuButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Special_Border_Motion;                             // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnFocused;                                         // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowMoreInfo;                                      // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowDescription;                                   // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_UI_Widget_ActionInput_C*           ActionKey;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Background_Border;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Beta_O;                                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BetaBackground_I;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           BlackAndWhite_Retainer;                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EdgeBorder_I;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FadedGradient_I;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InfoBackground_O;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         InfoBox;                                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Locked_O;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        LockedText_T;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mode_Image;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        ModeDescription_Text;                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        ModeTitle_Text;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Outline_I;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Special_Border;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ModeTitle;                                         // 0x0408(0x0018)(Edit, BlueprintVisible)
	class FText                                   ModeDescription;                                   // 0x0420(0x0018)(Edit, BlueprintVisible)
	class UMaterialInstanceDynamic*               BnwDynamicMaterial;                                // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           ButtonImage;                                       // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInfoBox;                                        // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnShowAdditionalInfo;                              // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SoloModeButton;                                    // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_WBP_UI_ModeSelect_ModeButton(int32 EntryPoint);
	void SetSpecialFocus(bool Focused);
	void ButtonFocusChanging(bool bInHasFocus);
	void ButtonDisabledChanged(bool bInIsDisabled);
	void PreConstruct(bool IsDesignTime);
	void ButtonAlternativeSelected();
	void ShowAdditionalInfo();
	void Construct();
	void ShowBlackAndWhite(bool InShow);
	void SetBetaMaterial();
	void UpdateLockStateBasedOnAccess(E_ButtonLockedState InLockedState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_ModeSelect_ModeButton_C">();
	}
	static class UWBP_UI_ModeSelect_ModeButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_ModeSelect_ModeButton_C>();
	}
};
static_assert(alignof(UWBP_UI_ModeSelect_ModeButton_C) == 0x000008, "Wrong alignment on UWBP_UI_ModeSelect_ModeButton_C");
static_assert(sizeof(UWBP_UI_ModeSelect_ModeButton_C) == 0x000468, "Wrong size on UWBP_UI_ModeSelect_ModeButton_C");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, UberGraphFrame) == 0x000360, "Member 'UWBP_UI_ModeSelect_ModeButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Special_Border_Motion) == 0x000368, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Special_Border_Motion' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, OnFocused) == 0x000370, "Member 'UWBP_UI_ModeSelect_ModeButton_C::OnFocused' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ShowMoreInfo) == 0x000378, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ShowMoreInfo' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ShowDescription) == 0x000380, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ShowDescription' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ActionKey) == 0x000388, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ActionKey' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Background_Border) == 0x000390, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Background_Border' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Beta_O) == 0x000398, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Beta_O' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, BetaBackground_I) == 0x0003A0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::BetaBackground_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, BlackAndWhite_Retainer) == 0x0003A8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::BlackAndWhite_Retainer' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, EdgeBorder_I) == 0x0003B0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::EdgeBorder_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, FadedGradient_I) == 0x0003B8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::FadedGradient_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, InfoBackground_O) == 0x0003C0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::InfoBackground_O' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, InfoBox) == 0x0003C8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::InfoBox' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Locked_O) == 0x0003D0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Locked_O' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, LockedText_T) == 0x0003D8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::LockedText_T' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Mode_Image) == 0x0003E0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Mode_Image' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ModeDescription_Text) == 0x0003E8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ModeDescription_Text' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ModeTitle_Text) == 0x0003F0, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ModeTitle_Text' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Outline_I) == 0x0003F8, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Outline_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, Special_Border) == 0x000400, "Member 'UWBP_UI_ModeSelect_ModeButton_C::Special_Border' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ModeTitle) == 0x000408, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ModeTitle' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ModeDescription) == 0x000420, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ModeDescription' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, BnwDynamicMaterial) == 0x000438, "Member 'UWBP_UI_ModeSelect_ModeButton_C::BnwDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, ButtonImage) == 0x000440, "Member 'UWBP_UI_ModeSelect_ModeButton_C::ButtonImage' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, HasInfoBox) == 0x000448, "Member 'UWBP_UI_ModeSelect_ModeButton_C::HasInfoBox' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, OnShowAdditionalInfo) == 0x000450, "Member 'UWBP_UI_ModeSelect_ModeButton_C::OnShowAdditionalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ModeSelect_ModeButton_C, SoloModeButton) == 0x000460, "Member 'UWBP_UI_ModeSelect_ModeButton_C::SoloModeButton' has a wrong offset!");

}

