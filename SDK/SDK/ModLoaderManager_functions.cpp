#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModLoaderManager

#include "Basic.hpp"

#include "ModLoaderManager_classes.hpp"
#include "ModLoaderManager_parameters.hpp"


namespace SDK
{

// Function ModLoaderManager.ModLoaderManager_C.ExecuteUbergraph_ModLoaderManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModLoaderManager_C::ExecuteUbergraph_ModLoaderManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "ExecuteUbergraph_ModLoaderManager");

	Params::ModLoaderManager_C_ExecuteUbergraph_ModLoaderManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.InitMods
// (BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::InitMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "InitMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.DoBinds
// (BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::DoBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "DoBinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.OnWaitReturnToMenuEvent
// (BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::OnWaitReturnToMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "OnWaitReturnToMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.OnGameStartEnteredEvent
// (BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::OnGameStartEnteredEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "OnGameStartEnteredEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.OnHeistStartEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBlackScreenTransitionType              BlackScreenTransitionType                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModLoaderManager_C::OnHeistStartEvent(EBlackScreenTransitionType BlackScreenTransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "OnHeistStartEvent");

	Params::ModLoaderManager_C_OnHeistStartEvent Parms{};

	Parms.BlackScreenTransitionType = BlackScreenTransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.OnJobOverviewReadyEvent
// (BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::OnJobOverviewReadyEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "OnJobOverviewReadyEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.HeistStateChangedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPD3HeistState                          OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPD3HeistState                          NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModLoaderManager_C::HeistStateChangedEvent(EPD3HeistState OldState, EPD3HeistState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "HeistStateChangedEvent");

	Params::ModLoaderManager_C_HeistStateChangedEvent Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.AddPersistentMods
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::AddPersistentMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "AddPersistentMods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.AddHeists
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::AddHeists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "AddHeists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.GetAllData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPDA_ModMeta_C*                   CurrentAsset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModLoaderManager_C::GetAllData(class UPDA_ModMeta_C* CurrentAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "GetAllData");

	Params::ModLoaderManager_C_GetAllData Parms{};

	Parms.CurrentAsset = CurrentAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.ParseModActorStructs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::ParseModActorStructs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "ParseModActorStructs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.SpawnModMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstSpawnOfMenu                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWBP_ActorSpawner_C**             Return                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModLoaderManager_C::SpawnModMenu(bool FirstSpawnOfMenu, class UWBP_ActorSpawner_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "SpawnModMenu");

	Params::ModLoaderManager_C_SpawnModMenu Parms{};

	Parms.FirstSpawnOfMenu = FirstSpawnOfMenu;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ModLoaderManager.ModLoaderManager_C.EnsureAllParsed
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::EnsureAllParsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "EnsureAllParsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.PrintToModLoader
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Print                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UModLoaderManager_C::PrintToModLoader(const class FString& Print)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "PrintToModLoader");

	Params::ModLoaderManager_C_PrintToModLoader Parms{};

	Parms.Print = std::move(Print);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.ShowDebugHeistSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::ShowDebugHeistSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "ShowDebugHeistSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.PreInitExtensions
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::PreInitExtensions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "PreInitExtensions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.InitExtensions
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::InitExtensions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "InitExtensions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.LoadPrimaryMLSave
// (Private, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::LoadPrimaryMLSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "LoadPrimaryMLSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.CreateNewMLSave
// (Private, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::CreateNewMLSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "CreateNewMLSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.LoadMLChildSaves
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::LoadMLChildSaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "LoadMLChildSaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.CreateMLChildSave
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UModLoaderManager_C::CreateMLChildSave(const class FString& SaveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "CreateMLChildSave");

	Params::ModLoaderManager_C_CreateMLChildSave Parms{};

	Parms.SaveSlot = std::move(SaveSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModLoaderManager.ModLoaderManager_C.AddPersWidgetsToVP
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::AddPersWidgetsToVP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "AddPersWidgetsToVP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.SetMMGroup
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::SetMMGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "SetMMGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.PostInitPersistent
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::PostInitPersistent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "PostInitPersistent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.PostInitExtensions
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::PostInitExtensions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "PostInitExtensions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.AddMLButton
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::AddMLButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "AddMLButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModLoaderManager.ModLoaderManager_C.SetupUI
// (Public, BlueprintCallable, BlueprintEvent)

void UModLoaderManager_C::SetupUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModLoaderManager_C", "SetupUI");

	UObject::ProcessEvent(Func, nullptr);
}

}

