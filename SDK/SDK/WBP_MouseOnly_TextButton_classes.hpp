#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MouseOnly_TextButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MouseOnly_TextButton.WBP_MouseOnly_TextButton_C
// 0x0038 (0x02E8 - 0x02B0)
class UWBP_MouseOnly_TextButton_C final : public USBZMenuMouseButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_77;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ButtonText;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   DefaultText;                                       // 0x02D0(0x0018)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_WBP_MouseOnly_TextButton(int32 EntryPoint);
	void OnInitialized();
	void ButtonHoveredChanged(bool bInIsHovered);
	void PreConstruct(bool IsDesignTime);
	void SetText(const class FText& InText);
	void SetFont(const struct FSlateFontInfo& InFont);
	void TextValue();
	void SetColours(const struct FLinearColor& InFontColor, const struct FLinearColor& InBackgroundColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MouseOnly_TextButton_C">();
	}
	static class UWBP_MouseOnly_TextButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MouseOnly_TextButton_C>();
	}
};
static_assert(alignof(UWBP_MouseOnly_TextButton_C) == 0x000008, "Wrong alignment on UWBP_MouseOnly_TextButton_C");
static_assert(sizeof(UWBP_MouseOnly_TextButton_C) == 0x0002E8, "Wrong size on UWBP_MouseOnly_TextButton_C");
static_assert(offsetof(UWBP_MouseOnly_TextButton_C, UberGraphFrame) == 0x0002B0, "Member 'UWBP_MouseOnly_TextButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MouseOnly_TextButton_C, Image_77) == 0x0002B8, "Member 'UWBP_MouseOnly_TextButton_C::Image_77' has a wrong offset!");
static_assert(offsetof(UWBP_MouseOnly_TextButton_C, Image_Background) == 0x0002C0, "Member 'UWBP_MouseOnly_TextButton_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_MouseOnly_TextButton_C, Text_ButtonText) == 0x0002C8, "Member 'UWBP_MouseOnly_TextButton_C::Text_ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_MouseOnly_TextButton_C, DefaultText) == 0x0002D0, "Member 'UWBP_MouseOnly_TextButton_C::DefaultText' has a wrong offset!");

}

