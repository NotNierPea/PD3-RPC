#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_WeaponPartProgressionButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_WeaponPartProgressionButton.WBP_UI_WeaponPartProgressionButton_C
// 0x00D0 (0x04D0 - 0x0400)
class UWBP_UI_WeaponPartProgressionButton_C final : public USBZMainMenuWeaponPartProgressionButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default;                                           // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Locked_A;                                          // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Highlight;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Default_info;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Disabled_I;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EquippedB;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_9;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_98;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_511;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBaseData_Icon_C*          ItemIcon;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        ItemName_T;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        LockedStatus_T;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Preset_O;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PurchaseInfo_WS;                                   // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        UnlockLvl_T;                                       // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Widget_CurrencyWidget_C*           WBP_Widget_CurrencyWidget;                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         IconDisabledOpacity;                               // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IconDefaultOpacity;                                // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EmptyBottomInfoIndex_WS;                           // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LockedBottomInfoIndex_WS;                          // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrencyBottomInfoIndex_WS;                        // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFocus;                                          // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_UI_WeaponPartProgressionButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnInitialized();
	void DisabledButtonSelected();
	void ButtonDisabledChanged(bool bInIsDisabled);
	void DefaultButtonSet();
	void OnEquippedChanged(bool bInIsEquipped);
	void WeaponPartProgressionInitialized(const struct FSBZWeaponPartProgressionCurrent& InWeaponPartProgression);
	void ButtonFocusedChanged(bool bInHasFocus);
	void OnFocusChanged(bool bIsFocused);
	void InitItem(class USBZInventoryBaseData* InItemData);
	void InitButtonState(const struct FSBZWeaponPartProgressionCurrent& InWeaponPartProgression);
	void SetDefaultButton();
	void OnDisabledChanged(bool InDisabled);
	void SetLockedByDLC();
	void SetCurrencyTypeAndValue(int64 InCurrencyValue, ESBZCurrencyCode InCurrencyType);
	void SetLockedByLevel(int32 InLockedLevel);
	void SetDisabled();
	void SetDisabledFocused();
	void SetFocused();
	void SetDefault();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_WeaponPartProgressionButton_C">();
	}
	static class UWBP_UI_WeaponPartProgressionButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_WeaponPartProgressionButton_C>();
	}
};
static_assert(alignof(UWBP_UI_WeaponPartProgressionButton_C) == 0x000008, "Wrong alignment on UWBP_UI_WeaponPartProgressionButton_C");
static_assert(sizeof(UWBP_UI_WeaponPartProgressionButton_C) == 0x0004D0, "Wrong size on UWBP_UI_WeaponPartProgressionButton_C");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, UberGraphFrame) == 0x000400, "Member 'UWBP_UI_WeaponPartProgressionButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Default) == 0x000408, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Default' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, HoverAnim) == 0x000410, "Member 'UWBP_UI_WeaponPartProgressionButton_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Locked_A) == 0x000418, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Locked_A' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Border_Highlight) == 0x000420, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Border_Highlight' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Default_info) == 0x000428, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Default_info' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Disabled_I) == 0x000430, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Disabled_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, EquippedB) == 0x000438, "Member 'UWBP_UI_WeaponPartProgressionButton_C::EquippedB' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image) == 0x000440, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_1) == 0x000448, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_2) == 0x000450, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_7) == 0x000458, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_7' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_8) == 0x000460, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_8' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_9) == 0x000468, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_9' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_98) == 0x000470, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_98' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Image_511) == 0x000478, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Image_511' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, ItemIcon) == 0x000480, "Member 'UWBP_UI_WeaponPartProgressionButton_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, ItemName_T) == 0x000488, "Member 'UWBP_UI_WeaponPartProgressionButton_C::ItemName_T' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, LockedStatus_T) == 0x000490, "Member 'UWBP_UI_WeaponPartProgressionButton_C::LockedStatus_T' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, Preset_O) == 0x000498, "Member 'UWBP_UI_WeaponPartProgressionButton_C::Preset_O' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, PurchaseInfo_WS) == 0x0004A0, "Member 'UWBP_UI_WeaponPartProgressionButton_C::PurchaseInfo_WS' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, UnlockLvl_T) == 0x0004A8, "Member 'UWBP_UI_WeaponPartProgressionButton_C::UnlockLvl_T' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, WBP_Widget_CurrencyWidget) == 0x0004B0, "Member 'UWBP_UI_WeaponPartProgressionButton_C::WBP_Widget_CurrencyWidget' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, IconDisabledOpacity) == 0x0004B8, "Member 'UWBP_UI_WeaponPartProgressionButton_C::IconDisabledOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, IconDefaultOpacity) == 0x0004BC, "Member 'UWBP_UI_WeaponPartProgressionButton_C::IconDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, EmptyBottomInfoIndex_WS) == 0x0004C0, "Member 'UWBP_UI_WeaponPartProgressionButton_C::EmptyBottomInfoIndex_WS' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, LockedBottomInfoIndex_WS) == 0x0004C4, "Member 'UWBP_UI_WeaponPartProgressionButton_C::LockedBottomInfoIndex_WS' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, CurrencyBottomInfoIndex_WS) == 0x0004C8, "Member 'UWBP_UI_WeaponPartProgressionButton_C::CurrencyBottomInfoIndex_WS' has a wrong offset!");
static_assert(offsetof(UWBP_UI_WeaponPartProgressionButton_C, HasFocus) == 0x0004CC, "Member 'UWBP_UI_WeaponPartProgressionButton_C::HasFocus' has a wrong offset!");

}

