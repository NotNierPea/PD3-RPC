#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_MaskSlotButton

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsActiveMaskSlot;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaskSlotIndex_ReturnValue;             // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton) == 0x000028, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_byte_Variable) == 0x000005, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Event_bInIsHovered) == 0x00000B, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Event_bInHasFocus) == 0x00000C, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Event_bIsActiveMaskSlot) == 0x00000D, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Event_bIsActiveMaskSlot' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Select_Default) == 0x00000E, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, CallFunc_GetMaskSlotIndex_ReturnValue) == 0x000014, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::CallFunc_GetMaskSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, K2Node_Select_Default_1) == 0x000019, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_MaskSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.SetActiveMaskSlot
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot final
{
public:
	bool                                          bIsActiveMaskSlot;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot) == 0x000001, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot, bIsActiveMaskSlot) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_SetActiveMaskSlot::bIsActiveMaskSlot' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_OnFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_OnFocused");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused) == 0x000028, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_OnFocused");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_OnFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_OnFocused::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_OnFocused::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_OnFocused, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_MaskSlotButton_C_OnFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.Set Mask Name Colour
// 0x0088 (0x0088 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour final
{
public:
	struct FLinearColor                           DesiredColour;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZMaskData*                     CallFunc_GetMaskInSlot_ReturnValue;                // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0030(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour) == 0x000088, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, DesiredColour) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::DesiredColour' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, Temp_struct_Variable) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, CallFunc_GetMaskInSlot_ReturnValue) == 0x000020, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::CallFunc_GetMaskInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, Temp_bool_Variable) == 0x000028, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, CallFunc_GetDisplayName_OutDisplayName) == 0x000030, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, CallFunc_GetDisplayName_OutHasText) == 0x000048, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, K2Node_Select_Default) == 0x00004C, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Set_Mask_Name_Colour::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.InitializeSuitVisuals
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals final
{
public:
	bool                                          MaskValid;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZInventoryBaseData*                  CallFunc_GetMaskMouldOrData_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0018(0x0018)()
	bool                                          CallFunc_GetDisplayName_OutHasText;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZMaskData*                     CallFunc_GetMaskInSlot_ReturnValue;                // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZInventoryBaseData*                  CallFunc_GetMaskMouldOrData_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPresetMaskSlot_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals) == 0x000058, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, MaskValid) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::MaskValid' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_GetMaskMouldOrData_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_GetMaskMouldOrData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_GetDisplayName_OutDisplayName) == 0x000018, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_GetDisplayName_OutHasText) == 0x000030, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_GetDisplayName_OutHasText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, Temp_byte_Variable) == 0x000031, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, Temp_byte_Variable_1) == 0x000032, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_GetMaskInSlot_ReturnValue) == 0x000038, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_GetMaskInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_GetMaskMouldOrData_ReturnValue_1) == 0x000048, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_GetMaskMouldOrData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, CallFunc_IsPresetMaskSlot_ReturnValue) == 0x000050, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::CallFunc_IsPresetMaskSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, Temp_bool_Variable) == 0x000051, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals, K2Node_Select_Default) == 0x000052, "Member 'WBP_UI_Inventory_MaskSlotButton_C_InitializeSuitVisuals::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.CanCustomize
// 0x0009 (0x0009 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_CanCustomize final
{
public:
	bool                                          CanCustomize_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPreconfigMaskSlot_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPresetMaskSlot_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize) == 0x000001, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_CanCustomize");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize) == 0x000009, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_CanCustomize");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CanCustomize_0) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CanCustomize_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_IsPreconfigMaskSlot_ReturnValue) == 0x000001, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_IsPreconfigMaskSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_IsEmpty_ReturnValue) == 0x000002, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_IsPresetMaskSlot_ReturnValue) == 0x000005, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_IsPresetMaskSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_Not_PreBool_ReturnValue_2) == 0x000006, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_CanCustomize, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_CanCustomize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.Get Mould Mod Data
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data final
{
public:
	class USBZModularPartDataAsset*               Part;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZModularPartSlotBase*          Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZMaskInventorySlot                  CallFunc_GetMaskSlot_ReturnValue;                  // 0x0010(0x00D0)()
	struct FSBZMaskPartConfigGroup                CallFunc_Map_Find_Value;                           // 0x00E0(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data) == 0x0000F8, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data, Part) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data::Part' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data, Temp_object_Variable) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data, CallFunc_GetMaskSlot_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data::CallFunc_GetMaskSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'WBP_UI_Inventory_MaskSlotButton_C_Get_Mould_Mod_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_MaskSlotButton.WBP_UI_Inventory_MaskSlotButton_C.GetMaskMouldOrData
// 0x0100 (0x0100 - 0x0000)
struct WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData final
{
public:
	class USBZInventoryBaseData*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZMaskInventorySlot                  CallFunc_GetMaskSlot_ReturnValue;                  // 0x0010(0x00D0)()
	const class USBZModularPartDataAsset*         CallFunc_Get_Mould_Mod_Data_Part;                  // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZMaskData*                     CallFunc_GetMaskInSlot_ReturnValue;                // 0x00E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZInventoryBaseData*                  K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData) == 0x000008, "Wrong alignment on WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData");
static_assert(sizeof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData) == 0x000100, "Wrong size on WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, ReturnValue) == 0x000000, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, Temp_bool_Variable) == 0x000008, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_GetMaskSlot_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_GetMaskSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_Get_Mould_Mod_Data_Part) == 0x0000E0, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_Get_Mould_Mod_Data_Part' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_GetMaskInSlot_ReturnValue) == 0x0000E8, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_GetMaskInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F1, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F2, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_BooleanAND_ReturnValue) == 0x0000F3, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, CallFunc_BooleanOR_ReturnValue) == 0x0000F4, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData, K2Node_Select_Default) == 0x0000F8, "Member 'WBP_UI_Inventory_MaskSlotButton_C_GetMaskMouldOrData::K2Node_Select_Default' has a wrong offset!");

}

