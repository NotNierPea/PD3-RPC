#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapPinHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MapPinHelper.BP_MapPinHelper_C
// 0x0040 (0x02E8 - 0x02A8)
class ABP_MapPinHelper_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ESBZHeistType                                 PinType;                                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HeistName;                                         // 0x02C8(0x0018)(Edit, BlueprintVisible)
	bool                                          ShowDebugArrow;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MapPinHelper(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapPinHelper_C">();
	}
	static class ABP_MapPinHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MapPinHelper_C>();
	}
};
static_assert(alignof(ABP_MapPinHelper_C) == 0x000008, "Wrong alignment on ABP_MapPinHelper_C");
static_assert(sizeof(ABP_MapPinHelper_C) == 0x0002E8, "Wrong size on ABP_MapPinHelper_C");
static_assert(offsetof(ABP_MapPinHelper_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_MapPinHelper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MapPinHelper_C, Arrow) == 0x0002B0, "Member 'ABP_MapPinHelper_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_MapPinHelper_C, Cube) == 0x0002B8, "Member 'ABP_MapPinHelper_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_MapPinHelper_C, PinType) == 0x0002C0, "Member 'ABP_MapPinHelper_C::PinType' has a wrong offset!");
static_assert(offsetof(ABP_MapPinHelper_C, HeistName) == 0x0002C8, "Member 'ABP_MapPinHelper_C::HeistName' has a wrong offset!");
static_assert(offsetof(ABP_MapPinHelper_C, ShowDebugArrow) == 0x0002E0, "Member 'ABP_MapPinHelper_C::ShowDebugArrow' has a wrong offset!");

}

