#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DamageText_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_DamageText_Base.UI_DamageText_Base_C
// 0x0070 (0x0300 - 0x0290)
class UUI_DamageText_Base_C final : public UUserWidget
{
public:
	class UScaleBox*                              ScaleBox;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Information;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         In_Font_Info;                                      // 0x02A0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SetDisplayText(const class FText& InText, bool IsKillshot, bool Critical, bool IsArmor, float FontScaleOffset);
	void SetDisplayScale(float InUserSpecifiedScale);
	void GetDisplayScale(float* UserSpecifiedScale);
	void SetArmorOutline(class UTextBlock* InputPin, bool IsArmor);
	void NewFunction_0(bool IsKillshot, bool Critical, float FontScaleOffset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_DamageText_Base_C">();
	}
	static class UUI_DamageText_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_DamageText_Base_C>();
	}
};
static_assert(alignof(UUI_DamageText_Base_C) == 0x000008, "Wrong alignment on UUI_DamageText_Base_C");
static_assert(sizeof(UUI_DamageText_Base_C) == 0x000300, "Wrong size on UUI_DamageText_Base_C");
static_assert(offsetof(UUI_DamageText_Base_C, ScaleBox) == 0x000290, "Member 'UUI_DamageText_Base_C::ScaleBox' has a wrong offset!");
static_assert(offsetof(UUI_DamageText_Base_C, Text_Information) == 0x000298, "Member 'UUI_DamageText_Base_C::Text_Information' has a wrong offset!");
static_assert(offsetof(UUI_DamageText_Base_C, In_Font_Info) == 0x0002A0, "Member 'UUI_DamageText_Base_C::In_Font_Info' has a wrong offset!");

}

