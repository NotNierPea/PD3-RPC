#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_ModLoader

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BPFL_ModLoader.BPFL_ModLoader_C.EnsureSingletonSelf
// 0x0098 (0x0098 - 0x0000)
struct BPFL_ModLoader_C_EnsureSingletonSelf final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_EnsureSingletonSelf) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_EnsureSingletonSelf");
static_assert(sizeof(BPFL_ModLoader_C_EnsureSingletonSelf) == 0x000098, "Wrong size on BPFL_ModLoader_C_EnsureSingletonSelf");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, __WorldContext) == 0x000000, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, bFound) == 0x000008, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::bFound' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_DynamicCast_AsUser_Widget) == 0x000018, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000028, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000038, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_ClassDynamicCast_AsActor) == 0x000048, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_ClassDynamicCast_bSuccess_1) == 0x000050, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000080, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_DynamicCast_AsActor) == 0x000088, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureSingletonSelf, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BPFL_ModLoader_C_EnsureSingletonSelf::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.GetModLoaderManager
// 0x0028 (0x0028 - 0x0000)
struct BPFL_ModLoader_C_GetModLoaderManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModLoaderManager_C*                    ModLoaderManagerInstance;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPD3_GameInstance_C*                    K2Node_DynamicCast_AsPD3_Game_Instance;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_GetModLoaderManager) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_GetModLoaderManager");
static_assert(sizeof(BPFL_ModLoader_C_GetModLoaderManager) == 0x000028, "Wrong size on BPFL_ModLoader_C_GetModLoaderManager");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, __WorldContext) == 0x000000, "Member 'BPFL_ModLoader_C_GetModLoaderManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, ModLoaderManagerInstance) == 0x000008, "Member 'BPFL_ModLoader_C_GetModLoaderManager::ModLoaderManagerInstance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPFL_ModLoader_C_GetModLoaderManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, K2Node_DynamicCast_AsPD3_Game_Instance) == 0x000018, "Member 'BPFL_ModLoader_C_GetModLoaderManager::K2Node_DynamicCast_AsPD3_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_ModLoader_C_GetModLoaderManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderManager, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BPFL_ModLoader_C_GetModLoaderManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.PrintToModLoader
// 0x0018 (0x0018 - 0x0000)
struct BPFL_ModLoader_C_PrintToModLoader final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ModLoader_C_PrintToModLoader) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_PrintToModLoader");
static_assert(sizeof(BPFL_ModLoader_C_PrintToModLoader) == 0x000018, "Wrong size on BPFL_ModLoader_C_PrintToModLoader");
static_assert(offsetof(BPFL_ModLoader_C_PrintToModLoader, Message) == 0x000000, "Member 'BPFL_ModLoader_C_PrintToModLoader::Message' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToModLoader, __WorldContext) == 0x000010, "Member 'BPFL_ModLoader_C_PrintToModLoader::__WorldContext' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.EnsureActorSingletonPreSpawnExternal
// 0x0028 (0x0028 - 0x0000)
struct BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExists;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal");
static_assert(sizeof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal) == 0x000028, "Wrong size on BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal");
static_assert(offsetof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal, ActorClass) == 0x000000, "Member 'BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal::ActorClass' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal, __WorldContext) == 0x000008, "Member 'BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal, bExists) == 0x000010, "Member 'BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal::bExists' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_EnsureActorSingletonPreSpawnExternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.EnsureWidgetSingletonPreSpawnExternal
// 0x0038 (0x0038 - 0x0000)
struct BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal final
{
public:
	class UClass*                                 WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExists;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal");
static_assert(sizeof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal) == 0x000038, "Wrong size on BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, WidgetClass) == 0x000000, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::WidgetClass' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, __WorldContext) == 0x000008, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, bExists) == 0x000010, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::bExists' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000018, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, CallFunc_Array_Get_Item) == 0x000028, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPFL_ModLoader_C_EnsureWidgetSingletonPreSpawnExternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.SpawnModManager
// 0x0028 (0x0028 - 0x0000)
struct BPFL_ModLoader_C_SpawnModManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPD3_GameInstance_C*                    K2Node_DynamicCast_AsPD3_Game_Instance;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModLoaderManager_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ModLoader_C_SpawnModManager) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_SpawnModManager");
static_assert(sizeof(BPFL_ModLoader_C_SpawnModManager) == 0x000028, "Wrong size on BPFL_ModLoader_C_SpawnModManager");
static_assert(offsetof(BPFL_ModLoader_C_SpawnModManager, __WorldContext) == 0x000000, "Member 'BPFL_ModLoader_C_SpawnModManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_SpawnModManager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPFL_ModLoader_C_SpawnModManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_SpawnModManager, K2Node_DynamicCast_AsPD3_Game_Instance) == 0x000010, "Member 'BPFL_ModLoader_C_SpawnModManager::K2Node_DynamicCast_AsPD3_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_SpawnModManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPFL_ModLoader_C_SpawnModManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_SpawnModManager, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_SpawnModManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.AddNewPersistentObject
// 0x0030 (0x0030 - 0x0000)
struct BPFL_ModLoader_C_AddNewPersistentObject final
{
public:
	class UClass*                                 ObjectClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Return;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModLoaderManager_C*                    CallFunc_GetModLoaderManager_ModLoaderManagerInstance; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ModLoader_C_AddNewPersistentObject) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_AddNewPersistentObject");
static_assert(sizeof(BPFL_ModLoader_C_AddNewPersistentObject) == 0x000030, "Wrong size on BPFL_ModLoader_C_AddNewPersistentObject");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, ObjectClass) == 0x000000, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::ObjectClass' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, __WorldContext) == 0x000008, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, Return) == 0x000010, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::Return' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, CallFunc_GetModLoaderManager_ModLoaderManagerInstance) == 0x000018, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::CallFunc_GetModLoaderManager_ModLoaderManagerInstance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AddNewPersistentObject, CallFunc_Array_AddUnique_ReturnValue) == 0x000028, "Member 'BPFL_ModLoader_C_AddNewPersistentObject::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.FindPersistentModObjectByClass
// 0x0050 (0x0050 - 0x0000)
struct BPFL_ModLoader_C_FindPersistentModObjectByClass final
{
public:
	class UClass*                                 ObjectClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectInstance;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModLoaderManager_C*                    CallFunc_GetModLoaderManager_ModLoaderManagerInstance; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_FindPersistentModObjectByClass) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_FindPersistentModObjectByClass");
static_assert(sizeof(BPFL_ModLoader_C_FindPersistentModObjectByClass) == 0x000050, "Wrong size on BPFL_ModLoader_C_FindPersistentModObjectByClass");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, ObjectClass) == 0x000000, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::ObjectClass' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, __WorldContext) == 0x000008, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, ObjectInstance) == 0x000010, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::ObjectInstance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, bFound) == 0x000018, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::bFound' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_GetModLoaderManager_ModLoaderManagerInstance) == 0x000020, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_GetModLoaderManager_ModLoaderManagerInstance' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000044, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_FindPersistentModObjectByClass, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BPFL_ModLoader_C_FindPersistentModObjectByClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.ClearNullObjectReferencesFromArray
// 0x0040 (0x0040 - 0x0000)
struct BPFL_ModLoader_C_ClearNullObjectReferencesFromArray final
{
public:
	TArray<class UObject*>                        ObjectArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemoved;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnyRemoved;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RunningIndex;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_ClearNullObjectReferencesFromArray");
static_assert(sizeof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray) == 0x000040, "Wrong size on BPFL_ModLoader_C_ClearNullObjectReferencesFromArray");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, ObjectArray) == 0x000000, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::ObjectArray' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, __WorldContext) == 0x000010, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, bRemoved) == 0x000018, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::bRemoved' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, bAnyRemoved) == 0x000019, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::bAnyRemoved' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, RunningIndex) == 0x00001C, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::RunningIndex' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, Temp_int_Variable) == 0x000028, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ClearNullObjectReferencesFromArray, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BPFL_ModLoader_C_ClearNullObjectReferencesFromArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.GetModLoaderMenu
// 0x0030 (0x0030 - 0x0000)
struct BPFL_ModLoader_C_GetModLoaderMenu final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ActorSpawner_C*                    Return;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ActorSpawner_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_ActorSpawner_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ModLoader_C_GetModLoaderMenu) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_GetModLoaderMenu");
static_assert(sizeof(BPFL_ModLoader_C_GetModLoaderMenu) == 0x000030, "Wrong size on BPFL_ModLoader_C_GetModLoaderMenu");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderMenu, __WorldContext) == 0x000000, "Member 'BPFL_ModLoader_C_GetModLoaderMenu::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderMenu, bFound) == 0x000008, "Member 'BPFL_ModLoader_C_GetModLoaderMenu::bFound' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderMenu, Return) == 0x000010, "Member 'BPFL_ModLoader_C_GetModLoaderMenu::Return' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderMenu, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000018, "Member 'BPFL_ModLoader_C_GetModLoaderMenu::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetModLoaderMenu, CallFunc_Array_Get_Item) == 0x000028, "Member 'BPFL_ModLoader_C_GetModLoaderMenu::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.AppendTwoDigitIntToString
// 0x0068 (0x0068 - 0x0000)
struct BPFL_ModLoader_C_AppendTwoDigitIntToString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	int32                                         Int;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_ModLoader_C_AppendTwoDigitIntToString) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_AppendTwoDigitIntToString");
static_assert(sizeof(BPFL_ModLoader_C_AppendTwoDigitIntToString) == 0x000068, "Wrong size on BPFL_ModLoader_C_AppendTwoDigitIntToString");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, InString) == 0x000000, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::InString' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, Int) == 0x000010, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::Int' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, __WorldContext) == 0x000018, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_AppendTwoDigitIntToString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BPFL_ModLoader_C_AppendTwoDigitIntToString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.PrintToDebugWidget
// 0x0048 (0x0048 - 0x0000)
struct BPFL_ModLoader_C_PrintToDebugWidget final
{
public:
	class UWBP_PrintWidget_C*                     ExistingWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PrintWidget_C*                     DebugWidget;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PrintWidget_C*                     CurrentWidget;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PrintWidget_C*                     CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_PrintToDebugWidget) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_PrintToDebugWidget");
static_assert(sizeof(BPFL_ModLoader_C_PrintToDebugWidget) == 0x000048, "Wrong size on BPFL_ModLoader_C_PrintToDebugWidget");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, ExistingWidget) == 0x000000, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::ExistingWidget' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, Message) == 0x000008, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::Message' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, __WorldContext) == 0x000018, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, DebugWidget) == 0x000020, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::DebugWidget' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, CurrentWidget) == 0x000028, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::CurrentWidget' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000038, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_PrintToDebugWidget, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPFL_ModLoader_C_PrintToDebugWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.GetLevelIdxFromHeistData
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_ModLoader_C_GetLevelIdxFromHeistData final
{
public:
	class UPD3HeistDataAsset*                     HeistData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelIdx;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0020(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0040(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZHeistDeveloperSettings*             K2Node_DynamicCast_AsSBZHeist_Developer_Settings;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZHeistDataLevelPair                 CallFunc_Array_Get_Item;                           // 0x0088(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_GetLevelIdxFromHeistData) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_GetLevelIdxFromHeistData");
static_assert(sizeof(BPFL_ModLoader_C_GetLevelIdxFromHeistData) == 0x0000B8, "Wrong size on BPFL_ModLoader_C_GetLevelIdxFromHeistData");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, HeistData) == 0x000000, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::HeistData' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, __WorldContext) == 0x000008, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, LevelIdx) == 0x000010, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::LevelIdx' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000020, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000040, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000070, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, K2Node_DynamicCast_AsSBZHeist_Developer_Settings) == 0x000078, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::K2Node_DynamicCast_AsSBZHeist_Developer_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_Array_Get_Item) == 0x000088, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetLevelIdxFromHeistData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B1, "Member 'BPFL_ModLoader_C_GetLevelIdxFromHeistData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.ScanModData
// 0x02C8 (0x02C8 - 0x0000)
struct BPFL_ModLoader_C_ScanModData final
{
public:
	TArray<class FString>                         Sub_Directories;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           ClassNames;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     AssetData;                                         // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FName>                           PathsAsName;                                       // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Paths;                                             // 0x0048(0x0010)(Edit, BlueprintVisible)
	struct FARFilter                              Filter;                                            // 0x0058(0x00F0)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARFilter                              K2Node_MakeStruct_ARFilter;                        // 0x0190(0x00F0)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     CallFunc_GetAssets_OutAssetData;                   // 0x02A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssets_ReturnValue;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue_1;           // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(BPFL_ModLoader_C_ScanModData) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_ScanModData");
static_assert(sizeof(BPFL_ModLoader_C_ScanModData) == 0x0002C8, "Wrong size on BPFL_ModLoader_C_ScanModData");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, Sub_Directories) == 0x000000, "Member 'BPFL_ModLoader_C_ScanModData::Sub_Directories' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, ClassNames) == 0x000010, "Member 'BPFL_ModLoader_C_ScanModData::ClassNames' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, __WorldContext) == 0x000020, "Member 'BPFL_ModLoader_C_ScanModData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, AssetData) == 0x000028, "Member 'BPFL_ModLoader_C_ScanModData::AssetData' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, PathsAsName) == 0x000038, "Member 'BPFL_ModLoader_C_ScanModData::PathsAsName' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, Paths) == 0x000048, "Member 'BPFL_ModLoader_C_ScanModData::Paths' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, Filter) == 0x000058, "Member 'BPFL_ModLoader_C_ScanModData::Filter' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, Temp_int_Array_Index_Variable) == 0x00014C, "Member 'BPFL_ModLoader_C_ScanModData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, Temp_int_Loop_Counter_Variable) == 0x000150, "Member 'BPFL_ModLoader_C_ScanModData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Array_Get_Item) == 0x000158, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Conv_StringToName_ReturnValue) == 0x00017C, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, K2Node_MakeStruct_ARFilter) == 0x000190, "Member 'BPFL_ModLoader_C_ScanModData::K2Node_MakeStruct_ARFilter' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Array_AddUnique_ReturnValue) == 0x000280, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_GetAssetRegistry_ReturnValue) == 0x000288, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000298, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_GetAssets_OutAssetData) == 0x0002A0, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_GetAssets_OutAssetData' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_GetAssets_ReturnValue) == 0x0002B0, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_GetAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_ScanModData, CallFunc_GetAssetRegistry_ReturnValue_1) == 0x0002B8, "Member 'BPFL_ModLoader_C_ScanModData::CallFunc_GetAssetRegistry_ReturnValue_1' has a wrong offset!");

// Function BPFL_ModLoader.BPFL_ModLoader_C.GetNextAvailableSaveSlot
// 0x00D8 (0x00D8 - 0x0000)
struct BPFL_ModLoader_C_GetNextAvailableSaveSlot final
{
public:
	TArray<class FString>                         SaveSlots;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Delim;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SlotLimit;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AvailableSlot;                                     // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bSlotAvailable;                                    // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotLimitVar;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousSlot;                                      // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SaveSlotsUsed;                                     // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_ModLoader_C_GetNextAvailableSaveSlot) == 0x000008, "Wrong alignment on BPFL_ModLoader_C_GetNextAvailableSaveSlot");
static_assert(sizeof(BPFL_ModLoader_C_GetNextAvailableSaveSlot) == 0x0000D8, "Wrong size on BPFL_ModLoader_C_GetNextAvailableSaveSlot");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, SaveSlots) == 0x000000, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::SaveSlots' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, Delim) == 0x000010, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::Delim' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, SlotLimit) == 0x000020, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::SlotLimit' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, __WorldContext) == 0x000028, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, AvailableSlot) == 0x000030, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::AvailableSlot' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, bSlotAvailable) == 0x000040, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::bSlotAvailable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, SlotLimitVar) == 0x000044, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::SlotLimitVar' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, PreviousSlot) == 0x000048, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::PreviousSlot' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, SaveSlotsUsed) == 0x000050, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::SaveSlotsUsed' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Array_Get_Item) == 0x000068, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Split_LeftS) == 0x000078, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Split_RightS) == 0x000088, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Split_ReturnValue) == 0x000098, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000A0, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, Temp_int_Array_Index_Variable_1) == 0x0000C0, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C4, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_ModLoader_C_GetNextAvailableSaveSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D1, "Member 'BPFL_ModLoader_C_GetNextAvailableSaveSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

}

