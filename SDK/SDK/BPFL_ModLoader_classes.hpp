#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_ModLoader

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_ModLoader.BPFL_ModLoader_C
// 0x0000 (0x0030 - 0x0030)
class UBPFL_ModLoader_C final : public UBlueprintFunctionLibrary
{
public:
	static void EnsureSingletonSelf(class UObject* __WorldContext, bool* bFound);
	static void GetModLoaderManager(class UObject* __WorldContext, class UModLoaderManager_C** ModLoaderManagerInstance);
	static void PrintToModLoader(const class FString& Message, class UObject* __WorldContext);
	static void EnsureActorSingletonPreSpawnExternal(class UClass* ActorClass, class UObject* __WorldContext, bool* bExists);
	static void EnsureWidgetSingletonPreSpawnExternal(class UClass* WidgetClass, class UObject* __WorldContext, bool* bExists);
	static void SpawnModManager(class UObject* __WorldContext);
	static void AddNewPersistentObject(class UClass* ObjectClass, class UObject* __WorldContext, class UObject** Return);
	static void FindPersistentModObjectByClass(class UClass* ObjectClass, class UObject* __WorldContext, class UObject** ObjectInstance, bool* bFound);
	static void ClearNullObjectReferencesFromArray(TArray<class UObject*>& ObjectArray, class UObject* __WorldContext, bool* bRemoved);
	static void GetModLoaderMenu(class UObject* __WorldContext, bool* bFound, class UWBP_ActorSpawner_C** Return);
	static void AppendTwoDigitIntToString(class FString& InString, int32 Int, class UObject* __WorldContext);
	static void PrintToDebugWidget(class UWBP_PrintWidget_C* ExistingWidget, const class FString& Message, class UObject* __WorldContext, class UWBP_PrintWidget_C** DebugWidget);
	static void GetLevelIdxFromHeistData(class UPD3HeistDataAsset* HeistData, class UObject* __WorldContext, int32* LevelIdx);
	static void ScanModData(TArray<class FString>& Sub_Directories, TArray<class FName>& ClassNames, class UObject* __WorldContext, TArray<struct FAssetData>* AssetData);

	void GetNextAvailableSaveSlot(TArray<class FString>& SaveSlots, const class FString& Delim, int32 SlotLimit, class UObject* __WorldContext, class FString* AvailableSlot, bool* bSlotAvailable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_ModLoader_C">();
	}
	static class UBPFL_ModLoader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_ModLoader_C>();
	}
};
static_assert(alignof(UBPFL_ModLoader_C) == 0x000008, "Wrong alignment on UBPFL_ModLoader_C");
static_assert(sizeof(UBPFL_ModLoader_C) == 0x000030, "Wrong size on UBPFL_ModLoader_C");

}

