#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HudMenu_KillCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HudMenu_KillCounter.HudMenu_KillCounter_C
// 0x00C8 (0x0358 - 0x0290)
class UHudMenu_KillCounter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_0;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_HideMiscText;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_HideName;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_HideOtherPlayers;                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_60;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_191;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_HUDOffsetX;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_HUDOffsetY;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_HUDScale;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_4;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_5;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_6;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_43;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_KillCounter_C*                    MenuKillCounter;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FVector2D& PositionOffset, float ScaleOffset, bool HideName, bool HideMiscText, bool HideOtherPlayers)> OnSaveButtonPressed; // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Checked;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayerName;                                        // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NewVar_0;                                          // 0x033C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Checked_0;                                      // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool IsChecked)> OnHideOtherPlayers;                               // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_HudMenu_KillCounter(int32 EntryPoint);
	void BndEvt__HudMenu_KillCounter_CheckBox_1_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__HudMenu_KillCounter_Button_0_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__HudMenu_KillCounter_SpinBox_1_K2Node_ComponentBoundEvent_4_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__HudMenu_KillCounter_CheckBox_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__HudMenu_KillCounter_CheckBox_285_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__HudMenu_KillCounter_SpinBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__HudMenu_KillCounter_SpinBox_68_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void Construct();
	void InitializeHudMenu(class UKillCounterSaveGame_C* KillCounterSaveGame);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HudMenu_KillCounter_C">();
	}
	static class UHudMenu_KillCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHudMenu_KillCounter_C>();
	}
};
static_assert(alignof(UHudMenu_KillCounter_C) == 0x000008, "Wrong alignment on UHudMenu_KillCounter_C");
static_assert(sizeof(UHudMenu_KillCounter_C) == 0x000358, "Wrong size on UHudMenu_KillCounter_C");
static_assert(offsetof(UHudMenu_KillCounter_C, UberGraphFrame) == 0x000290, "Member 'UHudMenu_KillCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, Button_0) == 0x000298, "Member 'UHudMenu_KillCounter_C::Button_0' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, CheckBox_HideMiscText) == 0x0002A0, "Member 'UHudMenu_KillCounter_C::CheckBox_HideMiscText' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, CheckBox_HideName) == 0x0002A8, "Member 'UHudMenu_KillCounter_C::CheckBox_HideName' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, CheckBox_HideOtherPlayers) == 0x0002B0, "Member 'UHudMenu_KillCounter_C::CheckBox_HideOtherPlayers' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, Image_60) == 0x0002B8, "Member 'UHudMenu_KillCounter_C::Image_60' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, Image_191) == 0x0002C0, "Member 'UHudMenu_KillCounter_C::Image_191' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, SpinBox_HUDOffsetX) == 0x0002C8, "Member 'UHudMenu_KillCounter_C::SpinBox_HUDOffsetX' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, SpinBox_HUDOffsetY) == 0x0002D0, "Member 'UHudMenu_KillCounter_C::SpinBox_HUDOffsetY' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, SpinBox_HUDScale) == 0x0002D8, "Member 'UHudMenu_KillCounter_C::SpinBox_HUDScale' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock) == 0x0002E0, "Member 'UHudMenu_KillCounter_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_1) == 0x0002E8, "Member 'UHudMenu_KillCounter_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_2) == 0x0002F0, "Member 'UHudMenu_KillCounter_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_3) == 0x0002F8, "Member 'UHudMenu_KillCounter_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_4) == 0x000300, "Member 'UHudMenu_KillCounter_C::TextBlock_4' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_5) == 0x000308, "Member 'UHudMenu_KillCounter_C::TextBlock_5' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_6) == 0x000310, "Member 'UHudMenu_KillCounter_C::TextBlock_6' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, TextBlock_43) == 0x000318, "Member 'UHudMenu_KillCounter_C::TextBlock_43' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, MenuKillCounter) == 0x000320, "Member 'UHudMenu_KillCounter_C::MenuKillCounter' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, OnSaveButtonPressed) == 0x000328, "Member 'UHudMenu_KillCounter_C::OnSaveButtonPressed' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, Is_Checked) == 0x000338, "Member 'UHudMenu_KillCounter_C::Is_Checked' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, PlayerName) == 0x000339, "Member 'UHudMenu_KillCounter_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, NewVar_0) == 0x00033C, "Member 'UHudMenu_KillCounter_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, Is_Checked_0) == 0x000344, "Member 'UHudMenu_KillCounter_C::Is_Checked_0' has a wrong offset!");
static_assert(offsetof(UHudMenu_KillCounter_C, OnHideOtherPlayers) == 0x000348, "Member 'UHudMenu_KillCounter_C::OnHideOtherPlayers' has a wrong offset!");

}

