#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ArmorChunk_EquippedDisplay_Slot

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ArmorChunk_EquippedDisplay_Slot.WBP_ArmorChunk_EquippedDisplay_Slot_C.ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot
// 0x0040 (0x0040 - 0x0000)
struct WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot) == 0x000008, "Wrong alignment on WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot");
static_assert(sizeof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot) == 0x000040, "Wrong size on WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, EntryPoint) == 0x000000, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_bool_Variable) == 0x000004, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_byte_Variable) == 0x000005, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_int_Variable) == 0x000008, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_object_Variable) == 0x000010, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_object_Variable_1) == 0x000018, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_object_Variable_2) == 0x000020, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, Temp_object_Variable_3) == 0x000028, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, K2Node_Event_IsDesignTime) == 0x000030, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, K2Node_Select_Default) == 0x000031, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_ExecuteUbergraph_WBP_ArmorChunk_EquippedDisplay_Slot::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ArmorChunk_EquippedDisplay_Slot.WBP_ArmorChunk_EquippedDisplay_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct");
static_assert(sizeof(WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct) == 0x000001, "Wrong size on WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ArmorChunk_EquippedDisplay_Slot.WBP_ArmorChunk_EquippedDisplay_Slot_C.SetSlotType
// 0x0138 (0x0138 - 0x0000)
struct WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType final
{
public:
	ESBZArmorChunkType                            Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZArmorChunkType                            Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)()
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZArmorChunkType                            Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZArmorSettings*                CallFunc_Get_ReturnValue;                          // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZArmorChunkTypeData                 CallFunc_GetChunkData_ReturnValue;                 // 0x0080(0x0054)(ConstParm, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsPercent_Float_ReturnValue;              // 0x00D8(0x0018)()
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00F8(0x0028)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0120(0x0018)()
};
static_assert(alignof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType) == 0x000008, "Wrong alignment on WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType");
static_assert(sizeof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType) == 0x000138, "Wrong size on WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Type) == 0x000000, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Type' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_object_Variable) == 0x000008, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_object_Variable_1) == 0x000010, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_byte_Variable) == 0x000018, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_text_Variable) == 0x000020, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_text_Variable_1) == 0x000038, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_text_Variable_2) == 0x000050, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_object_Variable_2) == 0x000068, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, Temp_byte_Variable_1) == 0x000070, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, CallFunc_Get_ReturnValue) == 0x000078, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, CallFunc_GetChunkData_ReturnValue) == 0x000080, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::CallFunc_GetChunkData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, CallFunc_Abs_ReturnValue) == 0x0000D4, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, CallFunc_AsPercent_Float_ReturnValue) == 0x0000D8, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::CallFunc_AsPercent_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, K2Node_Select_Default) == 0x0000F0, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, K2Node_MakeStruct_SlateColor) == 0x0000F8, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType, K2Node_Select_Default_1) == 0x000120, "Member 'WBP_ArmorChunk_EquippedDisplay_Slot_C_SetSlotType::K2Node_Select_Default_1' has a wrong offset!");

}

