#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_interactableDoor_Base

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "doorStateSimple_structs.hpp"


namespace SDK::Params
{

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.ExecuteUbergraph_BP_interactableDoor_Base
// 0x0088 (0x0088 - 0x0000)
struct BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_Event_OldState;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_Event_NewState;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInitialStateChange;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_canDoorAnimate_canAnimate;                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZGateState                                 K2Node_CustomEvent_oldState_2;                     // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_CustomEvent_newState_1;                     // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_CustomEvent_oldState_1;                     // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_CustomEvent_newState;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_alpha;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_CustomEvent_oldState;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_breached;                       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASBZPlayerCharacter*>            CallFunc_GetAllSBZPlayerCharacters_ReturnValue;    // 0x0068(0x0010)(ReferenceParm)
	class ASBZPlayerCharacter*                    CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base) == 0x000008, "Wrong alignment on BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base");
static_assert(sizeof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base) == 0x000088, "Wrong size on BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, EntryPoint) == 0x000000, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable) == 0x000004, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_1) == 0x000005, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_2) == 0x000006, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_3) == 0x000007, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_4) == 0x000008, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_5) == 0x000009, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_6) == 0x00000A, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_7) == 0x00000B, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_8) == 0x00000C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_9) == 0x00000D, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_bool_Variable_10) == 0x00000E, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_byte_Variable) == 0x00001C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_Event_OldState) == 0x00001D, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_Event_NewState) == 0x00001E, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_Event_bIsInitialStateChange) == 0x00001F, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_Event_bIsInitialStateChange' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000022, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_Select_Default) == 0x000024, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000025, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_canDoorAnimate_canAnimate) == 0x000026, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_canDoorAnimate_canAnimate' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000027, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000028, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_BooleanOR_ReturnValue_1) == 0x000029, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable) == 0x00002C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable_1) == 0x000030, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable_2) == 0x000034, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable_3) == 0x000038, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable_4) == 0x00003C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_float_Variable_5) == 0x000040, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, Temp_byte_Variable_1) == 0x000044, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_GetTimelineLength_ReturnValue) == 0x000048, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_GetPlayRate_ReturnValue) == 0x00004C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_Select_Default_1) == 0x000050, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_oldState_2) == 0x000055, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_oldState_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_newState_1) == 0x000056, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_newState_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_oldState_1) == 0x000057, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_oldState_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_newState) == 0x000058, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_alpha) == 0x00005C, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_alpha' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_oldState) == 0x000060, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_oldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, K2Node_CustomEvent_breached) == 0x000061, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::K2Node_CustomEvent_breached' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_GetAllSBZPlayerCharacters_ReturnValue) == 0x000068, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_GetAllSBZPlayerCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_interactableDoor_Base_C_ExecuteUbergraph_BP_interactableDoor_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.setBreachedMeshVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_interactableDoor_Base_C_setBreachedMeshVisibility final
{
public:
	bool                                          breached;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_interactableDoor_Base_C_setBreachedMeshVisibility) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_setBreachedMeshVisibility");
static_assert(sizeof(BP_interactableDoor_Base_C_setBreachedMeshVisibility) == 0x000001, "Wrong size on BP_interactableDoor_Base_C_setBreachedMeshVisibility");
static_assert(offsetof(BP_interactableDoor_Base_C_setBreachedMeshVisibility, breached) == 0x000000, "Member 'BP_interactableDoor_Base_C_setBreachedMeshVisibility::breached' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.initToValidPosition
// 0x0001 (0x0001 - 0x0000)
struct BP_interactableDoor_Base_C_initToValidPosition final
{
public:
	ESBZGateState                                 oldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_interactableDoor_Base_C_initToValidPosition) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_initToValidPosition");
static_assert(sizeof(BP_interactableDoor_Base_C_initToValidPosition) == 0x000001, "Wrong size on BP_interactableDoor_Base_C_initToValidPosition");
static_assert(offsetof(BP_interactableDoor_Base_C_initToValidPosition, oldState) == 0x000000, "Member 'BP_interactableDoor_Base_C_initToValidPosition::oldState' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.onOpenAnimUpdateTick
// 0x0008 (0x0008 - 0x0000)
struct BP_interactableDoor_Base_C_onOpenAnimUpdateTick final
{
public:
	ESBZGateState                                 oldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 newState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         alpha;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_interactableDoor_Base_C_onOpenAnimUpdateTick) == 0x000004, "Wrong alignment on BP_interactableDoor_Base_C_onOpenAnimUpdateTick");
static_assert(sizeof(BP_interactableDoor_Base_C_onOpenAnimUpdateTick) == 0x000008, "Wrong size on BP_interactableDoor_Base_C_onOpenAnimUpdateTick");
static_assert(offsetof(BP_interactableDoor_Base_C_onOpenAnimUpdateTick, oldState) == 0x000000, "Member 'BP_interactableDoor_Base_C_onOpenAnimUpdateTick::oldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_onOpenAnimUpdateTick, newState) == 0x000001, "Member 'BP_interactableDoor_Base_C_onOpenAnimUpdateTick::newState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_onOpenAnimUpdateTick, alpha) == 0x000004, "Member 'BP_interactableDoor_Base_C_onOpenAnimUpdateTick::alpha' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.onDoorBreached
// 0x0002 (0x0002 - 0x0000)
struct BP_interactableDoor_Base_C_onDoorBreached final
{
public:
	ESBZGateState                                 oldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 newState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_interactableDoor_Base_C_onDoorBreached) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_onDoorBreached");
static_assert(sizeof(BP_interactableDoor_Base_C_onDoorBreached) == 0x000002, "Wrong size on BP_interactableDoor_Base_C_onDoorBreached");
static_assert(offsetof(BP_interactableDoor_Base_C_onDoorBreached, oldState) == 0x000000, "Member 'BP_interactableDoor_Base_C_onDoorBreached::oldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_onDoorBreached, newState) == 0x000001, "Member 'BP_interactableDoor_Base_C_onDoorBreached::newState' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_interactableDoor_Base_C_OnStateChanged final
{
public:
	ESBZGateState                                 OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitialStateChange;                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_interactableDoor_Base_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_OnStateChanged");
static_assert(sizeof(BP_interactableDoor_Base_C_OnStateChanged) == 0x000003, "Wrong size on BP_interactableDoor_Base_C_OnStateChanged");
static_assert(offsetof(BP_interactableDoor_Base_C_OnStateChanged, OldState) == 0x000000, "Member 'BP_interactableDoor_Base_C_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_OnStateChanged, NewState) == 0x000001, "Member 'BP_interactableDoor_Base_C_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_OnStateChanged, bIsInitialStateChange) == 0x000002, "Member 'BP_interactableDoor_Base_C_OnStateChanged::bIsInitialStateChange' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.getDoorSimpleState
// 0x0010 (0x0010 - 0x0000)
struct BP_interactableDoor_Base_C_getDoorSimpleState final
{
public:
	ESBZGateState                                 state;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EdoorStateSimple                              simpleState;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_interactableDoor_Base_C_getDoorSimpleState) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_getDoorSimpleState");
static_assert(sizeof(BP_interactableDoor_Base_C_getDoorSimpleState) == 0x000010, "Wrong size on BP_interactableDoor_Base_C_getDoorSimpleState");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, state) == 0x000000, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::state' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, simpleState) == 0x000001, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::simpleState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000005, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000006, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000008, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00000A, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00000B, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue_2) == 0x00000C, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue_3) == 0x00000D, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue_4) == 0x00000E, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_getDoorSimpleState, CallFunc_BooleanOR_ReturnValue_5) == 0x00000F, "Member 'BP_interactableDoor_Base_C_getDoorSimpleState::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BP_interactableDoor_Base.BP_interactableDoor_Base_C.canDoorAnimate
// 0x000F (0x000F - 0x0000)
struct BP_interactableDoor_Base_C_canDoorAnimate final
{
public:
	ESBZGateState                                 oldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 newState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          canAnimate;                                        // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EdoorStateSimple                              CallFunc_getDoorSimpleState_simpleState;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EdoorStateSimple                              CallFunc_getDoorSimpleState_simpleState_1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EdoorStateSimple                              CallFunc_getDoorSimpleState_simpleState_2;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_interactableDoor_Base_C_canDoorAnimate) == 0x000001, "Wrong alignment on BP_interactableDoor_Base_C_canDoorAnimate");
static_assert(sizeof(BP_interactableDoor_Base_C_canDoorAnimate) == 0x00000F, "Wrong size on BP_interactableDoor_Base_C_canDoorAnimate");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, oldState) == 0x000000, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::oldState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, newState) == 0x000001, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::newState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, canAnimate) == 0x000002, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::canAnimate' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_getDoorSimpleState_simpleState) == 0x000006, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_getDoorSimpleState_simpleState' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000009, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_getDoorSimpleState_simpleState_1) == 0x00000A, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_getDoorSimpleState_simpleState_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000C, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, CallFunc_getDoorSimpleState_simpleState_2) == 0x00000D, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::CallFunc_getDoorSimpleState_simpleState_2' has a wrong offset!");
static_assert(offsetof(BP_interactableDoor_Base_C_canDoorAnimate, K2Node_SwitchEnum_CmpSuccess) == 0x00000E, "Member 'BP_interactableDoor_Base_C_canDoorAnimate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

