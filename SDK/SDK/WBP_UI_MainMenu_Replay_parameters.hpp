#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_MainMenu_Replay

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.ExecuteUbergraph_WBP_UI_MainMenu_Replay
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0008(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZGameStateMachine*                   CallFunc_GetGameStateMachine_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay) == 0x000028, "Wrong size on WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, EntryPoint) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, K2Node_Event_bInIsHovered) == 0x000004, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, CallFunc_GetGlobalColor_ReturnValue) == 0x000008, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, CallFunc_GetGameStateMachine_ReturnValue) == 0x000018, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::CallFunc_GetGameStateMachine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay, K2Node_Event_bInHasFocus) == 0x000020, "Member 'WBP_UI_MainMenu_Replay_C_ExecuteUbergraph_WBP_UI_MainMenu_Replay::K2Node_Event_bInHasFocus' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_Replay_C_PreConstruct");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_MainMenu_Replay_C_PreConstruct");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.SetStateHover
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_SetStateHover final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_SetStateHover) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_Replay_C_SetStateHover");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_SetStateHover) == 0x000005, "Wrong size on WBP_UI_MainMenu_Replay_C_SetStateHover");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateHover, bInIsHovered) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_SetStateHover::bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateHover, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_MainMenu_Replay_C_SetStateHover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateHover, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_MainMenu_Replay_C_SetStateHover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateHover, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_MainMenu_Replay_C_SetStateHover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateHover, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_MainMenu_Replay_C_SetStateHover::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.SetStateFocused
// 0x0050 (0x0050 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_SetStateFocused final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_SetStateFocused) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_Replay_C_SetStateFocused");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_SetStateFocused) == 0x000050, "Wrong size on WBP_UI_MainMenu_Replay_C_SetStateFocused");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateFocused, bIsFocused) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_SetStateFocused::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateFocused, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_UI_MainMenu_Replay_C_SetStateFocused::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateFocused, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'WBP_UI_MainMenu_Replay_C_SetStateFocused::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_SetStateFocused, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_UI_MainMenu_Replay_C_SetStateFocused::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_UI_MainMenu_Replay.WBP_UI_MainMenu_Replay_C.InitReplayInfo
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_UI_MainMenu_Replay_C_InitReplayInfo final
{
public:
	struct FSBZReplayInfo                         InReplayInfor;                                     // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x00A8(0x0018)()
};
static_assert(alignof(WBP_UI_MainMenu_Replay_C_InitReplayInfo) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_Replay_C_InitReplayInfo");
static_assert(sizeof(WBP_UI_MainMenu_Replay_C_InitReplayInfo) == 0x0000C0, "Wrong size on WBP_UI_MainMenu_Replay_C_InitReplayInfo");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_InitReplayInfo, InReplayInfor) == 0x000000, "Member 'WBP_UI_MainMenu_Replay_C_InitReplayInfo::InReplayInfor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_InitReplayInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_UI_MainMenu_Replay_C_InitReplayInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_InitReplayInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000078, "Member 'WBP_UI_MainMenu_Replay_C_InitReplayInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_InitReplayInfo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000090, "Member 'WBP_UI_MainMenu_Replay_C_InitReplayInfo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_Replay_C_InitReplayInfo, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0000A8, "Member 'WBP_UI_MainMenu_Replay_C_InitReplayInfo::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");

}

