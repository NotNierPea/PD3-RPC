#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ArmorChunkPreview

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_ArmorChunkPreview.WBP_UI_ArmorChunkPreview_C
// 0x0028 (0x02B8 - 0x0290)
class UWBP_UI_ArmorChunkPreview_C final : public USBZWidgetBase
{
public:
	class UHorizontalBox*                         ArmorChunks_Hb;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chunk1_I;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chunk2_I;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chunk3_I;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chunk4_I;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetArmorChunks(const struct FSBZArmorConfig& ArmorConfig) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_ArmorChunkPreview_C">();
	}
	static class UWBP_UI_ArmorChunkPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_ArmorChunkPreview_C>();
	}
};
static_assert(alignof(UWBP_UI_ArmorChunkPreview_C) == 0x000008, "Wrong alignment on UWBP_UI_ArmorChunkPreview_C");
static_assert(sizeof(UWBP_UI_ArmorChunkPreview_C) == 0x0002B8, "Wrong size on UWBP_UI_ArmorChunkPreview_C");
static_assert(offsetof(UWBP_UI_ArmorChunkPreview_C, ArmorChunks_Hb) == 0x000290, "Member 'UWBP_UI_ArmorChunkPreview_C::ArmorChunks_Hb' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ArmorChunkPreview_C, Chunk1_I) == 0x000298, "Member 'UWBP_UI_ArmorChunkPreview_C::Chunk1_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ArmorChunkPreview_C, Chunk2_I) == 0x0002A0, "Member 'UWBP_UI_ArmorChunkPreview_C::Chunk2_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ArmorChunkPreview_C, Chunk3_I) == 0x0002A8, "Member 'UWBP_UI_ArmorChunkPreview_C::Chunk3_I' has a wrong offset!");
static_assert(offsetof(UWBP_UI_ArmorChunkPreview_C, Chunk4_I) == 0x0002B0, "Member 'UWBP_UI_ArmorChunkPreview_C::Chunk4_I' has a wrong offset!");

}

