#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarriedHackablePhone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_CarriedHackablePhone.BP_CarriedHackablePhone_C.ExecuteUbergraph_BP_CarriedHackablePhone
// 0x0098 (0x0098 - 0x0000)
struct BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bInRange;                             // 0x007C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasInRange;                          // 0x007D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Progress;                             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsLocallyControlled;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone) == 0x000008, "Wrong alignment on BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone");
static_assert(sizeof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone) == 0x000098, "Wrong size on BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, EntryPoint) == 0x000000, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_struct_Variable) == 0x000008, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_delegate_Variable) == 0x000018, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_struct_Variable_1) == 0x000030, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_struct_Variable_2) == 0x000058, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, K2Node_Event_bInRange) == 0x00007C, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::K2Node_Event_bInRange' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, K2Node_Event_bWasInRange) == 0x00007D, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::K2Node_Event_bWasInRange' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, K2Node_Event_Progress) == 0x000080, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000088, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, K2Node_Event_bIsLocallyControlled) == 0x000089, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::K2Node_Event_bIsLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, CallFunc_PostAkEvent_ReturnValue) == 0x00008C, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, CallFunc_PostAkEvent_ReturnValue_1) == 0x000090, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone, CallFunc_PostAkEvent_ReturnValue_2) == 0x000094, "Member 'BP_CarriedHackablePhone_C_ExecuteUbergraph_BP_CarriedHackablePhone::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");

// Function BP_CarriedHackablePhone.BP_CarriedHackablePhone_C.BP_OnHackStarted
// 0x0001 (0x0001 - 0x0000)
struct BP_CarriedHackablePhone_C_BP_OnHackStarted final
{
public:
	bool                                          bIsLocallyControlled;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CarriedHackablePhone_C_BP_OnHackStarted) == 0x000001, "Wrong alignment on BP_CarriedHackablePhone_C_BP_OnHackStarted");
static_assert(sizeof(BP_CarriedHackablePhone_C_BP_OnHackStarted) == 0x000001, "Wrong size on BP_CarriedHackablePhone_C_BP_OnHackStarted");
static_assert(offsetof(BP_CarriedHackablePhone_C_BP_OnHackStarted, bIsLocallyControlled) == 0x000000, "Member 'BP_CarriedHackablePhone_C_BP_OnHackStarted::bIsLocallyControlled' has a wrong offset!");

// Function BP_CarriedHackablePhone.BP_CarriedHackablePhone_C.BP_OnPlayerInRangeChecked
// 0x0008 (0x0008 - 0x0000)
struct BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked final
{
public:
	bool                                          bInRange;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasInRange;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked) == 0x000004, "Wrong alignment on BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked");
static_assert(sizeof(BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked) == 0x000008, "Wrong size on BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked");
static_assert(offsetof(BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked, bInRange) == 0x000000, "Member 'BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked::bInRange' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked, bWasInRange) == 0x000001, "Member 'BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked::bWasInRange' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked, Progress) == 0x000004, "Member 'BP_CarriedHackablePhone_C_BP_OnPlayerInRangeChecked::Progress' has a wrong offset!");

// Function BP_CarriedHackablePhone.BP_CarriedHackablePhone_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_CarriedHackablePhone_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarriedHackablePhone_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CarriedHackablePhone_C_UserConstructionScript");
static_assert(sizeof(BP_CarriedHackablePhone_C_UserConstructionScript) == 0x000030, "Wrong size on BP_CarriedHackablePhone_C_UserConstructionScript");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x000008, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x00000C, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x000010, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x000014, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_CarriedHackablePhone_C_UserConstructionScript, K2Node_MakeStruct_Vector4) == 0x000020, "Member 'BP_CarriedHackablePhone_C_UserConstructionScript::K2Node_MakeStruct_Vector4' has a wrong offset!");

}

