#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tintable_Fixture

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Tintable_Fixture.BP_Tintable_Fixture_C
// 0x0038 (0x02E0 - 0x02A8)
class ABP_Tintable_Fixture_C : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           tint;                                              // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Secondary_tint;                                    // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roughness_Text;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Metallic_Text;                                     // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tintable_Fixture_C">();
	}
	static class ABP_Tintable_Fixture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Tintable_Fixture_C>();
	}
};
static_assert(alignof(ABP_Tintable_Fixture_C) == 0x000008, "Wrong alignment on ABP_Tintable_Fixture_C");
static_assert(sizeof(ABP_Tintable_Fixture_C) == 0x0002E0, "Wrong size on ABP_Tintable_Fixture_C");
static_assert(offsetof(ABP_Tintable_Fixture_C, StaticMesh) == 0x0002A8, "Member 'ABP_Tintable_Fixture_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Tintable_Fixture_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_Tintable_Fixture_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Tintable_Fixture_C, tint) == 0x0002B8, "Member 'ABP_Tintable_Fixture_C::tint' has a wrong offset!");
static_assert(offsetof(ABP_Tintable_Fixture_C, Secondary_tint) == 0x0002C8, "Member 'ABP_Tintable_Fixture_C::Secondary_tint' has a wrong offset!");
static_assert(offsetof(ABP_Tintable_Fixture_C, Roughness_Text) == 0x0002D8, "Member 'ABP_Tintable_Fixture_C::Roughness_Text' has a wrong offset!");
static_assert(offsetof(ABP_Tintable_Fixture_C, Metallic_Text) == 0x0002DC, "Member 'ABP_Tintable_Fixture_C::Metallic_Text' has a wrong offset!");

}

