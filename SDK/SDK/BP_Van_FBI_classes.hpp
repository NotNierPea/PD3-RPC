#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Van_FBI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Van_FBI.BP_Van_FBI_C
// 0x0020 (0x0810 - 0x07F0)
class ABP_Van_FBI_C final : public ASBZAIFBIVan
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   AntennaBase;                                       // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FBIVan_Dish_Light;                                 // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshP_FBIVan_Lights;                               // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Van_FBI(int32 EntryPoint);
	void BndEvt__BP_Van_FBI_PropDamageComponent_K2Node_ComponentBoundEvent_0_SBZPropDamageHealthSignature__DelegateSignature(class UActorComponent* PoolComponent, float Health, bool bDoCosmetics, const struct FSBZPropDamageContext& DamageContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Van_FBI_C">();
	}
	static class ABP_Van_FBI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Van_FBI_C>();
	}
};
static_assert(alignof(ABP_Van_FBI_C) == 0x000010, "Wrong alignment on ABP_Van_FBI_C");
static_assert(sizeof(ABP_Van_FBI_C) == 0x000810, "Wrong size on ABP_Van_FBI_C");
static_assert(offsetof(ABP_Van_FBI_C, UberGraphFrame) == 0x0007F0, "Member 'ABP_Van_FBI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Van_FBI_C, AntennaBase) == 0x0007F8, "Member 'ABP_Van_FBI_C::AntennaBase' has a wrong offset!");
static_assert(offsetof(ABP_Van_FBI_C, FBIVan_Dish_Light) == 0x000800, "Member 'ABP_Van_FBI_C::FBIVan_Dish_Light' has a wrong offset!");
static_assert(offsetof(ABP_Van_FBI_C, MeshP_FBIVan_Lights) == 0x000808, "Member 'ABP_Van_FBI_C::MeshP_FBIVan_Lights' has a wrong offset!");

}

