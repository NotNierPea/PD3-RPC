#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NewsBanner

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_NewsBanner.WBP_NewsBanner_C.ExecuteUbergraph_WBP_NewsBanner
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZNewsDataUIEntry>            Temp_struct_Variable;                              // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZOnlineCode                                Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZOnlineGetNewsFeedCallbackProxy*     CallFunc_RequestNewsFeed_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsGameInstallPending)>   K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InNavigateIndex;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZOnlineCode                                K2Node_CustomEvent_ErrorCode;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZNewsDataUIEntry>            K2Node_CustomEvent_NewsFeedList;                   // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 InNavigateIndex)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameInstallPending_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInEnabled;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESBZOnlineCode ErrorCode, const TArray<struct FSBZNewsDataUIEntry>& NewsFeedList)> K2Node_CreateDelegate_OutputDelegate_4; // 0x00C4(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 NewIndex)>               K2Node_CreateDelegate_OutputDelegate_5;            // 0x00D8(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_NewIndex;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsGameInstallPending;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner) == 0x000008, "Wrong alignment on WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner");
static_assert(sizeof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner) == 0x0000F8, "Wrong size on WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, EntryPoint) == 0x000000, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, Temp_struct_Variable) == 0x000008, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, Temp_byte_Variable) == 0x00001C, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_RequestNewsFeed_ReturnValue) == 0x000020, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_RequestNewsFeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, Temp_bool_IsClosed_Variable) == 0x000040, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_Event_IsDesignTime) == 0x000041, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_InNavigateIndex) == 0x000044, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_InNavigateIndex' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Clamp_ReturnValue) == 0x000054, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Clamp_ReturnValue_1) == 0x00005C, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, Temp_bool_Has_Been_Initd_Variable) == 0x000060, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_ErrorCode) == 0x000061, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_ErrorCode' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_NewsFeedList) == 0x000068, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_NewsFeedList' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A0, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_GetUIManager_ReturnValue) == 0x0000B8, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_IsGameInstallPending_ReturnValue) == 0x0000C0, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_IsGameInstallPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_bInEnabled) == 0x0000C1, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_bInEnabled' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000C4, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000D8, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_NewIndex) == 0x0000EC, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000F0, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner, K2Node_CustomEvent_bIsGameInstallPending) == 0x0000F1, "Member 'WBP_NewsBanner_C_ExecuteUbergraph_WBP_NewsBanner::K2Node_CustomEvent_bIsGameInstallPending' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.OnGameInstalled
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBanner_C_OnGameInstalled final
{
public:
	bool                                          bIsGameInstallPending;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_OnGameInstalled) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_OnGameInstalled");
static_assert(sizeof(WBP_NewsBanner_C_OnGameInstalled) == 0x000001, "Wrong size on WBP_NewsBanner_C_OnGameInstalled");
static_assert(offsetof(WBP_NewsBanner_C_OnGameInstalled, bIsGameInstallPending) == 0x000000, "Member 'WBP_NewsBanner_C_OnGameInstalled::bIsGameInstallPending' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.CarouselIndexChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_NewsBanner_C_CarouselIndexChanged final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBanner_C_CarouselIndexChanged) == 0x000004, "Wrong alignment on WBP_NewsBanner_C_CarouselIndexChanged");
static_assert(sizeof(WBP_NewsBanner_C_CarouselIndexChanged) == 0x000004, "Wrong size on WBP_NewsBanner_C_CarouselIndexChanged");
static_assert(offsetof(WBP_NewsBanner_C_CarouselIndexChanged, NewIndex) == 0x000000, "Member 'WBP_NewsBanner_C_CarouselIndexChanged::NewIndex' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.SetNewsBannerEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBanner_C_SetNewsBannerEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_SetNewsBannerEnabled) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_SetNewsBannerEnabled");
static_assert(sizeof(WBP_NewsBanner_C_SetNewsBannerEnabled) == 0x000001, "Wrong size on WBP_NewsBanner_C_SetNewsBannerEnabled");
static_assert(offsetof(WBP_NewsBanner_C_SetNewsBannerEnabled, bInEnabled) == 0x000000, "Member 'WBP_NewsBanner_C_SetNewsBannerEnabled::bInEnabled' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.NavigateToPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_NewsBanner_C_NavigateToPage final
{
public:
	int32                                         InNavigateIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBanner_C_NavigateToPage) == 0x000004, "Wrong alignment on WBP_NewsBanner_C_NavigateToPage");
static_assert(sizeof(WBP_NewsBanner_C_NavigateToPage) == 0x000004, "Wrong size on WBP_NewsBanner_C_NavigateToPage");
static_assert(offsetof(WBP_NewsBanner_C_NavigateToPage, InNavigateIndex) == 0x000000, "Member 'WBP_NewsBanner_C_NavigateToPage::InNavigateIndex' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBanner_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_PreConstruct");
static_assert(sizeof(WBP_NewsBanner_C_PreConstruct) == 0x000001, "Wrong size on WBP_NewsBanner_C_PreConstruct");
static_assert(offsetof(WBP_NewsBanner_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NewsBanner_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.OnComplete_20FB66EC40031DB9F52C91B5F92076D7
// 0x0018 (0x0018 - 0x0000)
struct WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7 final
{
public:
	ESBZOnlineCode                                ErrorCode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSBZNewsDataUIEntry>            NewsFeedList;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7) == 0x000008, "Wrong alignment on WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7");
static_assert(sizeof(WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7) == 0x000018, "Wrong size on WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7");
static_assert(offsetof(WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7, ErrorCode) == 0x000000, "Member 'WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7::ErrorCode' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7, NewsFeedList) == 0x000008, "Member 'WBP_NewsBanner_C_OnComplete_20FB66EC40031DB9F52C91B5F92076D7::NewsFeedList' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.RemoveItem
// 0x0004 (0x0004 - 0x0000)
struct WBP_NewsBanner_C_RemoveItem final
{
public:
	int32                                         InItemIndexToRemove;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBanner_C_RemoveItem) == 0x000004, "Wrong alignment on WBP_NewsBanner_C_RemoveItem");
static_assert(sizeof(WBP_NewsBanner_C_RemoveItem) == 0x000004, "Wrong size on WBP_NewsBanner_C_RemoveItem");
static_assert(offsetof(WBP_NewsBanner_C_RemoveItem, InItemIndexToRemove) == 0x000000, "Member 'WBP_NewsBanner_C_RemoveItem::InItemIndexToRemove' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.OnFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBanner_C_OnFocusedChanged final
{
public:
	bool                                          InFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_OnFocusedChanged) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_OnFocusedChanged");
static_assert(sizeof(WBP_NewsBanner_C_OnFocusedChanged) == 0x000001, "Wrong size on WBP_NewsBanner_C_OnFocusedChanged");
static_assert(offsetof(WBP_NewsBanner_C_OnFocusedChanged, InFocused) == 0x000000, "Member 'WBP_NewsBanner_C_OnFocusedChanged::InFocused' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.OnHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBanner_C_OnHoveredChanged final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBanner_C_OnHoveredChanged) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_OnHoveredChanged");
static_assert(sizeof(WBP_NewsBanner_C_OnHoveredChanged) == 0x000001, "Wrong size on WBP_NewsBanner_C_OnHoveredChanged");
static_assert(offsetof(WBP_NewsBanner_C_OnHoveredChanged, InHovered) == 0x000000, "Member 'WBP_NewsBanner_C_OnHoveredChanged::InHovered' has a wrong offset!");

// Function WBP_NewsBanner.WBP_NewsBanner_C.UpdateAccessBasedOnPrivilege
// 0x0005 (0x0005 - 0x0000)
struct WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege final
{
public:
	bool                                          InstallPending;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege) == 0x000001, "Wrong alignment on WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege");
static_assert(sizeof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege) == 0x000005, "Wrong size on WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege");
static_assert(offsetof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege, InstallPending) == 0x000000, "Member 'WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege::InstallPending' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege, Temp_bool_Variable) == 0x000001, "Member 'WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege, Temp_byte_Variable) == 0x000002, "Member 'WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege, K2Node_Select_Default) == 0x000004, "Member 'WBP_NewsBanner_C_UpdateAccessBasedOnPrivilege::K2Node_Select_Default' has a wrong offset!");

}

