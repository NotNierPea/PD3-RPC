#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MeshCode_01

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MeshCode_01.BP_MeshCode_01_C.ExecuteUbergraph_BP_MeshCode_01
// 0x0100 (0x0100 - 0x0000)
struct BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_order;                          // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<TSoftObjectPtr<class UStaticMesh>>     CallFunc_getMeshesFromOrder_orderedMeshes;         // 0x0030(0x0010)(ReferenceParm)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Array_Get_Item;                           // 0x0048(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00E8(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01) == 0x000010, "Wrong alignment on BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01");
static_assert(sizeof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01) == 0x000100, "Wrong size on BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, EntryPoint) == 0x000000, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, Temp_object_Variable) == 0x000008, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, K2Node_DynamicCast_AsStatic_Mesh) == 0x000010, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, K2Node_CustomEvent_order) == 0x000020, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::K2Node_CustomEvent_order' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_getMeshesFromOrder_orderedMeshes) == 0x000030, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_getMeshesFromOrder_orderedMeshes' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, K2Node_CustomEvent_Loaded) == 0x000040, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Array_LastIndex_ReturnValue) == 0x00007C, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000080, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000084, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000094, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_AddComponent_ReturnValue) == 0x0000E0, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, K2Node_CreateDelegate_OutputDelegate) == 0x0000E8, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01, CallFunc_SetStaticMesh_ReturnValue) == 0x0000FC, "Member 'BP_MeshCode_01_C_ExecuteUbergraph_BP_MeshCode_01::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_MeshCode_01.BP_MeshCode_01_C.setImageOrder
// 0x0010 (0x0010 - 0x0000)
struct BP_MeshCode_01_C_setImageOrder final
{
public:
	TArray<int32>                                 order;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MeshCode_01_C_setImageOrder) == 0x000008, "Wrong alignment on BP_MeshCode_01_C_setImageOrder");
static_assert(sizeof(BP_MeshCode_01_C_setImageOrder) == 0x000010, "Wrong size on BP_MeshCode_01_C_setImageOrder");
static_assert(offsetof(BP_MeshCode_01_C_setImageOrder, order) == 0x000000, "Member 'BP_MeshCode_01_C_setImageOrder::order' has a wrong offset!");

// Function BP_MeshCode_01.BP_MeshCode_01_C.OnLoaded_A566666B470BD3B8C78498AAD4ED15AA
// 0x0008 (0x0008 - 0x0000)
struct BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA) == 0x000008, "Wrong alignment on BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA");
static_assert(sizeof(BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA) == 0x000008, "Wrong size on BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA");
static_assert(offsetof(BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA, Loaded) == 0x000000, "Member 'BP_MeshCode_01_C_OnLoaded_A566666B470BD3B8C78498AAD4ED15AA::Loaded' has a wrong offset!");

// Function BP_MeshCode_01.BP_MeshCode_01_C.getMeshesFromOrder
// 0x00B8 (0x00B8 - 0x0000)
struct BP_MeshCode_01_C_getMeshesFromOrder final
{
public:
	TArray<int32>                                 order;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<TSoftObjectPtr<class UStaticMesh>>     orderedMeshes;                                     // 0x0010(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class UStaticMesh>>     tmpImages;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             Temp_softobject_Variable;                          // 0x0048(0x0030)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Array_Get_Item_1;                         // 0x0080(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MeshCode_01_C_getMeshesFromOrder) == 0x000008, "Wrong alignment on BP_MeshCode_01_C_getMeshesFromOrder");
static_assert(sizeof(BP_MeshCode_01_C_getMeshesFromOrder) == 0x0000B8, "Wrong size on BP_MeshCode_01_C_getMeshesFromOrder");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, order) == 0x000000, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::order' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, orderedMeshes) == 0x000010, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::orderedMeshes' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, tmpImages) == 0x000020, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::tmpImages' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, Temp_softobject_Variable) == 0x000048, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00007C, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MeshCode_01_C_getMeshesFromOrder, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BP_MeshCode_01_C_getMeshesFromOrder::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}

