#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_HUD_Chat

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_HUD_Chat.WBP_UI_HUD_Chat_C
// 0x0058 (0x0390 - 0x0338)
class UWBP_UI_HUD_Chat_C final : public USBZHUDChatWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_TextInputBackground;                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Text;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Text_BlockChat;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         DisplayTimer;                                      // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tweakable_TimeShown;                               // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInit;                                           // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0368(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxCount;                                          // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_HUD_Chat(int32 EntryPoint);
	void BndEvt__WBP_UI_HUD_Chat_Text_InputText_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void CallReceived(const struct FSBZPlayerCallEvent& CallEventData);
	void KeyItemCountChanged(const struct FSBZKeyItemCountChangedEvent& KeyItemCountChangedEventData);
	void SystemMessageReceived(const struct FSBZSystemChatEvent& ChatEventData);
	void CrewAIMessageReceived(const struct FSBZAICrewChatEvent& ChatEventData);
	void PingReceived(const struct FSBZPlayerPingEvent& PingEventData);
	void OnAICrewDefeatStateChanged(const struct FSBZAICrewDefeatStateChangedData& InData);
	void OnPlayerDefeatStateChanged(const struct FSBZPlayerDefeatStateChangedData& InData);
	void VotingMessageReceived(const struct FSBZVotingChatEvent& ChatEventData);
	void PlayerMessageReceived(const struct FSBZPlayerChatEvent& ChatEventData);
	void OnChatDisabledChanged(bool bIsDisabled);
	void OnInitialized();
	void OnChatFocusChanged(bool bHasFocus);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ProcessDefeatChange(class APlayerState* PlayerState, class ASBZAICrewState* AICrewState, EPD3DefeatState OldDefeatState, EPD3DefeatState NewDefeatState, bool IsInitialStateChange);
	void AddText(const class FText& NewMessage);
	void GetMoodText(class FText& InText, bool IsGood, class FText* OutText);
	void ProcessVotingMessage(const struct FSBZVotingChatEvent& InMessageChat);
	void ProcessSystemMessage(const struct FSBZSystemChatEvent& InMessageChat);
	void ProcessCrewAIMessage(const struct FSBZAICrewChatEvent& InMessageChat);
	void ProcessCall(const struct FSBZPlayerCallEvent& CallEvent);
	void ProcessKeyItemPickUp(const struct FSBZKeyItemCountChangedEvent& InKeyItemEvent);
	void ProcessPing(const struct FSBZPlayerPingEvent& PIngEvent);
	void ResetTimer();
	void Process_Player_Message(const struct FSBZPlayerChatEvent& InMessageChat);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_HUD_Chat_C">();
	}
	static class UWBP_UI_HUD_Chat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_HUD_Chat_C>();
	}
};
static_assert(alignof(UWBP_UI_HUD_Chat_C) == 0x000008, "Wrong alignment on UWBP_UI_HUD_Chat_C");
static_assert(sizeof(UWBP_UI_HUD_Chat_C) == 0x000390, "Wrong size on UWBP_UI_HUD_Chat_C");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, UberGraphFrame) == 0x000338, "Member 'UWBP_UI_HUD_Chat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, Image_TextInputBackground) == 0x000340, "Member 'UWBP_UI_HUD_Chat_C::Image_TextInputBackground' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, ScrollBox_Text) == 0x000348, "Member 'UWBP_UI_HUD_Chat_C::ScrollBox_Text' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, Text_BlockChat) == 0x000350, "Member 'UWBP_UI_HUD_Chat_C::Text_BlockChat' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, DisplayTimer) == 0x000358, "Member 'UWBP_UI_HUD_Chat_C::DisplayTimer' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, Tweakable_TimeShown) == 0x00035C, "Member 'UWBP_UI_HUD_Chat_C::Tweakable_TimeShown' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, bIsInit) == 0x000360, "Member 'UWBP_UI_HUD_Chat_C::bIsInit' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, GameplayTags) == 0x000368, "Member 'UWBP_UI_HUD_Chat_C::GameplayTags' has a wrong offset!");
static_assert(offsetof(UWBP_UI_HUD_Chat_C, MaxCount) == 0x000388, "Member 'UWBP_UI_HUD_Chat_C::MaxCount' has a wrong offset!");

}

