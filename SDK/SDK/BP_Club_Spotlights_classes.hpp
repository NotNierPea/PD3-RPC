#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Club_Spotlights

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Club_Spotlights.BP_Club_Spotlights_C
// 0x0078 (0x0320 - 0x02A8)
class ABP_Club_Spotlights_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_Spotlights;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_StageLight_01_lightHouse;                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_StageLight_01_swivel;                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_StageLight_01_mount;                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorA;                                            // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorB;                                            // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ColorChangeSpeed;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateXMult;                                       // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateYMult;                                       // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spotlight_Intensity;                               // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spotlight_Radius;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spotlight_VolIntensity;                            // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateSpeed;                                       // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Club_Spotlights(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Club_Spotlights_C">();
	}
	static class ABP_Club_Spotlights_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Club_Spotlights_C>();
	}
};
static_assert(alignof(ABP_Club_Spotlights_C) == 0x000008, "Wrong alignment on ABP_Club_Spotlights_C");
static_assert(sizeof(ABP_Club_Spotlights_C) == 0x000320, "Wrong size on ABP_Club_Spotlights_C");
static_assert(offsetof(ABP_Club_Spotlights_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_Club_Spotlights_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, FX_Spotlights) == 0x0002B0, "Member 'ABP_Club_Spotlights_C::FX_Spotlights' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, LGT_StageLight_01_lightHouse) == 0x0002B8, "Member 'ABP_Club_Spotlights_C::LGT_StageLight_01_lightHouse' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, LGT_StageLight_01_swivel) == 0x0002C0, "Member 'ABP_Club_Spotlights_C::LGT_StageLight_01_swivel' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, SpotLight) == 0x0002C8, "Member 'ABP_Club_Spotlights_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, LGT_StageLight_01_mount) == 0x0002D0, "Member 'ABP_Club_Spotlights_C::LGT_StageLight_01_mount' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_Club_Spotlights_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, ColorA) == 0x0002E0, "Member 'ABP_Club_Spotlights_C::ColorA' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, ColorB) == 0x0002F0, "Member 'ABP_Club_Spotlights_C::ColorB' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, ColorChangeSpeed) == 0x000300, "Member 'ABP_Club_Spotlights_C::ColorChangeSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, RotateXMult) == 0x000304, "Member 'ABP_Club_Spotlights_C::RotateXMult' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, RotateYMult) == 0x000308, "Member 'ABP_Club_Spotlights_C::RotateYMult' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, Spotlight_Intensity) == 0x00030C, "Member 'ABP_Club_Spotlights_C::Spotlight_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, Spotlight_Radius) == 0x000310, "Member 'ABP_Club_Spotlights_C::Spotlight_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, Spotlight_VolIntensity) == 0x000314, "Member 'ABP_Club_Spotlights_C::Spotlight_VolIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Club_Spotlights_C, RotateSpeed) == 0x000318, "Member 'ABP_Club_Spotlights_C::RotateSpeed' has a wrong offset!");

}

