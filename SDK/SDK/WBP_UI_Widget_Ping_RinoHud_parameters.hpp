#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_Ping_RinoHud

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPingQuality                                  K2Node_Event_PingQuality;                          // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PingValue;                            // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud) == 0x000004, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud) == 0x00000C, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud, K2Node_Event_PingQuality) == 0x000005, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud::K2Node_Event_PingQuality' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud, K2Node_Event_PingValue) == 0x000008, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ExecuteUbergraph_WBP_UI_Widget_Ping_RinoHud::K2Node_Event_PingValue' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.OnPingValueChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged final
{
public:
	int32                                         PingValue;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged) == 0x000004, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged, PingValue) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_OnPingValueChanged::PingValue' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.OnPingQualityChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged final
{
public:
	EPingQuality                                  PingQuality;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged) == 0x000001, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged, PingQuality) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_OnPingQualityChanged::PingQuality' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_PreConstruct");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_PreConstruct");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.UpdateValueText
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText final
{
public:
	int32                                         InPing;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText) == 0x000008, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText) == 0x000020, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText, InPing) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText::InPing' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_Ping_RinoHud_C_UpdateValueText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.UpdateQualityIcon
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon final
{
public:
	EPingQuality                                  InPingQuality;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon) == 0x000001, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon) == 0x000002, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon, InPingQuality) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon::InPingQuality' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_UI_Widget_Ping_RinoHud_C_UpdateQualityIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.SetCorrectOpacity
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity) == 0x000008, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity) == 0x000020, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, Show) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::Show' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, Temp_float_Variable) == 0x000004, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, Temp_float_Variable_1) == 0x000008, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, K2Node_Select_Default) == 0x000010, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity, K2Node_Select_Default_1) == 0x000018, "Member 'WBP_UI_Widget_Ping_RinoHud_C_SetCorrectOpacity::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UI_Widget_Ping_RinoHud.WBP_UI_Widget_Ping_RinoHud_C.ForceValueUpdate
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPingInMilliseconds_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate) == 0x000004, "Wrong alignment on WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate");
static_assert(sizeof(WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate) == 0x00000C, "Wrong size on WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate, CallFunc_GetPingInMilliseconds_ReturnValue) == 0x000004, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate::CallFunc_GetPingInMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_Ping_RinoHud_C_ForceValueUpdate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

