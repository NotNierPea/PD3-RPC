#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_StoreWeaponSlotButton

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton
// 0x0020 (0x0020 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetItemCost_Price;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZCurrencyCode                              CallFunc_GetItemCost_Currency;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsTransactionInProgress;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton) == 0x000008, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton) == 0x000020, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, CallFunc_GetItemCost_Price) == 0x000008, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::CallFunc_GetItemCost_Price' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, CallFunc_GetItemCost_Currency) == 0x000010, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::CallFunc_GetItemCost_Currency' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, K2Node_Event_bInIsTransactionInProgress) == 0x000011, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::K2Node_Event_bInIsTransactionInProgress' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, K2Node_Event_bInHasFocus) == 0x000012, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ExecuteUbergraph_WBP_UI_Inventory_StoreWeaponSlotButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.OnTransactionProgressChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged final
{
public:
	bool                                          bInIsTransactionInProgress;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged) == 0x000001, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged) == 0x000001, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged, bInIsTransactionInProgress) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionProgressChanged::bInIsTransactionInProgress' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.OnTransactionInProgress
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress final
{
public:
	bool                                          bIsTransactionInProgress;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress) == 0x000008, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress) == 0x000010, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress, bIsTransactionInProgress) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress::bIsTransactionInProgress' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_OnTransactionInProgress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.OnHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover) == 0x000001, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover) == 0x000001, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover, bIsHovered) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_OnHover::bIsHovered' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.SetPrice
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice final
{
public:
	int64                                         Price;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZCurrencyCode                              Currency;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice) == 0x000008, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice) == 0x000010, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice, Price) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice::Price' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice, Currency) == 0x000008, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_SetPrice::Currency' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.InitializeItemData
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData final
{
public:
	class USBZInventoryBaseData*                  InItemData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData) == 0x000008, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData) == 0x000008, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData, InItemData) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_InitializeItemData::InItemData' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.UpdateHighlights
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights) == 0x000008, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights) == 0x000028, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights, IsFocused) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights::IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_UpdateHighlights::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_UI_Inventory_StoreWeaponSlotButton.WBP_UI_Inventory_StoreWeaponSlotButton_C.GetColorByCurrency
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency final
{
public:
	ESBZCurrencyCode                              Currency;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CurrencyColor;                                     // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZCurrencyCode                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0018(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue_1;             // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue_2;             // 0x0038(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency) == 0x000004, "Wrong alignment on WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency");
static_assert(sizeof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency) == 0x000058, "Wrong size on WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, Currency) == 0x000000, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::Currency' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, CurrencyColor) == 0x000004, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::CurrencyColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, Temp_byte_Variable) == 0x000014, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, CallFunc_GetGlobalColor_ReturnValue) == 0x000018, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, CallFunc_GetGlobalColor_ReturnValue_1) == 0x000028, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::CallFunc_GetGlobalColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, CallFunc_GetGlobalColor_ReturnValue_2) == 0x000038, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::CallFunc_GetGlobalColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency, K2Node_Select_Default) == 0x000048, "Member 'WBP_UI_Inventory_StoreWeaponSlotButton_C_GetColorByCurrency::K2Node_Select_Default' has a wrong offset!");

}

