#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_MainMenu_BlackMarketVendorButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0004(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZVendorData*                   K2Node_Event_InVendorData;                         // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsActiveVendor;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00B0(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton) == 0x0000C8, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, EntryPoint) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, CallFunc_GetGlobalColor_ReturnValue) == 0x000004, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_Event_InVendorData) == 0x000018, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_Event_InVendorData' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000020, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_Event_IsDesignTime) == 0x000050, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_Event_bInHasFocus) == 0x000051, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_Event_bInIsHovered) == 0x000052, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_Event_bInIsActiveVendor) == 0x000053, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_Event_bInIsActiveVendor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000058, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000068, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000070, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, Temp_object_Variable) == 0x000078, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000080, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_AsPaper_Sprite) == 0x000088, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_AsPaper_Sprite_1) == 0x000098, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_AsPaper_Sprite_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_CustomEvent_Loaded) == 0x0000A8, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ExecuteUbergraph_WBP_UI_MainMenu_BlackMarketVendorButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnActiveVendorSet
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet final
{
public:
	bool                                          bInIsActiveVendor;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet) == 0x000001, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet, bInIsActiveVendor) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveVendorSet::bInIsActiveVendor' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnVendorDataInitialized
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized final
{
public:
	const class USBZVendorData*                   InVendorData;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized) == 0x000008, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized, InVendorData) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnVendorDataInitialized::InVendorData' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA) == 0x000008, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA, Loaded) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnLoaded_6B23B8934B1A0D62B1E7C882C71AC4AA::Loaded' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnHoverChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged) == 0x000005, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged, bIsHovered) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged::bIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnHoverChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnFocusedChanged
// 0x0034 (0x0034 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged) == 0x000004, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged) == 0x000034, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged, bIsFocused) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged, CallFunc_SelectColor_ReturnValue_2) == 0x000024, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnFocusedChanged::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.RefreshVisuals
// 0x0002 (0x0002 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals) == 0x000002, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000001, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_RefreshVisuals::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.InitIcon
// 0x0070 (0x0070 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon final
{
public:
	class UPaperSprite*                           NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0028)()
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon) == 0x000070, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon, NewParam) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput) == 0x000060, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_InitIcon::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.SetNameColour
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour) == 0x000008, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour) == 0x000058, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour, InColor) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour::InColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour, CallFunc_TextIsEmpty_ReturnValue) == 0x000010, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_SetNameColour::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_UI_MainMenu_BlackMarketVendorButton.WBP_UI_MainMenu_BlackMarketVendorButton_C.OnActiveChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged final
{
public:
	bool                                          bIsActive;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged) == 0x000001, "Wrong alignment on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged");
static_assert(sizeof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged) == 0x000005, "Wrong size on WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged, bIsActive) == 0x000000, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged::bIsActive' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_MainMenu_BlackMarketVendorButton_C_OnActiveChanged::K2Node_Select_Default' has a wrong offset!");

}

