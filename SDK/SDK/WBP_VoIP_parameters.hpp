#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VoIP

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_VoIP.WBP_VoIP_C.ExecuteUbergraph_WBP_VoIP
// 0x0108 (0x0108 - 0x0000)
struct WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ChannelName;                    // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsTalking;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoIPEnabled_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& ChannelName, const class FString& PlayerName, bool bIsTalking)> K2Node_CreateDelegate_OutputDelegate; // 0x003C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EOSProdID_1;                    // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsMuted;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EOSProdID, bool bIsMuted)> K2Node_CreateDelegate_OutputDelegate_1; // 0x006C(0x0014)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_EOSProdID;                      // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsBlocked;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EOSProdID, bool bIsBlocked)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0094(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00AC(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZGameUserSettings*                   CallFunc_GetSBZGameUserSettings_ReturnValue_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EOSId;                          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Joined;                         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVoIPEnabled_ReturnValue_1;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EOSId, bool bJoined)> K2Node_CreateDelegate_OutputDelegate_4; // 0x00E4(0x0014)(ZeroConstructor, NoDestructor)
	class UTLMVoiceChatSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP) == 0x000008, "Wrong alignment on WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP");
static_assert(sizeof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP) == 0x000108, "Wrong size on WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, EntryPoint) == 0x000000, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_ChannelName) == 0x000008, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_ChannelName' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_PlayerName) == 0x000018, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_bIsTalking) == 0x000028, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_bIsTalking' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_GetSBZGameUserSettings_ReturnValue) == 0x000030, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_GetSBZGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_IsVoIPEnabled_ReturnValue) == 0x000038, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_IsVoIPEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_Event_IsDesignTime) == 0x000050, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_EOSProdID_1) == 0x000058, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_EOSProdID_1' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_bIsMuted) == 0x000068, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_bIsMuted' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_EOSProdID) == 0x000080, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_EOSProdID' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_bIsBlocked) == 0x000090, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_bIsBlocked' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A8, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000A9, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000AC, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_IsVisible_ReturnValue) == 0x0000C0, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_GetSBZGameUserSettings_ReturnValue_1) == 0x0000C8, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_GetSBZGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_EOSId) == 0x0000D0, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_EOSId' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CustomEvent_Joined) == 0x0000E0, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CustomEvent_Joined' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_IsVoIPEnabled_ReturnValue_1) == 0x0000E1, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_IsVoIPEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_BooleanAND_ReturnValue) == 0x0000E2, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000E4, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000F8, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000100, "Member 'WBP_VoIP_C_ExecuteUbergraph_WBP_VoIP::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.VoicechatParticipantsChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_VoIP_C_VoicechatParticipantsChanged final
{
public:
	class FString                                 EOSId;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Joined;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_VoicechatParticipantsChanged) == 0x000008, "Wrong alignment on WBP_VoIP_C_VoicechatParticipantsChanged");
static_assert(sizeof(WBP_VoIP_C_VoicechatParticipantsChanged) == 0x000018, "Wrong size on WBP_VoIP_C_VoicechatParticipantsChanged");
static_assert(offsetof(WBP_VoIP_C_VoicechatParticipantsChanged, EOSId) == 0x000000, "Member 'WBP_VoIP_C_VoicechatParticipantsChanged::EOSId' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_VoicechatParticipantsChanged, Joined) == 0x000010, "Member 'WBP_VoIP_C_VoicechatParticipantsChanged::Joined' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.PlayerBlockUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_VoIP_C_PlayerBlockUpdated final
{
public:
	class FString                                 EOSProdID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsBlocked;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_PlayerBlockUpdated) == 0x000008, "Wrong alignment on WBP_VoIP_C_PlayerBlockUpdated");
static_assert(sizeof(WBP_VoIP_C_PlayerBlockUpdated) == 0x000018, "Wrong size on WBP_VoIP_C_PlayerBlockUpdated");
static_assert(offsetof(WBP_VoIP_C_PlayerBlockUpdated, EOSProdID) == 0x000000, "Member 'WBP_VoIP_C_PlayerBlockUpdated::EOSProdID' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_PlayerBlockUpdated, bIsBlocked) == 0x000010, "Member 'WBP_VoIP_C_PlayerBlockUpdated::bIsBlocked' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.PlayerMuteUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_VoIP_C_PlayerMuteUpdated final
{
public:
	class FString                                 EOSProdID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsMuted;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_PlayerMuteUpdated) == 0x000008, "Wrong alignment on WBP_VoIP_C_PlayerMuteUpdated");
static_assert(sizeof(WBP_VoIP_C_PlayerMuteUpdated) == 0x000018, "Wrong size on WBP_VoIP_C_PlayerMuteUpdated");
static_assert(offsetof(WBP_VoIP_C_PlayerMuteUpdated, EOSProdID) == 0x000000, "Member 'WBP_VoIP_C_PlayerMuteUpdated::EOSProdID' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_PlayerMuteUpdated, bIsMuted) == 0x000010, "Member 'WBP_VoIP_C_PlayerMuteUpdated::bIsMuted' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.PlayerTalkingUpdated
// 0x0028 (0x0028 - 0x0000)
struct WBP_VoIP_C_PlayerTalkingUpdated final
{
public:
	class FString                                 ChannelName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsTalking;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_PlayerTalkingUpdated) == 0x000008, "Wrong alignment on WBP_VoIP_C_PlayerTalkingUpdated");
static_assert(sizeof(WBP_VoIP_C_PlayerTalkingUpdated) == 0x000028, "Wrong size on WBP_VoIP_C_PlayerTalkingUpdated");
static_assert(offsetof(WBP_VoIP_C_PlayerTalkingUpdated, ChannelName) == 0x000000, "Member 'WBP_VoIP_C_PlayerTalkingUpdated::ChannelName' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_PlayerTalkingUpdated, PlayerName) == 0x000010, "Member 'WBP_VoIP_C_PlayerTalkingUpdated::PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_PlayerTalkingUpdated, bIsTalking) == 0x000020, "Member 'WBP_VoIP_C_PlayerTalkingUpdated::bIsTalking' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_VoIP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_VoIP_C_PreConstruct");
static_assert(sizeof(WBP_VoIP_C_PreConstruct) == 0x000001, "Wrong size on WBP_VoIP_C_PreConstruct");
static_assert(offsetof(WBP_VoIP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_VoIP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.CheckState
// 0x0038 (0x0038 - 0x0000)
struct WBP_VoIP_C_CheckState final
{
public:
	class ASBZPlayerState*                        CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInChannel_InVoiceChannel;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEOSProductUserId_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTLMVoiceChatSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerMuted_bIsMuted;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerMuted_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerBlocked_ReturnValue;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_CheckState) == 0x000008, "Wrong alignment on WBP_VoIP_C_CheckState");
static_assert(sizeof(WBP_VoIP_C_CheckState) == 0x000038, "Wrong size on WBP_VoIP_C_CheckState");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000000, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_IsPlayerInChannel_InVoiceChannel) == 0x000008, "Member 'WBP_VoIP_C_CheckState::CallFunc_IsPlayerInChannel_InVoiceChannel' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetEOSProductUserId_ReturnValue) == 0x000010, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetEOSProductUserId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'WBP_VoIP_C_CheckState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetPlayerMuted_bIsMuted) == 0x000030, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetPlayerMuted_bIsMuted' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetPlayerMuted_ReturnValue) == 0x000031, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetPlayerMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_CheckState, CallFunc_GetPlayerBlocked_ReturnValue) == 0x000032, "Member 'WBP_VoIP_C_CheckState::CallFunc_GetPlayerBlocked_ReturnValue' has a wrong offset!");

// Function WBP_VoIP.WBP_VoIP_C.UpdateTalkingIndicator
// 0x0018 (0x0018 - 0x0000)
struct WBP_VoIP_C_UpdateTalkingIndicator final
{
public:
	class FString                                 InPlayerName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsTalking_0;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayerTalk_AbleToTalk;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_VoIP_C_UpdateTalkingIndicator) == 0x000008, "Wrong alignment on WBP_VoIP_C_UpdateTalkingIndicator");
static_assert(sizeof(WBP_VoIP_C_UpdateTalkingIndicator) == 0x000018, "Wrong size on WBP_VoIP_C_UpdateTalkingIndicator");
static_assert(offsetof(WBP_VoIP_C_UpdateTalkingIndicator, InPlayerName) == 0x000000, "Member 'WBP_VoIP_C_UpdateTalkingIndicator::InPlayerName' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_UpdateTalkingIndicator, IsTalking_0) == 0x000010, "Member 'WBP_VoIP_C_UpdateTalkingIndicator::IsTalking_0' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_UpdateTalkingIndicator, CallFunc_CanPlayerTalk_AbleToTalk) == 0x000011, "Member 'WBP_VoIP_C_UpdateTalkingIndicator::CallFunc_CanPlayerTalk_AbleToTalk' has a wrong offset!");
static_assert(offsetof(WBP_VoIP_C_UpdateTalkingIndicator, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'WBP_VoIP_C_UpdateTalkingIndicator::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

}

