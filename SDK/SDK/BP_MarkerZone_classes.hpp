#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerZone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MarkerZone.BP_MarkerZone_C
// 0x0058 (0x0330 - 0x02D8)
class ABP_MarkerZone_C final : public ASBZReplicatedBinaryStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_DigitalZone;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon04;                                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon00;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon03;                                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon02;                                            // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon01;                                            // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Area;                                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MarkerZone(int32 EntryPoint);
	void OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MarkerZone_C">();
	}
	static class ABP_MarkerZone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MarkerZone_C>();
	}
};
static_assert(alignof(ABP_MarkerZone_C) == 0x000008, "Wrong alignment on ABP_MarkerZone_C");
static_assert(sizeof(ABP_MarkerZone_C) == 0x000330, "Wrong size on ABP_MarkerZone_C");
static_assert(offsetof(ABP_MarkerZone_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_MarkerZone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, FX_DigitalZone) == 0x0002E0, "Member 'ABP_MarkerZone_C::FX_DigitalZone' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon04) == 0x0002E8, "Member 'ABP_MarkerZone_C::Icon04' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon00) == 0x0002F0, "Member 'ABP_MarkerZone_C::Icon00' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Billboard) == 0x0002F8, "Member 'ABP_MarkerZone_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon03) == 0x000300, "Member 'ABP_MarkerZone_C::Icon03' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon02) == 0x000308, "Member 'ABP_MarkerZone_C::Icon02' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon01) == 0x000310, "Member 'ABP_MarkerZone_C::Icon01' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Area) == 0x000318, "Member 'ABP_MarkerZone_C::Area' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Icon) == 0x000320, "Member 'ABP_MarkerZone_C::Icon' has a wrong offset!");
static_assert(offsetof(ABP_MarkerZone_C, Target) == 0x000328, "Member 'ABP_MarkerZone_C::Target' has a wrong offset!");

}

