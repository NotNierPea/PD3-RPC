#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HackableComputer

#include "Basic.hpp"

#include "Struct_NameLocationAndSpawn_structs.hpp"
#include "Enum_HackingResultOnDone_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HackableComputer.BP_HackableComputer_C.ExecuteUbergraph_BP_HackableComputer
// 0x0168 (0x0168 - 0x0000)
struct BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZBinaryStateNode*                    K2Node_ComponentBoundEvent_BinaryStateNode;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bState;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ComputerBase_C*                    CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_2;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddReplicatedMarker_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_NameLocationAndSpawn           CallFunc_Array_Get_Item;                           // 0x0070(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddReplicatedMarker_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZShoutTargetComponent*               K2Node_ComponentBoundEvent_ShoutTarget;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_ComponentBoundEvent_Shouter;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0104(0x0014)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_TimeToHack;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_CurrentProcess;                 // 0x0120(0x0018)()
	Enum_HackingResultOnDone                      K2Node_CustomEvent_ResultOnDone;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_3;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddReplicatedMarker_ReturnValue_2;        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer) == 0x000008, "Wrong alignment on BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer");
static_assert(sizeof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer) == 0x000168, "Wrong size on BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, EntryPoint) == 0x000000, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_Interactable) == 0x000008, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_Interactor) == 0x000010, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000018, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_HasAuthority_ReturnValue_1) == 0x00001A, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_BinaryStateNode) == 0x000020, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_BinaryStateNode' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_bState) == 0x000028, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_bState' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000029, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000031, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000038, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Create_ReturnValue) == 0x000040, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00004A, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00004B, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00004D, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_BooleanOR_ReturnValue_1) == 0x00004E, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_BooleanOR_ReturnValue_2) == 0x00004F, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_IsValidTimerHandle_ReturnValue_2) == 0x000050, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_IsValidTimerHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, Temp_bool_Has_Been_Initd_Variable) == 0x000051, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000054, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_AddReplicatedMarker_ReturnValue) == 0x000060, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_AddReplicatedMarker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000C4, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_HasAuthority_ReturnValue_2) == 0x0000C9, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000CC, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_AddReplicatedMarker_ReturnValue_1) == 0x0000D8, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_AddReplicatedMarker_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_Event_DeltaSeconds) == 0x0000DC, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, Temp_bool_IsClosed_Variable) == 0x0000E0, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_ShoutTarget) == 0x0000E8, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_ShoutTarget' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_ComponentBoundEvent_Shouter) == 0x0000F0, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_ComponentBoundEvent_Shouter' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F8, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000F9, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_CreateDelegate_OutputDelegate) == 0x000104, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_CustomEvent_TimeToHack) == 0x000118, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_CustomEvent_TimeToHack' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_CustomEvent_CurrentProcess) == 0x000120, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_CustomEvent_CurrentProcess' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, K2Node_CustomEvent_ResultOnDone) == 0x000138, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::K2Node_CustomEvent_ResultOnDone' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_HasAuthority_ReturnValue_3) == 0x000148, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000149, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00014C, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_IsValidTimerHandle_ReturnValue_3) == 0x000150, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_IsValidTimerHandle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000151, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000154, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_AddReplicatedMarker_ReturnValue_2) == 0x000160, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_AddReplicatedMarker_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000164, "Member 'BP_HackableComputer_C_ExecuteUbergraph_BP_HackableComputer::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.Reset
// 0x0028 (0x0028 - 0x0000)
struct BP_HackableComputer_C_Reset final
{
public:
	float                                         TimeToHack_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentProcess_0;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	Enum_HackingResultOnDone                      ResultOnDone_0;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HackableComputer_C_Reset) == 0x000008, "Wrong alignment on BP_HackableComputer_C_Reset");
static_assert(sizeof(BP_HackableComputer_C_Reset) == 0x000028, "Wrong size on BP_HackableComputer_C_Reset");
static_assert(offsetof(BP_HackableComputer_C_Reset, TimeToHack_0) == 0x000000, "Member 'BP_HackableComputer_C_Reset::TimeToHack_0' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_Reset, CurrentProcess_0) == 0x000008, "Member 'BP_HackableComputer_C_Reset::CurrentProcess_0' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_Reset, ResultOnDone_0) == 0x000020, "Member 'BP_HackableComputer_C_Reset::ResultOnDone_0' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature final
{
public:
	class USBZShoutTargetComponent*               ShoutTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Shouter;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature");
static_assert(sizeof(BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature, ShoutTarget) == 0x000000, "Member 'BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature::ShoutTarget' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature, Shouter) == 0x000008, "Member 'BP_HackableComputer_C_BndEvt__SBZShoutTarget_K2Node_ComponentBoundEvent_2_SBZShoutedAtDelegate__DelegateSignature::Shouter' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HackableComputer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HackableComputer_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HackableComputer_C_ReceiveTick");
static_assert(sizeof(BP_HackableComputer_C_ReceiveTick) == 0x000004, "Wrong size on BP_HackableComputer_C_ReceiveTick");
static_assert(offsetof(BP_HackableComputer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HackableComputer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature final
{
public:
	class ASBZBinaryStateNode*                    BinaryStateNode;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bState;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature");
static_assert(sizeof(BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature) == 0x000010, "Wrong size on BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature, BinaryStateNode) == 0x000000, "Member 'BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature::BinaryStateNode' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature, bState) == 0x000008, "Member 'BP_HackableComputer_C_BndEvt__NewVar_2_K2Node_ComponentBoundEvent_1_SBZOnBinaryStateChanged__DelegateSignature::bState' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_HackableComputer_C_BndEvt__Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.SetTings
// 0x0018 (0x0018 - 0x0000)
struct BP_HackableComputer_C_SetTings final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WixiaComputer_C*                   K2Node_DynamicCast_AsWBP_Wixia_Computer;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_SetTings) == 0x000008, "Wrong alignment on BP_HackableComputer_C_SetTings");
static_assert(sizeof(BP_HackableComputer_C_SetTings) == 0x000018, "Wrong size on BP_HackableComputer_C_SetTings");
static_assert(offsetof(BP_HackableComputer_C_SetTings, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_HackableComputer_C_SetTings::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetTings, K2Node_DynamicCast_AsWBP_Wixia_Computer) == 0x000008, "Member 'BP_HackableComputer_C_SetTings::K2Node_DynamicCast_AsWBP_Wixia_Computer' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetTings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HackableComputer_C_SetTings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.SetAllWidgetTimers
// 0x0040 (0x0040 - 0x0000)
struct BP_HackableComputer_C_SetAllWidgetTimers final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WixiaComputer_C*                   K2Node_DynamicCast_AsWBP_Wixia_Computer;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(BP_HackableComputer_C_SetAllWidgetTimers) == 0x000008, "Wrong alignment on BP_HackableComputer_C_SetAllWidgetTimers");
static_assert(sizeof(BP_HackableComputer_C_SetAllWidgetTimers) == 0x000040, "Wrong size on BP_HackableComputer_C_SetAllWidgetTimers");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, K2Node_DynamicCast_AsWBP_Wixia_Computer) == 0x000008, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::K2Node_DynamicCast_AsWBP_Wixia_Computer' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, CallFunc_FTrunc64_ReturnValue) == 0x000020, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_SetAllWidgetTimers, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000028, "Member 'BP_HackableComputer_C_SetAllWidgetTimers::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.NameInfoFunction
// 0x0060 (0x0060 - 0x0000)
struct BP_HackableComputer_C_NameInfoFunction final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_NameLocationAndSpawn           CallFunc_Array_Get_Item;                           // 0x0010(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_HackableComputer_C_NameInfoFunction) == 0x000008, "Wrong alignment on BP_HackableComputer_C_NameInfoFunction");
static_assert(sizeof(BP_HackableComputer_C_NameInfoFunction) == 0x000060, "Wrong size on BP_HackableComputer_C_NameInfoFunction");
static_assert(offsetof(BP_HackableComputer_C_NameInfoFunction, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_HackableComputer_C_NameInfoFunction::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoFunction, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_HackableComputer_C_NameInfoFunction::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.KeyCodesFunction
// 0x0038 (0x0038 - 0x0000)
struct BP_HackableComputer_C_KeyCodesFunction final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_KeypadUVLightPossibleCode_C*> K2Node_MakeArray_Array;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_KeypadUVLightPossibleCode_C*       CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_KeyCodesFunction) == 0x000008, "Wrong alignment on BP_HackableComputer_C_KeyCodesFunction");
static_assert(sizeof(BP_HackableComputer_C_KeyCodesFunction) == 0x000038, "Wrong size on BP_HackableComputer_C_KeyCodesFunction");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HackableComputer_C_KeyCodesFunction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HackableComputer_C_KeyCodesFunction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HackableComputer_C_KeyCodesFunction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BP_HackableComputer_C_KeyCodesFunction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_HackableComputer_C_KeyCodesFunction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HackableComputer_C_KeyCodesFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_HackableComputer_C_KeyCodesFunction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesFunction, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_HackableComputer_C_KeyCodesFunction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.OnRep_States
// 0x0040 (0x0040 - 0x0000)
struct BP_HackableComputer_C_OnRep_States final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0010(0x0018)()
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WixiaComputer_C*                   K2Node_DynamicCast_AsWBP_Wixia_Computer;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HackableComputer_C_OnRep_States) == 0x000008, "Wrong alignment on BP_HackableComputer_C_OnRep_States");
static_assert(sizeof(BP_HackableComputer_C_OnRep_States) == 0x000040, "Wrong size on BP_HackableComputer_C_OnRep_States");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_HackableComputer_C_OnRep_States::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, CallFunc_FTrunc64_ReturnValue) == 0x000008, "Member 'BP_HackableComputer_C_OnRep_States::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000010, "Member 'BP_HackableComputer_C_OnRep_States::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000028, "Member 'BP_HackableComputer_C_OnRep_States::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, K2Node_DynamicCast_AsWBP_Wixia_Computer) == 0x000030, "Member 'BP_HackableComputer_C_OnRep_States::K2Node_DynamicCast_AsWBP_Wixia_Computer' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HackableComputer_C_OnRep_States::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_HackableComputer_C_OnRep_States::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_OnRep_States, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003A, "Member 'BP_HackableComputer_C_OnRep_States::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.NameInfoShoutTarget
// 0x00C8 (0x00C8 - 0x0000)
struct BP_HackableComputer_C_NameInfoShoutTarget final
{
public:
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_NameLocationAndSpawn           CallFunc_Array_Get_Item;                           // 0x0010(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
};
static_assert(alignof(BP_HackableComputer_C_NameInfoShoutTarget) == 0x000008, "Wrong alignment on BP_HackableComputer_C_NameInfoShoutTarget");
static_assert(sizeof(BP_HackableComputer_C_NameInfoShoutTarget) == 0x0000C8, "Wrong size on BP_HackableComputer_C_NameInfoShoutTarget");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000000, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000070, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_NameInfoShoutTarget, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_HackableComputer_C_NameInfoShoutTarget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_HackableComputer.BP_HackableComputer_C.KeyCodesShoutTarget
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HackableComputer_C_KeyCodesShoutTarget final
{
public:
	class FString                                 Codes;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HackableComputer_C_KeyCodesShoutTarget) == 0x000008, "Wrong alignment on BP_HackableComputer_C_KeyCodesShoutTarget");
static_assert(sizeof(BP_HackableComputer_C_KeyCodesShoutTarget) == 0x0000D8, "Wrong size on BP_HackableComputer_C_KeyCodesShoutTarget");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, Codes) == 0x000000, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::Codes' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B0, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HackableComputer_C_KeyCodesShoutTarget, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'BP_HackableComputer_C_KeyCodesShoutTarget::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

}

