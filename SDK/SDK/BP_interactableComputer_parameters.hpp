#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_interactableComputer

#include "Basic.hpp"

#include "CompState_structs.hpp"
#include "S_EmailStructure_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_interactableComputer.BP_InteractableComputer_C.ExecuteUbergraph_BP_InteractableComputer
// 0x0268 (0x0268 - 0x0000)
struct BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       K2Node_Event_Widget_1;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CodeToShow;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       K2Node_Event_Widget;                               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InIdentifier;                         // 0x0020(0x0018)(ConstParm)
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_7;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_7;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_7; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_6;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_6;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_6; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_5;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_5;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_5; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_6; // 0x0080(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_6;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_5; // 0x0090(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_5;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_4;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_4;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NewParam;                       // 0x00C8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	ECompState                                    K2Node_CustomEvent_CompState;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_3;         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_3;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_4; // 0x0118(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_4;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_3; // 0x0128(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_3;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_2;         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_2;           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2; // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_2; // 0x0150(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_2;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent_1; // 0x0190(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState_1;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent;  // 0x01A0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget;                // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NewFunction_1_ReturnValue;                // 0x01C8(0x0018)()
	class FText                                   CallFunc_NewFunction_1_ReturnValue_1;              // 0x01E0(0x0018)()
	TArray<int32>                                 K2Node_Event_GeneratedCodes;                       // 0x01F8(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_TrueCodeIndex;                        // 0x0208(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NewFunction_1_ReturnValue_2;              // 0x0210(0x0018)()
	int32                                         CallFunc_Array_Get_Item;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x022C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Scroll_Down_Func_New_Scroll_Offset;       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ScrollUpFunc_New_Scroll_Offset;           // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_EmailStructure>              K2Node_CustomEvent_EmailArray;                     // 0x0238(0x0010)(ConstParm, ReferenceParm)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue_1;                  // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget_1;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer");
static_assert(sizeof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer) == 0x000268, "Wrong size on BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, EntryPoint) == 0x000000, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, Temp_bool_Variable) == 0x000004, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, Temp_bool_Variable_1) == 0x000005, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_Widget_1) == 0x000008, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_CodeToShow) == 0x000010, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_CodeToShow' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_Widget) == 0x000018, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_InIdentifier) == 0x000020, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_InIdentifier' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_7) == 0x000038, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_7' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_7) == 0x000040, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_7' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_7) == 0x000048, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_7' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_6) == 0x000050, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_6) == 0x000058, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_6) == 0x000060, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_5) == 0x000068, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_5) == 0x000070, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_5) == 0x000078, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_1) == 0x00007A, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_2) == 0x00007B, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_6) == 0x000080, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_6) == 0x000088, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_5) == 0x000090, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_5) == 0x000098, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_4) == 0x0000A0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_4) == 0x0000A8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4) == 0x0000B0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_3) == 0x0000B1, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_4) == 0x0000B2, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue) == 0x0000B3, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_1) == 0x0000B4, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0000B8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_CustomEvent_NewParam) == 0x0000C8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_CustomEvent_CompState) == 0x0000F8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_CustomEvent_CompState' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_3) == 0x000100, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_3) == 0x000108, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3) == 0x000110, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_4) == 0x000118, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_4) == 0x000120, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_3) == 0x000128, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_3) == 0x000130, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_2) == 0x000138, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_2) == 0x000140, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2) == 0x000148, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_5) == 0x000149, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_2) == 0x000150, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_2) == 0x000158, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_SwitchEnum_CmpSuccess_6) == 0x000159, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_2) == 0x00015A, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable_1) == 0x000160, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor_1) == 0x000168, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x000170, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactable) == 0x000178, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_Interactor) == 0x000180, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000188, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_3) == 0x000189, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_4) == 0x00018A, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent_1) == 0x000190, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState_1) == 0x000198, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_InteractableComponent) == 0x0001A0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_ComponentBoundEvent_bInNewState) == 0x0001A8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_ComponentBoundEvent_bInNewState' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_5) == 0x0001A9, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_IsValid_ReturnValue_6) == 0x0001AA, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_GetWidget_ReturnValue) == 0x0001B0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_DynamicCast_AsWBP_3D_Widget) == 0x0001B8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_DynamicCast_AsWBP_3D_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_NewFunction_1_ReturnValue) == 0x0001C8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_NewFunction_1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_NewFunction_1_ReturnValue_1) == 0x0001E0, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_NewFunction_1_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_GeneratedCodes) == 0x0001F8, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_GeneratedCodes' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_Event_TrueCodeIndex) == 0x000208, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_Event_TrueCodeIndex' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_NewFunction_1_ReturnValue_2) == 0x000210, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_NewFunction_1_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Array_Get_Item) == 0x000228, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, Temp_bool_Variable_2) == 0x00022C, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00022D, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Scroll_Down_Func_New_Scroll_Offset) == 0x000230, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Scroll_Down_Func_New_Scroll_Offset' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_ScrollUpFunc_New_Scroll_Offset) == 0x000234, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_ScrollUpFunc_New_Scroll_Offset' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_CustomEvent_EmailArray) == 0x000238, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_CustomEvent_EmailArray' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_GetWidget_ReturnValue_1) == 0x000248, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_GetWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_DynamicCast_AsWBP_3D_Widget_1) == 0x000250, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_DynamicCast_AsWBP_3D_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00025C, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000260, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000264, "Member 'BP_InteractableComputer_C_ExecuteUbergraph_BP_InteractableComputer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.SetEmails
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_SetEmails final
{
public:
	TArray<struct FS_EmailStructure>              EmailArray;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractableComputer_C_SetEmails) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_SetEmails");
static_assert(sizeof(BP_InteractableComputer_C_SetEmails) == 0x000010, "Wrong size on BP_InteractableComputer_C_SetEmails");
static_assert(offsetof(BP_InteractableComputer_C_SetEmails, EmailArray) == 0x000000, "Member 'BP_InteractableComputer_C_SetEmails::EmailArray' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.UpdateCodeViewer
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_UpdateCodeViewer final
{
public:
	TArray<int32>                                 GeneratedCodes;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         TrueCodeIndex;                                     // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_UpdateCodeViewer) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_UpdateCodeViewer");
static_assert(sizeof(BP_InteractableComputer_C_UpdateCodeViewer) == 0x000018, "Wrong size on BP_InteractableComputer_C_UpdateCodeViewer");
static_assert(offsetof(BP_InteractableComputer_C_UpdateCodeViewer, GeneratedCodes) == 0x000000, "Member 'BP_InteractableComputer_C_UpdateCodeViewer::GeneratedCodes' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_UpdateCodeViewer, TrueCodeIndex) == 0x000010, "Member 'BP_InteractableComputer_C_UpdateCodeViewer::TrueCodeIndex' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Up_K2Node_ComponentBoundEvent_11_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_InteractableComputer_SBZInteractable_Down_K2Node_ComponentBoundEvent_10_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Down_K2Node_ComponentBoundEvent_9_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Up_K2Node_ComponentBoundEvent_8_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_7_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_Acti_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_0_K2Node_ComponentBoundEvent_17_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_16_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_00_K2Node_ComponentBoundEvent_15_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.RepNotifyEventListner
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractableComputer_C_RepNotifyEventListner final
{
public:
	ECompState                                    CompState_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_RepNotifyEventListner) == 0x000001, "Wrong alignment on BP_InteractableComputer_C_RepNotifyEventListner");
static_assert(sizeof(BP_InteractableComputer_C_RepNotifyEventListner) == 0x000001, "Wrong size on BP_InteractableComputer_C_RepNotifyEventListner");
static_assert(offsetof(BP_InteractableComputer_C_RepNotifyEventListner, CompState_0) == 0x000000, "Member 'BP_InteractableComputer_C_RepNotifyEventListner::CompState_0' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.SetNumbers
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_SetNumbers final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_SetNumbers) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_SetNumbers");
static_assert(sizeof(BP_InteractableComputer_C_SetNumbers) == 0x000010, "Wrong size on BP_InteractableComputer_C_SetNumbers");
static_assert(offsetof(BP_InteractableComputer_C_SetNumbers, NewParam) == 0x000000, "Member 'BP_InteractableComputer_C_SetNumbers::NewParam' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_3_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_2_K2Node_ComponentBoundEvent_5_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_4_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable__2_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_1_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_InteractableComputer_C_BndEvt__BP_IncteractionComponentComp_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.UpdateIdentifier
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_UpdateIdentifier final
{
public:
	class FText                                   InIdentifier;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractableComputer_C_UpdateIdentifier) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_UpdateIdentifier");
static_assert(sizeof(BP_InteractableComputer_C_UpdateIdentifier) == 0x000018, "Wrong size on BP_InteractableComputer_C_UpdateIdentifier");
static_assert(offsetof(BP_InteractableComputer_C_UpdateIdentifier, InIdentifier) == 0x000000, "Member 'BP_InteractableComputer_C_UpdateIdentifier::InIdentifier' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.InitializeWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableComputer_C_InitializeWidget final
{
public:
	class UWidgetComponent*                       Widget_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_InitializeWidget) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_InitializeWidget");
static_assert(sizeof(BP_InteractableComputer_C_InitializeWidget) == 0x000008, "Wrong size on BP_InteractableComputer_C_InitializeWidget");
static_assert(offsetof(BP_InteractableComputer_C_InitializeWidget, Widget_0) == 0x000000, "Member 'BP_InteractableComputer_C_InitializeWidget::Widget_0' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.BP_SetCode
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableComputer_C_BP_SetCode final
{
public:
	class UWidgetComponent*                       Widget_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CodeToShow;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_BP_SetCode) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_BP_SetCode");
static_assert(sizeof(BP_InteractableComputer_C_BP_SetCode) == 0x000010, "Wrong size on BP_InteractableComputer_C_BP_SetCode");
static_assert(offsetof(BP_InteractableComputer_C_BP_SetCode, Widget_0) == 0x000000, "Member 'BP_InteractableComputer_C_BP_SetCode::Widget_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_BP_SetCode, CodeToShow) == 0x000008, "Member 'BP_InteractableComputer_C_BP_SetCode::CodeToShow' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.OnRep_CompState
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractableComputer_C_OnRep_CompState final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue_1;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget_1;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_OnRep_CompState) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_OnRep_CompState");
static_assert(sizeof(BP_InteractableComputer_C_OnRep_CompState) == 0x000030, "Wrong size on BP_InteractableComputer_C_OnRep_CompState");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'BP_InteractableComputer_C_OnRep_CompState::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, CallFunc_GetWidget_ReturnValue_1) == 0x000008, "Member 'BP_InteractableComputer_C_OnRep_CompState::CallFunc_GetWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, K2Node_DynamicCast_AsWBP_3D_Widget) == 0x000010, "Member 'BP_InteractableComputer_C_OnRep_CompState::K2Node_DynamicCast_AsWBP_3D_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_InteractableComputer_C_OnRep_CompState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, K2Node_DynamicCast_AsWBP_3D_Widget_1) == 0x000020, "Member 'BP_InteractableComputer_C_OnRep_CompState::K2Node_DynamicCast_AsWBP_3D_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_InteractableComputer_C_OnRep_CompState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, CallFunc_HasAuthority_ReturnValue) == 0x000029, "Member 'BP_InteractableComputer_C_OnRep_CompState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_CompState, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_InteractableComputer_C_OnRep_CompState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.NewFunction_0
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableComputer_C_NewFunction_0 final
{
public:
	int32                                         New_Param_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Param_2_0;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_NewFunction_0) == 0x000004, "Wrong alignment on BP_InteractableComputer_C_NewFunction_0");
static_assert(sizeof(BP_InteractableComputer_C_NewFunction_0) == 0x000008, "Wrong size on BP_InteractableComputer_C_NewFunction_0");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_0, New_Param_0) == 0x000000, "Member 'BP_InteractableComputer_C_NewFunction_0::New_Param_0' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_0, New_Param_2_0) == 0x000004, "Member 'BP_InteractableComputer_C_NewFunction_0::New_Param_2_0' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.SetLoadingValues
// 0x0040 (0x0040 - 0x0000)
struct BP_InteractableComputer_C_SetLoadingValues final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(BP_InteractableComputer_C_SetLoadingValues) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_SetLoadingValues");
static_assert(sizeof(BP_InteractableComputer_C_SetLoadingValues) == 0x000040, "Wrong size on BP_InteractableComputer_C_SetLoadingValues");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_InteractableComputer_C_SetLoadingValues::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, K2Node_DynamicCast_AsWBP_3D_Widget) == 0x000008, "Member 'BP_InteractableComputer_C_SetLoadingValues::K2Node_DynamicCast_AsWBP_3D_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_InteractableComputer_C_SetLoadingValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_InteractableComputer_C_SetLoadingValues::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_InteractableComputer_C_SetLoadingValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, CallFunc_FTrunc64_ReturnValue) == 0x000020, "Member 'BP_InteractableComputer_C_SetLoadingValues::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_SetLoadingValues, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000028, "Member 'BP_InteractableComputer_C_SetLoadingValues::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.StateChangeFunction
// 0x0012 (0x0012 - 0x0000)
struct BP_InteractableComputer_C_StateChangeFunction final
{
public:
	ECompState                                    Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_6;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_7;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_8;                         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_StateChangeFunction) == 0x000001, "Wrong alignment on BP_InteractableComputer_C_StateChangeFunction");
static_assert(sizeof(BP_InteractableComputer_C_StateChangeFunction) == 0x000012, "Wrong size on BP_InteractableComputer_C_StateChangeFunction");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, Selection) == 0x000000, "Member 'BP_InteractableComputer_C_StateChangeFunction::Selection' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_InteractableComputer_C_StateChangeFunction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item) == 0x000002, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_1) == 0x000003, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_2) == 0x000004, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_3) == 0x000005, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_4) == 0x000006, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_5) == 0x000009, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_6) == 0x00000B, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_7) == 0x00000C, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_Array_Get_Item_8) == 0x00000F, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_BooleanAND_ReturnValue_2) == 0x000010, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_StateChangeFunction, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_InteractableComputer_C_StateChangeFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.NewFunction_1
// 0x01B0 (0x01B0 - 0x0000)
struct BP_InteractableComputer_C_NewFunction_1 final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         B;                                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InText1;                                           // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0038(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue_1;                   // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0120(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0168(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0190(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_NewFunction_1) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_NewFunction_1");
static_assert(sizeof(BP_InteractableComputer_C_NewFunction_1) == 0x0001B0, "Wrong size on BP_InteractableComputer_C_NewFunction_1");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, InText) == 0x000000, "Member 'BP_InteractableComputer_C_NewFunction_1::InText' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, B) == 0x000018, "Member 'BP_InteractableComputer_C_NewFunction_1::B' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, InText1) == 0x000020, "Member 'BP_InteractableComputer_C_NewFunction_1::InText1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, ReturnValue) == 0x000038, "Member 'BP_InteractableComputer_C_NewFunction_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000060, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Len_ReturnValue) == 0x000070, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_LeftChop_ReturnValue) == 0x0000A0, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000D0, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Len_ReturnValue_1) == 0x0000E0, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E8, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000100, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_LeftChop_ReturnValue_1) == 0x000110, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_LeftChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000120, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000138, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000158, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000168, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000180, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000190, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_NewFunction_1, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001A8, "Member 'BP_InteractableComputer_C_NewFunction_1::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.OnRep_NewVar_0
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableComputer_C_OnRep_NewVar_0 final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_3D_Widget_C*                       K2Node_DynamicCast_AsWBP_3D_Widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractableComputer_C_OnRep_NewVar_0) == 0x000008, "Wrong alignment on BP_InteractableComputer_C_OnRep_NewVar_0");
static_assert(sizeof(BP_InteractableComputer_C_OnRep_NewVar_0) == 0x000018, "Wrong size on BP_InteractableComputer_C_OnRep_NewVar_0");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_NewVar_0, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'BP_InteractableComputer_C_OnRep_NewVar_0::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_NewVar_0, K2Node_DynamicCast_AsWBP_3D_Widget) == 0x000008, "Member 'BP_InteractableComputer_C_OnRep_NewVar_0::K2Node_DynamicCast_AsWBP_3D_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractableComputer_C_OnRep_NewVar_0, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_InteractableComputer_C_OnRep_NewVar_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_interactableComputer.BP_InteractableComputer_C.GetNumberOfCodeWidgets
// 0x0004 (0x0004 - 0x0000)
struct BP_InteractableComputer_C_GetNumberOfCodeWidgets final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableComputer_C_GetNumberOfCodeWidgets) == 0x000004, "Wrong alignment on BP_InteractableComputer_C_GetNumberOfCodeWidgets");
static_assert(sizeof(BP_InteractableComputer_C_GetNumberOfCodeWidgets) == 0x000004, "Wrong size on BP_InteractableComputer_C_GetNumberOfCodeWidgets");
static_assert(offsetof(BP_InteractableComputer_C_GetNumberOfCodeWidgets, ReturnValue) == 0x000000, "Member 'BP_InteractableComputer_C_GetNumberOfCodeWidgets::ReturnValue' has a wrong offset!");

}

