#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QRPhone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_QRPhone.BP_QRPhone_C.ExecuteUbergraph_BP_QRPhone
// 0x0020 (0x0020 - 0x0000)
struct BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateToChangeTo;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone) == 0x000008, "Wrong alignment on BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone");
static_assert(sizeof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone) == 0x000020, "Wrong size on BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, EntryPoint) == 0x000000, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, K2Node_Event_bStateToChangeTo) == 0x000004, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::K2Node_Event_bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, K2Node_Event_bDoCosmetics) == 0x000005, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, K2Node_ComponentBoundEvent_Interactable) == 0x000008, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, K2Node_ComponentBoundEvent_Interactor) == 0x000010, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000018, "Member 'BP_QRPhone_C_ExecuteUbergraph_BP_QRPhone::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_QRPhone.BP_QRPhone_C.BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_QRPhone_C_BndEvt__BP_QRPhone_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_QRPhone.BP_QRPhone_C.OnStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_QRPhone_C_OnStateChanged final
{
public:
	bool                                          bStateToChangeTo;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QRPhone_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_QRPhone_C_OnStateChanged");
static_assert(sizeof(BP_QRPhone_C_OnStateChanged) == 0x000002, "Wrong size on BP_QRPhone_C_OnStateChanged");
static_assert(offsetof(BP_QRPhone_C_OnStateChanged, bStateToChangeTo) == 0x000000, "Member 'BP_QRPhone_C_OnStateChanged::bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_OnStateChanged, bDoCosmetics) == 0x000001, "Member 'BP_QRPhone_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_QRPhone.BP_QRPhone_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_QRPhone_C_UserConstructionScript final
{
public:
	float                                         CallFunc_BreakColor_R;                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QRPhone_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_QRPhone_C_UserConstructionScript");
static_assert(sizeof(BP_QRPhone_C_UserConstructionScript) == 0x000020, "Wrong size on BP_QRPhone_C_UserConstructionScript");
static_assert(offsetof(BP_QRPhone_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x000000, "Member 'BP_QRPhone_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x000004, "Member 'BP_QRPhone_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x000008, "Member 'BP_QRPhone_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x00000C, "Member 'BP_QRPhone_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_QRPhone_C_UserConstructionScript, K2Node_MakeStruct_Vector4) == 0x000010, "Member 'BP_QRPhone_C_UserConstructionScript::K2Node_MakeStruct_Vector4' has a wrong offset!");

// Function BP_QRPhone.BP_QRPhone_C.SetInteractive
// 0x0001 (0x0001 - 0x0000)
struct BP_QRPhone_C_SetInteractive final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QRPhone_C_SetInteractive) == 0x000001, "Wrong alignment on BP_QRPhone_C_SetInteractive");
static_assert(sizeof(BP_QRPhone_C_SetInteractive) == 0x000001, "Wrong size on BP_QRPhone_C_SetInteractive");
static_assert(offsetof(BP_QRPhone_C_SetInteractive, bEnabled) == 0x000000, "Member 'BP_QRPhone_C_SetInteractive::bEnabled' has a wrong offset!");

}

