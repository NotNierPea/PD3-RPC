#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengeItem

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DailyChallengeItem.WBP_DailyChallengeItem_C
// 0x01B8 (0x0448 - 0x0290)
class UWBP_DailyChallengeItem_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChallengeReset;                                    // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuButton_C*                      Button;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Completed_I;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Completed_SB;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Completed_T;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompletedOverlay_I;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DailyChallengeReward_C*            CurrencyReward;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Description_T;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoverBar_I;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoverGradient_I;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_88;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_390;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_403;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DailyChallengeReward_C*            InfamyReward;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Name_T;                                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        Progress_T;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_ChallengeProgress;                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Reroll_O;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RerollActionPromp_O;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_UI_Widget_ActionInput_C*           RerollButtonActionPrompt;                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RerollContent_O;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USBZUITextBlock*                        RerollText;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Rewards_HB;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSBZChallengeData                      In_Challenge_Data;                                 // 0x0380(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxValueToUse;                                     // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinValueToUse;                                     // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWBP_DailyChallengeItem_C* ChallengeButton)> OnChallengeRerollPressedEvent; // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ResetAvailable;                                    // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCompleted;                                       // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         In_Time;                                           // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_DailyChallengeItem(int32 EntryPoint);
	void OnInstallGame(bool bIsGameInstallPending);
	void BndEvt__WBP_DailyChallengeItem_Button_K2Node_ComponentBoundEvent_0_OnMenuButtonSelected__DelegateSignature(class USBZMenuButton* Button_0);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__WBP_DailyChallenges_ChallengeButton_K2Node_ComponentBoundEvent_1_OnMenuButtonStateChanged__DelegateSignature(class USBZMenuButton* Button_0, bool bIsEnabled_0);
	void Construct();
	void InitializeChallenge(const struct FSBZChallengeData& InChallengeData);
	void SetChallengeText(const struct FSBZChallengeData& ChallengeData);
	void SetProgressText();
	void SetProgressMinMax(int32 InMaxValueToUse, int32 InMinValueToUse);
	void ConvertProgressMinMaxToMeters(int32 InMaxValueToUse, int32 InMinValueToUse);
	void SetProgressBarPercentage(int32 Progress, int32 TotalProgress);
	void SetupInfamyReward();
	void SetupCurrencyReward();
	void SetupProgress();
	void SetFocused(bool IsFocused);
	void OnChallengeRerollPressed();
	void OnChallengeItemReset();
	void SetResetAvailable(bool InResetAvailable);
	void SetIsCompleted(bool InCompleted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DailyChallengeItem_C">();
	}
	static class UWBP_DailyChallengeItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DailyChallengeItem_C>();
	}
};
static_assert(alignof(UWBP_DailyChallengeItem_C) == 0x000008, "Wrong alignment on UWBP_DailyChallengeItem_C");
static_assert(sizeof(UWBP_DailyChallengeItem_C) == 0x000448, "Wrong size on UWBP_DailyChallengeItem_C");
static_assert(offsetof(UWBP_DailyChallengeItem_C, UberGraphFrame) == 0x000290, "Member 'UWBP_DailyChallengeItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Hover) == 0x000298, "Member 'UWBP_DailyChallengeItem_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, ChallengeReset) == 0x0002A0, "Member 'UWBP_DailyChallengeItem_C::ChallengeReset' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Button) == 0x0002A8, "Member 'UWBP_DailyChallengeItem_C::Button' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Completed_I) == 0x0002B0, "Member 'UWBP_DailyChallengeItem_C::Completed_I' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Completed_SB) == 0x0002B8, "Member 'UWBP_DailyChallengeItem_C::Completed_SB' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Completed_T) == 0x0002C0, "Member 'UWBP_DailyChallengeItem_C::Completed_T' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, CompletedOverlay_I) == 0x0002C8, "Member 'UWBP_DailyChallengeItem_C::CompletedOverlay_I' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, CurrencyReward) == 0x0002D0, "Member 'UWBP_DailyChallengeItem_C::CurrencyReward' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Description_T) == 0x0002D8, "Member 'UWBP_DailyChallengeItem_C::Description_T' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, HoverBar_I) == 0x0002E0, "Member 'UWBP_DailyChallengeItem_C::HoverBar_I' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, HoverGradient_I) == 0x0002E8, "Member 'UWBP_DailyChallengeItem_C::HoverGradient_I' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image) == 0x0002F0, "Member 'UWBP_DailyChallengeItem_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_3) == 0x0002F8, "Member 'UWBP_DailyChallengeItem_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_4) == 0x000300, "Member 'UWBP_DailyChallengeItem_C::Image_4' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_5) == 0x000308, "Member 'UWBP_DailyChallengeItem_C::Image_5' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_6) == 0x000310, "Member 'UWBP_DailyChallengeItem_C::Image_6' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_88) == 0x000318, "Member 'UWBP_DailyChallengeItem_C::Image_88' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_390) == 0x000320, "Member 'UWBP_DailyChallengeItem_C::Image_390' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Image_403) == 0x000328, "Member 'UWBP_DailyChallengeItem_C::Image_403' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, InfamyReward) == 0x000330, "Member 'UWBP_DailyChallengeItem_C::InfamyReward' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Name_T) == 0x000338, "Member 'UWBP_DailyChallengeItem_C::Name_T' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Progress_T) == 0x000340, "Member 'UWBP_DailyChallengeItem_C::Progress_T' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, ProgressBar_ChallengeProgress) == 0x000348, "Member 'UWBP_DailyChallengeItem_C::ProgressBar_ChallengeProgress' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Reroll_O) == 0x000350, "Member 'UWBP_DailyChallengeItem_C::Reroll_O' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, RerollActionPromp_O) == 0x000358, "Member 'UWBP_DailyChallengeItem_C::RerollActionPromp_O' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, RerollButtonActionPrompt) == 0x000360, "Member 'UWBP_DailyChallengeItem_C::RerollButtonActionPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, RerollContent_O) == 0x000368, "Member 'UWBP_DailyChallengeItem_C::RerollContent_O' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, RerollText) == 0x000370, "Member 'UWBP_DailyChallengeItem_C::RerollText' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, Rewards_HB) == 0x000378, "Member 'UWBP_DailyChallengeItem_C::Rewards_HB' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, In_Challenge_Data) == 0x000380, "Member 'UWBP_DailyChallengeItem_C::In_Challenge_Data' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, MaxValueToUse) == 0x000428, "Member 'UWBP_DailyChallengeItem_C::MaxValueToUse' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, MinValueToUse) == 0x00042C, "Member 'UWBP_DailyChallengeItem_C::MinValueToUse' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, OnChallengeRerollPressedEvent) == 0x000430, "Member 'UWBP_DailyChallengeItem_C::OnChallengeRerollPressedEvent' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, ResetAvailable) == 0x000440, "Member 'UWBP_DailyChallengeItem_C::ResetAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, IsCompleted) == 0x000441, "Member 'UWBP_DailyChallengeItem_C::IsCompleted' has a wrong offset!");
static_assert(offsetof(UWBP_DailyChallengeItem_C, In_Time) == 0x000444, "Member 'UWBP_DailyChallengeItem_C::In_Time' has a wrong offset!");

}

