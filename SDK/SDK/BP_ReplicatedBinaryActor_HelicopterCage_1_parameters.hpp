#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedBinaryActor_HelicopterCage_1

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Enum_HelicopterCageStates_structs.hpp"


namespace SDK::Params
{

// Function BP_ReplicatedBinaryActor_HelicopterCage_1.BP_ReplicatedBinaryActor_HelicopterCage_1_C.ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1
// 0x0098 (0x0098 - 0x0000)
struct BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_OldState;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewState;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1");
static_assert(sizeof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1) == 0x000098, "Wrong size on BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, EntryPoint) == 0x000000, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_struct_Variable) == 0x000008, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_delegate_Variable) == 0x000018, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_struct_Variable_1) == 0x000030, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_struct_Variable_2) == 0x000058, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, K2Node_Event_OldState) == 0x00007C, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, K2Node_Event_NewState) == 0x000080, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, K2Node_Event_bDoCosmetics) == 0x000084, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, K2Node_SwitchInteger_CmpSuccess) == 0x000085, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, CallFunc_PostEvent_ReturnValue) == 0x000088, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, CallFunc_PostEvent_ReturnValue_1) == 0x00008C, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1, CallFunc_PostEvent_ReturnValue_2) == 0x000090, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_HelicopterCage_1::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_HelicopterCage_1.BP_ReplicatedBinaryActor_HelicopterCage_1_C.OnStateChanged
// 0x000C (0x000C - 0x0000)
struct BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged final
{
public:
	int32                                         OldState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged) == 0x000004, "Wrong alignment on BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged");
static_assert(sizeof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged) == 0x00000C, "Wrong size on BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged, OldState) == 0x000000, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged, NewState) == 0x000004, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged, bDoCosmetics) == 0x000008, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_HelicopterCage_1.BP_ReplicatedBinaryActor_HelicopterCage_1_C.SetStateFunction
// 0x0001 (0x0001 - 0x0000)
struct BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction final
{
public:
	Enum_HelicopterCageStates                     State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction) == 0x000001, "Wrong alignment on BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction");
static_assert(sizeof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction) == 0x000001, "Wrong size on BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction");
static_assert(offsetof(BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction, State_0) == 0x000000, "Member 'BP_ReplicatedBinaryActor_HelicopterCage_1_C_SetStateFunction::State_0' has a wrong offset!");

}

