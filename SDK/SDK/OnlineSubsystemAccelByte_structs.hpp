#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemAccelByte

#include "Basic.hpp"


namespace SDK
{

// Enum OnlineSubsystemAccelByte.EOnlineSessionP2PConnectedAction
// NumValues: 0x0003
enum class EOnlineSessionP2PConnectedAction : uint8
{
	Join                                     = 0,
	Update                                   = 1,
	EOnlineSessionP2PConnectedAction_MAX     = 2,
};

// Enum OnlineSubsystemAccelByte.ETypeOfOnlineAsyncTask
// NumValues: 0x0003
enum class ETypeOfOnlineAsyncTask : uint8
{
	Serial                                   = 0,
	Parallel                                 = 1,
	ETypeOfOnlineAsyncTask_MAX               = 2,
};

// Enum OnlineSubsystemAccelByte.EAccelByteChatRoomType
// NumValues: 0x0006
enum class EAccelByteChatRoomType : uint8
{
	NORMAL                                   = 0,
	PERSONAL                                 = 1,
	PARTY_V2                                 = 2,
	PARTY_V1                                 = 3,
	SESSION_V2                               = 4,
	EAccelByteChatRoomType_MAX               = 5,
};

// Enum OnlineSubsystemAccelByte.EAccelByteLoginType
// NumValues: 0x000E
enum class EAccelByteLoginType : uint8
{
	None                                     = 0,
	DeviceId                                 = 1,
	AccelByte                                = 2,
	Xbox                                     = 3,
	PS4                                      = 4,
	PS5                                      = 5,
	Launcher                                 = 6,
	Steam                                    = 7,
	EOS                                      = 8,
	ExchangeCode                             = 9,
	PublisherCode                            = 10,
	RefreshToken                             = 11,
	CachedToken                              = 12,
	EAccelByteLoginType_MAX                  = 13,
};

// ScriptStruct OnlineSubsystemAccelByte.AccelByteUniqueIdComposite
// 0x0030 (0x0030 - 0x0000)
struct FAccelByteUniqueIdComposite final
{
public:
	class FString                                 Id;                                                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlatformType;                                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlatformId;                                        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAccelByteUniqueIdComposite) == 0x000008, "Wrong alignment on FAccelByteUniqueIdComposite");
static_assert(sizeof(FAccelByteUniqueIdComposite) == 0x000030, "Wrong size on FAccelByteUniqueIdComposite");
static_assert(offsetof(FAccelByteUniqueIdComposite, Id) == 0x000000, "Member 'FAccelByteUniqueIdComposite::Id' has a wrong offset!");
static_assert(offsetof(FAccelByteUniqueIdComposite, PlatformType) == 0x000010, "Member 'FAccelByteUniqueIdComposite::PlatformType' has a wrong offset!");
static_assert(offsetof(FAccelByteUniqueIdComposite, PlatformId) == 0x000020, "Member 'FAccelByteUniqueIdComposite::PlatformId' has a wrong offset!");

}

