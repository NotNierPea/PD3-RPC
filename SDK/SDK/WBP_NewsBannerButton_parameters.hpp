#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NewsBannerButton

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.ExecuteUbergraph_WBP_NewsBannerButton
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USBZCarouselWidget* CarouselWidget, int32 CurrentPageIndex)> K2Node_CreateDelegate_OutputDelegate; // 0x0024(0x0014)(ZeroConstructor, NoDestructor)
	class USBZCarouselWidget*                     K2Node_CustomEvent_CarouselWidget;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentPageIndex;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZNewsDataUIEntry                    CallFunc_Array_Get_Item;                           // 0x0048(0x0070)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InEnable;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton) == 0x000008, "Wrong alignment on WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton");
static_assert(sizeof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton) == 0x0000D8, "Wrong size on WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, EntryPoint) == 0x000000, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_GetUIManager_ReturnValue) == 0x000008, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_Conv_StringToName_ReturnValue) == 0x000014, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_IsEmpty_ReturnValue_1) == 0x000020, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_CustomEvent_CarouselWidget) == 0x000038, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_CustomEvent_CarouselWidget' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_CustomEvent_CurrentPageIndex) == 0x000040, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_CustomEvent_CurrentPageIndex' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B8, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_Event_IsDesignTime) == 0x0000B9, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C8, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_CustomEvent_InEnable) == 0x0000D0, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_CustomEvent_InEnable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton, K2Node_Event_bInHasFocus) == 0x0000D1, "Member 'WBP_NewsBannerButton_C_ExecuteUbergraph_WBP_NewsBannerButton::K2Node_Event_bInHasFocus' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.ButtonFocusChanging
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBannerButton_C_ButtonFocusChanging final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_ButtonFocusChanging) == 0x000001, "Wrong alignment on WBP_NewsBannerButton_C_ButtonFocusChanging");
static_assert(sizeof(WBP_NewsBannerButton_C_ButtonFocusChanging) == 0x000001, "Wrong size on WBP_NewsBannerButton_C_ButtonFocusChanging");
static_assert(offsetof(WBP_NewsBannerButton_C_ButtonFocusChanging, bInHasFocus) == 0x000000, "Member 'WBP_NewsBannerButton_C_ButtonFocusChanging::bInHasFocus' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.SetCarouselScrollingEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBannerButton_C_SetCarouselScrollingEnabled final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_SetCarouselScrollingEnabled) == 0x000001, "Wrong alignment on WBP_NewsBannerButton_C_SetCarouselScrollingEnabled");
static_assert(sizeof(WBP_NewsBannerButton_C_SetCarouselScrollingEnabled) == 0x000001, "Wrong size on WBP_NewsBannerButton_C_SetCarouselScrollingEnabled");
static_assert(offsetof(WBP_NewsBannerButton_C_SetCarouselScrollingEnabled, InEnable) == 0x000000, "Member 'WBP_NewsBannerButton_C_SetCarouselScrollingEnabled::InEnable' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBannerButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NewsBannerButton_C_PreConstruct");
static_assert(sizeof(WBP_NewsBannerButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_NewsBannerButton_C_PreConstruct");
static_assert(offsetof(WBP_NewsBannerButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NewsBannerButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.OnPageChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_NewsBannerButton_C_OnPageChanged final
{
public:
	class USBZCarouselWidget*                     CarouselWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPageIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBannerButton_C_OnPageChanged) == 0x000008, "Wrong alignment on WBP_NewsBannerButton_C_OnPageChanged");
static_assert(sizeof(WBP_NewsBannerButton_C_OnPageChanged) == 0x000010, "Wrong size on WBP_NewsBannerButton_C_OnPageChanged");
static_assert(offsetof(WBP_NewsBannerButton_C_OnPageChanged, CarouselWidget) == 0x000000, "Member 'WBP_NewsBannerButton_C_OnPageChanged::CarouselWidget' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_OnPageChanged, CurrentPageIndex) == 0x000008, "Member 'WBP_NewsBannerButton_C_OnPageChanged::CurrentPageIndex' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.AddItem
// 0x0050 (0x0050 - 0x0000)
struct WBP_NewsBannerButton_C_AddItem final
{
public:
	TSoftObjectPtr<class UPaperSprite>            InNewsBannerSprite;                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NewsItem_C*                        CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBannerButton_C_AddItem) == 0x000008, "Wrong alignment on WBP_NewsBannerButton_C_AddItem");
static_assert(sizeof(WBP_NewsBannerButton_C_AddItem) == 0x000050, "Wrong size on WBP_NewsBannerButton_C_AddItem");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, InNewsBannerSprite) == 0x000000, "Member 'WBP_NewsBannerButton_C_AddItem::InNewsBannerSprite' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, Temp_byte_Variable) == 0x000030, "Member 'WBP_NewsBannerButton_C_AddItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, Temp_byte_Variable_1) == 0x000031, "Member 'WBP_NewsBannerButton_C_AddItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_NewsBannerButton_C_AddItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'WBP_NewsBannerButton_C_AddItem::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_NewsBannerButton_C_AddItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_NewsBannerButton_C_AddItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, Temp_bool_Variable) == 0x00004D, "Member 'WBP_NewsBannerButton_C_AddItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_AddItem, K2Node_Select_Default) == 0x00004E, "Member 'WBP_NewsBannerButton_C_AddItem::K2Node_Select_Default' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.OnFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBannerButton_C_OnFocusedChanged final
{
public:
	bool                                          InFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_OnFocusedChanged) == 0x000001, "Wrong alignment on WBP_NewsBannerButton_C_OnFocusedChanged");
static_assert(sizeof(WBP_NewsBannerButton_C_OnFocusedChanged) == 0x000001, "Wrong size on WBP_NewsBannerButton_C_OnFocusedChanged");
static_assert(offsetof(WBP_NewsBannerButton_C_OnFocusedChanged, InFocused) == 0x000000, "Member 'WBP_NewsBannerButton_C_OnFocusedChanged::InFocused' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.OnHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_NewsBannerButton_C_OnHoveredChanged final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NewsBannerButton_C_OnHoveredChanged) == 0x000001, "Wrong alignment on WBP_NewsBannerButton_C_OnHoveredChanged");
static_assert(sizeof(WBP_NewsBannerButton_C_OnHoveredChanged) == 0x000001, "Wrong size on WBP_NewsBannerButton_C_OnHoveredChanged");
static_assert(offsetof(WBP_NewsBannerButton_C_OnHoveredChanged, InHovered) == 0x000000, "Member 'WBP_NewsBannerButton_C_OnHoveredChanged::InHovered' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.InitializeNewsEntries
// 0x0140 (0x0140 - 0x0000)
struct WBP_NewsBannerButton_C_InitializeNewsEntries final
{
public:
	TArray<struct FSBZNewsDataUIEntry>            InNewsEntries;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_PageCycler_C*                      PageCycler;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZNewsDataUIEntry                    CallFunc_Array_Get_Item;                           // 0x0028(0x0070)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPaperSprite>            CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00A0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	struct FSBZNewsDataUIEntry                    CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0070)()
};
static_assert(alignof(WBP_NewsBannerButton_C_InitializeNewsEntries) == 0x000008, "Wrong alignment on WBP_NewsBannerButton_C_InitializeNewsEntries");
static_assert(sizeof(WBP_NewsBannerButton_C_InitializeNewsEntries) == 0x000140, "Wrong size on WBP_NewsBannerButton_C_InitializeNewsEntries");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, InNewsEntries) == 0x000000, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::InNewsEntries' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, PageCycler) == 0x000010, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::PageCycler' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000A0, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsBannerButton_C_InitializeNewsEntries, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WBP_NewsBannerButton_C_InitializeNewsEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_NewsBannerButton.WBP_NewsBannerButton_C.NavigateToPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_NewsBannerButton_C_NavigateToPage final
{
public:
	int32                                         InNavigateIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsBannerButton_C_NavigateToPage) == 0x000004, "Wrong alignment on WBP_NewsBannerButton_C_NavigateToPage");
static_assert(sizeof(WBP_NewsBannerButton_C_NavigateToPage) == 0x000004, "Wrong size on WBP_NewsBannerButton_C_NavigateToPage");
static_assert(offsetof(WBP_NewsBannerButton_C_NavigateToPage, InNavigateIndex) == 0x000000, "Member 'WBP_NewsBannerButton_C_NavigateToPage::InNavigateIndex' has a wrong offset!");

}

