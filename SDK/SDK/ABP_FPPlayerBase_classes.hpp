#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_FPPlayerBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_FPPlayerBase.ABP_FPPlayerBase_C
// 0x33F0 (0x38F0 - 0x0500)
class UABP_FPPlayerBase_C final : public USBZPlayerAnimationFPP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0508(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0550(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0588(0x0038)()
	struct FSBZAnimNode_ApplyAdditiveLayeredOneBone SBZAnimGraphNode_ApplyAdditiveLayeredOneBone_1;  // 0x05C0(0x0100)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x06C0(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0770(0x0100)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0870(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0920(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x09F0(0x0100)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0AF0(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0BC0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x0C08(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0CC8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0D98(0x0100)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0E98(0x0100)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0F98(0x00C0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1058(0x0100)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1158(0x00D0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1228(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x12D8(0x00D0)()
	struct FSBZAnimNode_ApplyAdditiveLayeredOneBone SBZAnimGraphNode_ApplyAdditiveLayeredOneBone;    // 0x13A8(0x0100)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x14A8(0x0100)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x15A8(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1678(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x16C0(0x00C0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x1780(0x0240)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x19C0(0x0030)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x19F0(0x0030)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1A20(0x0240)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1C60(0x0060)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1CC0(0x0138)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1DF8(0x0138)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x1F30(0x00E8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2018(0x0168)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2180(0x0040)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x21C0(0x0060)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2220(0x0040)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x2260(0x00D8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2338(0x0060)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization_1;                   // 0x2398(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2418(0x0138)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2550(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x2590(0x00E8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x2678(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2760(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2830(0x00D0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2900(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x2940(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2A28(0x00D0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2AF8(0x0138)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x2C30(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x2CB0(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2D98(0x00D0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2E68(0x00E8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x2F50(0x00D8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x3028(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3110(0x00D0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x31E0(0x00E8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x32C8(0x00D8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x33A0(0x0380)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3720(0x0168)()
	struct FSBZWallReactionData                   __CustomProperty_WallReactionData_813E02344D30983C0017D8A775E90102; // 0x3888(0x0040)(NoDestructor)
	struct FSBZTankingData                        __CustomProperty_TankingData_813E02344D30983C0017D8A775E90102; // 0x38C8(0x0024)(NoDestructor)

public:
	void ExecuteUbergraph_ABP_FPPlayerBase(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_FPPlayerBase_C">();
	}
	static class UABP_FPPlayerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_FPPlayerBase_C>();
	}
};
static_assert(alignof(UABP_FPPlayerBase_C) == 0x000010, "Wrong alignment on UABP_FPPlayerBase_C");
static_assert(sizeof(UABP_FPPlayerBase_C) == 0x0038F0, "Wrong size on UABP_FPPlayerBase_C");
static_assert(offsetof(UABP_FPPlayerBase_C, UberGraphFrame) == 0x000500, "Member 'UABP_FPPlayerBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Root) == 0x000508, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TransitionResult_1) == 0x000550, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TransitionResult) == 0x000588, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, SBZAnimGraphNode_ApplyAdditiveLayeredOneBone_1) == 0x0005C0, "Member 'UABP_FPPlayerBase_C::SBZAnimGraphNode_ApplyAdditiveLayeredOneBone_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendListByBool_2) == 0x0006C0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000770, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendListByBool_1) == 0x000870, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_10) == 0x000920, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer_4) == 0x0009F0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_9) == 0x000AF0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_StateResult_1) == 0x000BC0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendListByEnum_1) == 0x000C08, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_8) == 0x000CC8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000D98, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000E98, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendListByEnum) == 0x000F98, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001058, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_7) == 0x001158, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendListByBool) == 0x001228, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_6) == 0x0012D8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, SBZAnimGraphNode_ApplyAdditiveLayeredOneBone) == 0x0013A8, "Member 'UABP_FPPlayerBase_C::SBZAnimGraphNode_ApplyAdditiveLayeredOneBone' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_BlendSpacePlayer) == 0x0014A8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_5) == 0x0015A8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_StateResult) == 0x001678, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_StateMachine) == 0x0016C0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TwoBoneIK_1) == 0x001780, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LocalToComponentSpace) == 0x0019C0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ComponentToLocalSpace) == 0x0019F0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TwoBoneIK) == 0x001A20, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Slot_2) == 0x001C60, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ModifyBone_3) == 0x001CC0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ModifyBone_2) == 0x001DF8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LayeredBoneBlend_4) == 0x001F30, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SaveCachedPose_1) == 0x002018, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_UseCachedPose_3) == 0x002180, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Slot_1) == 0x0021C0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_UseCachedPose_2) == 0x002220, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TwoWayBlend_2) == 0x002260, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Slot) == 0x002338, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Inertialization_1) == 0x002398, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Inertialization_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ModifyBone_1) == 0x002418, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_UseCachedPose_1) == 0x002550, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LayeredBoneBlend_3) == 0x002590, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LayeredBoneBlend_2) == 0x002678, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_4) == 0x002760, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_3) == 0x002830, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_UseCachedPose) == 0x002900, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ApplyAdditive_2) == 0x002940, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_2) == 0x002A28, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ModifyBone) == 0x002AF8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_Inertialization) == 0x002C30, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LayeredBoneBlend_1) == 0x002CB0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer_1) == 0x002D98, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ApplyAdditive_1) == 0x002E68, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TwoWayBlend_1) == 0x002F50, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_LayeredBoneBlend) == 0x003028, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SequencePlayer) == 0x003110, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ApplyAdditive) == 0x0031E0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_TwoWayBlend) == 0x0032C8, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_ControlRig) == 0x0033A0, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, AnimGraphNode_SaveCachedPose) == 0x003720, "Member 'UABP_FPPlayerBase_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, __CustomProperty_WallReactionData_813E02344D30983C0017D8A775E90102) == 0x003888, "Member 'UABP_FPPlayerBase_C::__CustomProperty_WallReactionData_813E02344D30983C0017D8A775E90102' has a wrong offset!");
static_assert(offsetof(UABP_FPPlayerBase_C, __CustomProperty_TankingData_813E02344D30983C0017D8A775E90102) == 0x0038C8, "Member 'UABP_FPPlayerBase_C::__CustomProperty_TankingData_813E02344D30983C0017D8A775E90102' has a wrong offset!");

}

