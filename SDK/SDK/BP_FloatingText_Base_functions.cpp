#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloatingText_Base

#include "Basic.hpp"

#include "BP_FloatingText_Base_classes.hpp"
#include "BP_FloatingText_Base_parameters.hpp"


namespace SDK
{

// Function BP_FloatingText_Base.BP_FloatingText_Base_C.ExecuteUbergraph_BP_FloatingText_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FloatingText_Base_C::ExecuteUbergraph_BP_FloatingText_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "ExecuteUbergraph_BP_FloatingText_Base");

	Params::BP_FloatingText_Base_C_ExecuteUbergraph_BP_FloatingText_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FloatingText_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.RunUpdateCycle
// (BlueprintCallable, BlueprintEvent)

void ABP_FloatingText_Base_C::RunUpdateCycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "RunUpdateCycle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.UpdateWidgetScale
// (BlueprintCallable, BlueprintEvent)

void ABP_FloatingText_Base_C::UpdateWidgetScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "UpdateWidgetScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.UpdateWidgetLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_FloatingText_Base_C::UpdateWidgetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "UpdateWidgetLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.ReachedPointOfMaxWidgetScale?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Yes_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FloatingText_Base_C::ReachedPointOfMaxWidgetScale_(bool* Yes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "ReachedPointOfMaxWidgetScale?");

	Params::BP_FloatingText_Base_C_ReachedPointOfMaxWidgetScale_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Yes_ != nullptr)
		*Yes_ = Parms.Yes_;
}


// Function BP_FloatingText_Base.BP_FloatingText_Base_C.CalculateDistanceBasedWidgetScaleModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  WidgetScaleModifier                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FloatingText_Base_C::CalculateDistanceBasedWidgetScaleModifier(float* WidgetScaleModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloatingText_Base_C", "CalculateDistanceBasedWidgetScaleModifier");

	Params::BP_FloatingText_Base_C_CalculateDistanceBasedWidgetScaleModifier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WidgetScaleModifier != nullptr)
		*WidgetScaleModifier = Parms.WidgetScaleModifier;
}

}

