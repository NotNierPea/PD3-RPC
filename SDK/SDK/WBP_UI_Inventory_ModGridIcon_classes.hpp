#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_ModGridIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_Inventory_ModGridIcon.WBP_UI_Inventory_ModGridIcon_C
// 0x0028 (0x02B8 - 0x0290)
class UWBP_UI_Inventory_ModGridIcon_C final : public USBZWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               IconOverlay;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_78;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TextOverlay;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryBaseData_Icon_C*          WBP_InventoryBaseData_Icon;                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon(int32 EntryPoint);
	void SetAndDisplayText(const class FText& InText);
	void SetAndDisplayIcon(const class USBZInventoryBaseData* InItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_Inventory_ModGridIcon_C">();
	}
	static class UWBP_UI_Inventory_ModGridIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_Inventory_ModGridIcon_C>();
	}
};
static_assert(alignof(UWBP_UI_Inventory_ModGridIcon_C) == 0x000008, "Wrong alignment on UWBP_UI_Inventory_ModGridIcon_C");
static_assert(sizeof(UWBP_UI_Inventory_ModGridIcon_C) == 0x0002B8, "Wrong size on UWBP_UI_Inventory_ModGridIcon_C");
static_assert(offsetof(UWBP_UI_Inventory_ModGridIcon_C, UberGraphFrame) == 0x000290, "Member 'UWBP_UI_Inventory_ModGridIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Inventory_ModGridIcon_C, IconOverlay) == 0x000298, "Member 'UWBP_UI_Inventory_ModGridIcon_C::IconOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Inventory_ModGridIcon_C, TextBlock_78) == 0x0002A0, "Member 'UWBP_UI_Inventory_ModGridIcon_C::TextBlock_78' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Inventory_ModGridIcon_C, TextOverlay) == 0x0002A8, "Member 'UWBP_UI_Inventory_ModGridIcon_C::TextOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_UI_Inventory_ModGridIcon_C, WBP_InventoryBaseData_Icon) == 0x0002B0, "Member 'UWBP_UI_Inventory_ModGridIcon_C::WBP_InventoryBaseData_Icon' has a wrong offset!");

}

