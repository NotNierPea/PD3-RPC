#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenge_PanelButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.ExecuteUbergraph_WBP_UI_Challenge_PanelButton
// 0x0138 (0x0138 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FLinearColor                           CallFunc_GetGlobalColor_ReturnValue;               // 0x0030(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStretch                                      Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStretch                                      Temp_byte_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0014)(ZeroConstructor, NoDestructor)
	struct FSBZChallengeData                      K2Node_Event_InChallengeData;                      // 0x0078(0x00A8)(ConstParm)
	EStretch                                      K2Node_Select_Default;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInfamyReward_OutIsHasInfamyRewardPoints; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton) == 0x000138, "Wrong size on WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_GetGlobalColor_ReturnValue) == 0x000030, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_GetGlobalColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, Temp_byte_Variable) == 0x000040, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, Temp_byte_Variable_1) == 0x000041, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, Temp_bool_Variable) == 0x000042, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_Event_IsDesignTime) == 0x000043, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, Temp_object_Variable) == 0x000048, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_CustomEvent_Loaded) == 0x000050, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_DynamicCast_AsPaper_Sprite) == 0x000058, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_Event_InChallengeData) == 0x000078, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_Event_InChallengeData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_Select_Default) == 0x000120, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000121, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_Divide_IntInt_ReturnValue) == 0x000124, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_Min_ReturnValue) == 0x000128, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00012C, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_IsInfamyReward_OutIsHasInfamyRewardPoints) == 0x000130, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_IsInfamyReward_OutIsHasInfamyRewardPoints' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000131, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton, K2Node_SwitchName_CmpSuccess) == 0x000132, "Member 'WBP_UI_Challenge_PanelButton_C_ExecuteUbergraph_WBP_UI_Challenge_PanelButton::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.OnChallengeDataInititalized
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized final
{
public:
	struct FSBZChallengeData                      InChallengeData;                                   // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized) == 0x0000A8, "Wrong size on WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized, InChallengeData) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_OnChallengeDataInititalized::InChallengeData' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Challenge_PanelButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.OnLoaded_575B882949292613E393E8B9DEA74294
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294) == 0x000008, "Wrong size on WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294, Loaded) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_OnLoaded_575B882949292613E393E8B9DEA74294::Loaded' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetChallengeName
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetChallengeName final
{
public:
	struct FSBZChallengeData                      Challenge;                                         // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetChallengeNameText_ReturnValue;         // 0x00B0(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetChallengeName) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetChallengeName");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetChallengeName) == 0x0000C8, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetChallengeName");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeName, Challenge) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeName::Challenge' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeName, CallFunc_GetChallengeManager_ReturnValue) == 0x0000A8, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeName::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeName, CallFunc_GetChallengeNameText_ReturnValue) == 0x0000B0, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeName::CallFunc_GetChallengeNameText_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetChallengeDescription
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetChallengeDescription final
{
public:
	struct FSBZChallengeData                      Challenge;                                         // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetChallengeDescriptionText_ReturnValue;  // 0x00B0(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetChallengeDescription) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetChallengeDescription");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetChallengeDescription) == 0x0000C8, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetChallengeDescription");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeDescription, Challenge) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeDescription::Challenge' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeDescription, CallFunc_GetChallengeManager_ReturnValue) == 0x0000A8, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeDescription::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetChallengeDescription, CallFunc_GetChallengeDescriptionText_ReturnValue) == 0x0000B0, "Member 'WBP_UI_Challenge_PanelButton_C_SetChallengeDescription::CallFunc_GetChallengeDescriptionText_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.UpdateVisualsBasedOnChallengeStatus
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus final
{
public:
	EChallengeStatusEnum                          InChallengeStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus) == 0x000058, "Wrong size on WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus, InChallengeStatus) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus::InChallengeStatus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateVisualsBasedOnChallengeStatus::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressBarPercentage
// 0x0014 (0x0014 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalProgress;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage) == 0x000004, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage) == 0x000014, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage, Progress) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage::Progress' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage, TotalProgress) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage::TotalProgress' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00000C, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressBarPercentage::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.ConvertProgressMinMaxToMeters
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters final
{
public:
	int32                                         InMaxValueToUse;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMinValueToUse;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters) == 0x000004, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters) == 0x000008, "Wrong size on WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters, InMaxValueToUse) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters::InMaxValueToUse' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters, InMinValueToUse) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_ConvertProgressMinMaxToMeters::InMinValueToUse' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressMinMax
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetProgressMinMax final
{
public:
	int32                                         InMaxValueToUse;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMinValueToUse;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetProgressMinMax) == 0x000004, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetProgressMinMax");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetProgressMinMax) == 0x000008, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetProgressMinMax");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressMinMax, InMaxValueToUse) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressMinMax::InMaxValueToUse' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressMinMax, InMinValueToUse) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressMinMax::InMinValueToUse' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetProgressText
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetProgressText final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0040(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetProgressText) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetProgressText");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetProgressText) == 0x0000A8, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetProgressText");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressText, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000040, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressText, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetProgressText, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WBP_UI_Challenge_PanelButton_C_SetProgressText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.IsInfamyReward
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_IsInfamyReward final
{
public:
	int32                                         InInfamyRewardPoints;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsHasInfamyRewardPoints;                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_IsInfamyReward) == 0x000004, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_IsInfamyReward");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_IsInfamyReward) == 0x000008, "Wrong size on WBP_UI_Challenge_PanelButton_C_IsInfamyReward");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_IsInfamyReward, InInfamyRewardPoints) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_IsInfamyReward::InInfamyRewardPoints' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_IsInfamyReward, OutIsHasInfamyRewardPoints) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_IsInfamyReward::OutIsHasInfamyRewardPoints' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_IsInfamyReward, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_UI_Challenge_PanelButton_C_IsInfamyReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetInfamyRewardInfo
// 0x0088 (0x0088 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo final
{
public:
	int32                                         InInfamyRewardPoints;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_InfamyRewardPoints;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo) == 0x000088, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, InInfamyRewardPoints) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::InInfamyRewardPoints' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, L_InfamyRewardPoints) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::L_InfamyRewardPoints' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, Temp_bool_Variable) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, Temp_byte_Variable) == 0x000009, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, K2Node_MakeArray_Array) == 0x000058, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, CallFunc_Format_ReturnValue) == 0x000068, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo, K2Node_Select_Default) == 0x000080, "Member 'WBP_UI_Challenge_PanelButton_C_SetInfamyRewardInfo::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetRewardIcon
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetRewardIcon final
{
public:
	class UPaperSprite*                           InIconSprite;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetRewardIcon) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetRewardIcon");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetRewardIcon) == 0x000018, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetRewardIcon");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardIcon, InIconSprite) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardIcon::InIconSprite' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardIcon, CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardIcon::CallFunc_SetBrushFromAtlasInterface_AtlasRegion_CastInput' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetGoldRewardInfo
// 0x0070 (0x0070 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo final
{
public:
	int32                                         InQuantity;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo) == 0x000070, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo, InQuantity) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo::InQuantity' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo, K2Node_MakeArray_Array) == 0x000048, "Member 'WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo, CallFunc_Format_ReturnValue) == 0x000058, "Member 'WBP_UI_Challenge_PanelButton_C_SetGoldRewardInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetCreditsRewardInfo
// 0x0070 (0x0070 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo final
{
public:
	int32                                         InQuantity;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo) == 0x000070, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo, InQuantity) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo::InQuantity' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo, K2Node_MakeArray_Array) == 0x000048, "Member 'WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo, CallFunc_Format_ReturnValue) == 0x000058, "Member 'WBP_UI_Challenge_PanelButton_C_SetCreditsRewardInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetItemRewardInfo
// 0x0078 (0x0078 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo final
{
public:
	class UPaperSprite*                           InIconSprite;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemQuantity;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo) == 0x000078, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo, InIconSprite) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo::InIconSprite' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo, InItemQuantity) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo::InItemQuantity' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo, CallFunc_Format_ReturnValue) == 0x000060, "Member 'WBP_UI_Challenge_PanelButton_C_SetItemRewardInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.SetRewardValueVisibility
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility final
{
public:
	int32                                         InItemQuantity;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility) == 0x000004, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility) == 0x00000C, "Wrong size on WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, InItemQuantity) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::InItemQuantity' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, Temp_byte_Variable) == 0x000006, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility, K2Node_Select_Default) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_SetRewardValueVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_Challenge_PanelButton.WBP_UI_Challenge_PanelButton_C.UpdateRewardIconDimensions
// 0x0030 (0x0030 - 0x0000)
struct WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions final
{
public:
	class UPaperSprite*                           Sprite;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPaperSpriteSourceSize_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions) == 0x000008, "Wrong alignment on WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions");
static_assert(sizeof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions) == 0x000030, "Wrong size on WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, Sprite) == 0x000000, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::Sprite' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_GetPaperSpriteSourceSize_ReturnValue) == 0x000008, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_GetPaperSpriteSourceSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_X_1) == 0x00001C, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WBP_UI_Challenge_PanelButton_C_UpdateRewardIconDimensions::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

