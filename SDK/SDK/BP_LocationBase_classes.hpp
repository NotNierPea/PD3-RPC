#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LocationBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_LocationBase_DefaultState_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LocationBase.BP_LocationBase_C
// 0x0078 (0x0368 - 0x02F0)
class ABP_LocationBase_C : public ASBZReplicatedIntStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutlineGhost;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   staticMesh;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractableObject;                             // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutlineObject;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractableGhost;                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   staticMesh_ghost;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              onObjectPlaced;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              onObjectPickedUp;                                  // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UStaticMesh*                            mesh;                                              // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         markerID;                                          // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          destroyOnPickUp;                                   // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_LocationBase_DefaultState                startState;                                        // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         markerOffset;                                      // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LocationBase(int32 EntryPoint);
	void BndEvt__BP_LocationBase_SBZInteractableGhost_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__BP_LocationBase_SBZInteractableObject_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void OnStateChanged(int32 OldState, int32 NewState, bool bDoCosmetics);
	void UserConstructionScript();
	void setGhostVisible(bool addMarker_0);
	void setInvisible();
	void setObjectVisible();
	void setObjectRemovable(bool addMarker_0);
	void setMeshVisibility(bool visible, bool ghost);
	void addMarker(const class USBZMarkerDataAsset* MarkerDataAsset);
	void setStateInteractable(Enum_LocationBase_DefaultState state);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LocationBase_C">();
	}
	static class ABP_LocationBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LocationBase_C>();
	}
};
static_assert(alignof(ABP_LocationBase_C) == 0x000008, "Wrong alignment on ABP_LocationBase_C");
static_assert(sizeof(ABP_LocationBase_C) == 0x000368, "Wrong size on ABP_LocationBase_C");
static_assert(offsetof(ABP_LocationBase_C, UberGraphFrame) == 0x0002F0, "Member 'ABP_LocationBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, Ak) == 0x0002F8, "Member 'ABP_LocationBase_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, SBZOutlineGhost) == 0x000300, "Member 'ABP_LocationBase_C::SBZOutlineGhost' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, staticMesh) == 0x000308, "Member 'ABP_LocationBase_C::staticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, SBZInteractableObject) == 0x000310, "Member 'ABP_LocationBase_C::SBZInteractableObject' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, SBZOutlineObject) == 0x000318, "Member 'ABP_LocationBase_C::SBZOutlineObject' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, SBZInteractableGhost) == 0x000320, "Member 'ABP_LocationBase_C::SBZInteractableGhost' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, staticMesh_ghost) == 0x000328, "Member 'ABP_LocationBase_C::staticMesh_ghost' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, onObjectPlaced) == 0x000330, "Member 'ABP_LocationBase_C::onObjectPlaced' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, onObjectPickedUp) == 0x000340, "Member 'ABP_LocationBase_C::onObjectPickedUp' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, mesh) == 0x000350, "Member 'ABP_LocationBase_C::mesh' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, markerID) == 0x000358, "Member 'ABP_LocationBase_C::markerID' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, destroyOnPickUp) == 0x00035C, "Member 'ABP_LocationBase_C::destroyOnPickUp' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, startState) == 0x00035D, "Member 'ABP_LocationBase_C::startState' has a wrong offset!");
static_assert(offsetof(ABP_LocationBase_C, markerOffset) == 0x000360, "Member 'ABP_LocationBase_C::markerOffset' has a wrong offset!");

}

