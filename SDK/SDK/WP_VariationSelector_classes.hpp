#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WP_VariationSelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WeatherType_structs.hpp"
#include "UMG_classes.hpp"
#include "TimeType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WP_VariationSelector.WP_VariationSelector_C
// 0x0080 (0x0310 - 0x0290)
class UWP_VariationSelector_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                CollapseButton;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CollapseButtonTextBlock;                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DebugText;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainPanel;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RandomizeText;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              RndCheckbox;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                TimeNextButton;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimeText;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WAndTimeSelectors;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                WeatherNextButton;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WeatherText;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<EWeatherType>                          AvailableWeather;                                  // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMoreHeistAtmospherePersistent_C*       MoreHeistAtmospherePersistent;                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsCollapsed;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WP_VariationSelector(int32 EntryPoint);
	void BndEvt__WP_VariationSelector_CollapseButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void BndEvt__WP_VariationSelector_TimeNextButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WP_VariationSelector_WeatherNextButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void Destruct();
	void Set_Available_Weather(TArray<EWeatherType>& NotAllowed);
	void Initialize(const class FString& HeistName);
	void SetWeather(EWeatherType Weather);
	void SetTime(ETimeType Time);
	void Get_Next_Available_Time(ETimeType* TimeType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WP_VariationSelector_C">();
	}
	static class UWP_VariationSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWP_VariationSelector_C>();
	}
};
static_assert(alignof(UWP_VariationSelector_C) == 0x000008, "Wrong alignment on UWP_VariationSelector_C");
static_assert(sizeof(UWP_VariationSelector_C) == 0x000310, "Wrong size on UWP_VariationSelector_C");
static_assert(offsetof(UWP_VariationSelector_C, UberGraphFrame) == 0x000290, "Member 'UWP_VariationSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, CollapseButton) == 0x000298, "Member 'UWP_VariationSelector_C::CollapseButton' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, CollapseButtonTextBlock) == 0x0002A0, "Member 'UWP_VariationSelector_C::CollapseButtonTextBlock' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, DebugText) == 0x0002A8, "Member 'UWP_VariationSelector_C::DebugText' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, MainPanel) == 0x0002B0, "Member 'UWP_VariationSelector_C::MainPanel' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, RandomizeText) == 0x0002B8, "Member 'UWP_VariationSelector_C::RandomizeText' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, RndCheckbox) == 0x0002C0, "Member 'UWP_VariationSelector_C::RndCheckbox' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, TimeNextButton) == 0x0002C8, "Member 'UWP_VariationSelector_C::TimeNextButton' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, TimeText) == 0x0002D0, "Member 'UWP_VariationSelector_C::TimeText' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, WAndTimeSelectors) == 0x0002D8, "Member 'UWP_VariationSelector_C::WAndTimeSelectors' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, WeatherNextButton) == 0x0002E0, "Member 'UWP_VariationSelector_C::WeatherNextButton' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, WeatherText) == 0x0002E8, "Member 'UWP_VariationSelector_C::WeatherText' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, AvailableWeather) == 0x0002F0, "Member 'UWP_VariationSelector_C::AvailableWeather' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, MoreHeistAtmospherePersistent) == 0x000300, "Member 'UWP_VariationSelector_C::MoreHeistAtmospherePersistent' has a wrong offset!");
static_assert(offsetof(UWP_VariationSelector_C, IsCollapsed) == 0x000308, "Member 'UWP_VariationSelector_C::IsCollapsed' has a wrong offset!");

}

