#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Challenges_Screen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.ExecuteUbergraph_WBP_UI_Challenges_Screen
// 0x0118 (0x0118 - 0x0000)
struct WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_2;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_3;      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_NewIndex_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_NewIndex;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZChallengeCategoryData*              CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_InNavigateIndex;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0014)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_3;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_2;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button_1;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled_1;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuButton*                         K2Node_ComponentBoundEvent_Button;                 // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsEnabled;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen) == 0x000118, "Wrong size on WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, EntryPoint) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_struct_Variable) == 0x000004, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_bool_Variable) == 0x000020, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_struct_Variable_1) == 0x000024, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_struct_Variable_2) == 0x000034, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000044, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000045, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_struct_Variable_3) == 0x000048, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue_2) == 0x000058, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, Temp_bool_Variable_1) == 0x000059, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_IsValidTimerHandle_ReturnValue_3) == 0x00005A, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_IsValidTimerHandle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_NewIndex_1) == 0x00005C, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_NewIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_NewIndex) == 0x000060, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_SwitchInteger_CmpSuccess) == 0x000070, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_InNavigateIndex) == 0x000074, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_InNavigateIndex' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_Button_3) == 0x0000A0, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_Button_2) == 0x0000C0, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000C8, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000D0, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_Button_1) == 0x0000D8, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_bIsEnabled_1) == 0x0000E0, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_bIsEnabled_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_Button) == 0x0000E8, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_ComponentBoundEvent_bIsEnabled) == 0x0000F0, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_ComponentBoundEvent_bIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_Select_Default) == 0x0000F4, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen, K2Node_Select_Default_1) == 0x000104, "Member 'WBP_UI_Challenges_Screen_C_ExecuteUbergraph_WBP_UI_Challenges_Screen::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_16_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature, Button) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature, bIsEnabled_0) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_15_OnMenuButtonStateChanged__DelegateSignature::bIsEnabled_0' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavRight_B_K2Node_ComponentBoundEvent_14_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature final
{
public:
	class USBZMenuButton*                         Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature, Button) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_NavLeft_B_K2Node_ComponentBoundEvent_13_OnMenuButtonSelected__DelegateSignature::Button' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature final
{
public:
	int32                                         InNavigateIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature) == 0x000004, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature) == 0x000004, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature, InNavigateIndex) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_WBP_PageCycler_K2Node_ComponentBoundEvent_8_NavigateToIndex__DelegateSignature::InNavigateIndex' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature, NewIndex) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_FilterNavBar_K2Node_ComponentBoundEvent_5_OnIndexChanged__DelegateSignature::NewIndex' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature, NewIndex) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_BndEvt__WBP_UI_Challenges_Screen_TypeNavBar_K2Node_ComponentBoundEvent_2_OnIndexChanged__DelegateSignature::NewIndex' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.GetCurrentStatusFilter
// 0x002C (0x002C - 0x0000)
struct WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter final
{
public:
	EChallengeStatusEnum                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter) == 0x000004, "Wrong alignment on WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter) == 0x00002C, "Wrong size on WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, NewParam) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, Temp_int_Variable) == 0x000004, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, Temp_int_Variable_1) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000016, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_MakeLiteralInt_ReturnValue) == 0x00001C, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Set_Contains_ReturnValue) == 0x000021, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_Set_Length_ReturnValue) == 0x000024, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_UI_Challenges_Screen_C_GetCurrentStatusFilter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.UpdatePageCycler
// 0x0014 (0x0014 - 0x0000)
struct WBP_UI_Challenges_Screen_C_UpdatePageCycler final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_UpdatePageCycler) == 0x000004, "Wrong alignment on WBP_UI_Challenges_Screen_C_UpdatePageCycler");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_UpdatePageCycler) == 0x000014, "Wrong size on WBP_UI_Challenges_Screen_C_UpdatePageCycler");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_UpdatePageCycler, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_UpdatePageCycler::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_UpdatePageCycler, Temp_int_Variable) == 0x000004, "Member 'WBP_UI_Challenges_Screen_C_UpdatePageCycler::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_UpdatePageCycler, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_UpdatePageCycler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_UpdatePageCycler, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'WBP_UI_Challenges_Screen_C_UpdatePageCycler::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_UpdatePageCycler, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_UI_Challenges_Screen_C_UpdatePageCycler::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.SetCategories
// 0x0040 (0x0040 - 0x0000)
struct WBP_UI_Challenges_Screen_C_SetCategories final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USBZChallengeCategoryData*>      CallFunc_GetChallengeCategoryData_OutCategoryList; // 0x0010(0x0010)(ReferenceParm)
	class USBZChallengeCategoryData*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CategoryHasChallenges_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_SetCategories) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_SetCategories");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_SetCategories) == 0x000040, "Wrong size on WBP_UI_Challenges_Screen_C_SetCategories");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_GetChallengeCategoryData_OutCategoryList) == 0x000010, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_GetChallengeCategoryData_OutCategoryList' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_CategoryHasChallenges_ReturnValue) == 0x00002C, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_CategoryHasChallenges_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Array_Add_ReturnValue_1) == 0x000030, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_SetCategories, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_UI_Challenges_Screen_C_SetCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.NavRight
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Challenges_Screen_C_NavRight final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_NavRight) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_NavRight");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_NavRight) == 0x000010, "Wrong size on WBP_UI_Challenges_Screen_C_NavRight");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_NavRight, Navigation_0) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_NavRight::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_NavRight, ReturnValue) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_NavRight::ReturnValue' has a wrong offset!");

// Function WBP_UI_Challenges_Screen.WBP_UI_Challenges_Screen_C.NavLeft
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Challenges_Screen_C_NavLeft final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Challenges_Screen_C_NavLeft) == 0x000008, "Wrong alignment on WBP_UI_Challenges_Screen_C_NavLeft");
static_assert(sizeof(WBP_UI_Challenges_Screen_C_NavLeft) == 0x000010, "Wrong size on WBP_UI_Challenges_Screen_C_NavLeft");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_NavLeft, Navigation_0) == 0x000000, "Member 'WBP_UI_Challenges_Screen_C_NavLeft::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_UI_Challenges_Screen_C_NavLeft, ReturnValue) == 0x000008, "Member 'WBP_UI_Challenges_Screen_C_NavLeft::ReturnValue' has a wrong offset!");

}

