#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_DifficultySelectorWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UI_DifficultySelectorWidget.WBP_UI_DifficultySelectorWidget_C
// 0x0078 (0x03F0 - 0x0378)
class UWBP_UI_DifficultySelectorWidget_C final : public USBZSelectorWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Left;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Right;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Highlight;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LeftArrow;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RightArrow;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Hard;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Normal;                            // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_Overkill;                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RiskLevel_VeryHard;                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ButtonBase;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_DifficultyName;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_MatchmakeHeader;                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ESBZDifficulty                                CurrentDifficulty;                                 // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsNewMenu;                                        // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsConstructed;                                    // 0x03EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_UI_DifficultySelectorWidget(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ButtonHoveredChanged(bool bInIsHovered);
	void ButtonFocusedChanged(bool bInHasFocus);
	void OnSelectedRight();
	void OnSelectedLeft();
	void OnInitialized();
	void BndEvt__WBP_UI_Menus_Options_Selector_Button_Left_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_UI_Menus_Options_Selector_Button_Right_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnSelectionOptionChanged(int32 InCurrentIndex, bool bOverrideReadOnly);
	void UpdateDifficultyVisuals(ESBZDifficulty InDifficulty);
	void GetDifficulty(ESBZDifficulty* NewParam);
	void SetFocusVisuals(bool InIsFocused);
	void SetHoveredVisuals(bool InIsHovered);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UI_DifficultySelectorWidget_C">();
	}
	static class UWBP_UI_DifficultySelectorWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UI_DifficultySelectorWidget_C>();
	}
};
static_assert(alignof(UWBP_UI_DifficultySelectorWidget_C) == 0x000008, "Wrong alignment on UWBP_UI_DifficultySelectorWidget_C");
static_assert(sizeof(UWBP_UI_DifficultySelectorWidget_C) == 0x0003F0, "Wrong size on UWBP_UI_DifficultySelectorWidget_C");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, UberGraphFrame) == 0x000378, "Member 'UWBP_UI_DifficultySelectorWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Button_Left) == 0x000380, "Member 'UWBP_UI_DifficultySelectorWidget_C::Button_Left' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Button_Right) == 0x000388, "Member 'UWBP_UI_DifficultySelectorWidget_C::Button_Right' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_Background) == 0x000390, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_Highlight) == 0x000398, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_Highlight' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_LeftArrow) == 0x0003A0, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_LeftArrow' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_RightArrow) == 0x0003A8, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_RightArrow' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_RiskLevel_Hard) == 0x0003B0, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_RiskLevel_Hard' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_RiskLevel_Normal) == 0x0003B8, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_RiskLevel_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_RiskLevel_Overkill) == 0x0003C0, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_RiskLevel_Overkill' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Image_RiskLevel_VeryHard) == 0x0003C8, "Member 'UWBP_UI_DifficultySelectorWidget_C::Image_RiskLevel_VeryHard' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Overlay_ButtonBase) == 0x0003D0, "Member 'UWBP_UI_DifficultySelectorWidget_C::Overlay_ButtonBase' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, Text_DifficultyName) == 0x0003D8, "Member 'UWBP_UI_DifficultySelectorWidget_C::Text_DifficultyName' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, TextBlock_MatchmakeHeader) == 0x0003E0, "Member 'UWBP_UI_DifficultySelectorWidget_C::TextBlock_MatchmakeHeader' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, CurrentDifficulty) == 0x0003E8, "Member 'UWBP_UI_DifficultySelectorWidget_C::CurrentDifficulty' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, bIsNewMenu) == 0x0003E9, "Member 'UWBP_UI_DifficultySelectorWidget_C::bIsNewMenu' has a wrong offset!");
static_assert(offsetof(UWBP_UI_DifficultySelectorWidget_C, bIsConstructed) == 0x0003EA, "Member 'UWBP_UI_DifficultySelectorWidget_C::bIsConstructed' has a wrong offset!");

}

