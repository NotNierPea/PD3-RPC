#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModPersistentObjectBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ModPersistentObjectBase.ModPersistentObjectBase_C
// 0x0020 (0x0050 - 0x0030)
class UModPersistentObjectBase_C : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 MLVersion;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash)
	class UModLoaderManager_C*                    ModLoaderManager;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ModPersistentObjectBase(int32 EntryPoint);
	void PostInit();
	void Init();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ModPersistentObjectBase_C">();
	}
	static class UModPersistentObjectBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModPersistentObjectBase_C>();
	}
};
static_assert(alignof(UModPersistentObjectBase_C) == 0x000008, "Wrong alignment on UModPersistentObjectBase_C");
static_assert(sizeof(UModPersistentObjectBase_C) == 0x000050, "Wrong size on UModPersistentObjectBase_C");
static_assert(offsetof(UModPersistentObjectBase_C, UberGraphFrame) == 0x000030, "Member 'UModPersistentObjectBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UModPersistentObjectBase_C, MLVersion) == 0x000038, "Member 'UModPersistentObjectBase_C::MLVersion' has a wrong offset!");
static_assert(offsetof(UModPersistentObjectBase_C, ModLoaderManager) == 0x000048, "Member 'UModPersistentObjectBase_C::ModLoaderManager' has a wrong offset!");

}

