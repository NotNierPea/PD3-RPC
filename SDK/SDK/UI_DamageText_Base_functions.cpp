#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DamageText_Base

#include "Basic.hpp"

#include "UI_DamageText_Base_classes.hpp"
#include "UI_DamageText_Base_parameters.hpp"


namespace SDK
{

// Function UI_DamageText_Base.UI_DamageText_Base_C.SetDisplayText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsKillshot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Critical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsArmor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FontScaleOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageText_Base_C::SetDisplayText(const class FText& InText, bool IsKillshot, bool Critical, bool IsArmor, float FontScaleOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageText_Base_C", "SetDisplayText");

	Params::UI_DamageText_Base_C_SetDisplayText Parms{};

	Parms.InText = std::move(InText);
	Parms.IsKillshot = IsKillshot;
	Parms.Critical = Critical;
	Parms.IsArmor = IsArmor;
	Parms.FontScaleOffset = FontScaleOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DamageText_Base.UI_DamageText_Base_C.SetDisplayScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InUserSpecifiedScale                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageText_Base_C::SetDisplayScale(float InUserSpecifiedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageText_Base_C", "SetDisplayScale");

	Params::UI_DamageText_Base_C_SetDisplayScale Parms{};

	Parms.InUserSpecifiedScale = InUserSpecifiedScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DamageText_Base.UI_DamageText_Base_C.GetDisplayScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  UserSpecifiedScale                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageText_Base_C::GetDisplayScale(float* UserSpecifiedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageText_Base_C", "GetDisplayScale");

	Params::UI_DamageText_Base_C_GetDisplayScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserSpecifiedScale != nullptr)
		*UserSpecifiedScale = Parms.UserSpecifiedScale;
}


// Function UI_DamageText_Base.UI_DamageText_Base_C.SetArmorOutline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsArmor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_DamageText_Base_C::SetArmorOutline(class UTextBlock* InputPin, bool IsArmor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageText_Base_C", "SetArmorOutline");

	Params::UI_DamageText_Base_C_SetArmorOutline Parms{};

	Parms.InputPin = InputPin;
	Parms.IsArmor = IsArmor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DamageText_Base.UI_DamageText_Base_C.NewFunction_0
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsKillshot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Critical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FontScaleOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DamageText_Base_C::NewFunction_0(bool IsKillshot, bool Critical, float FontScaleOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageText_Base_C", "NewFunction_0");

	Params::UI_DamageText_Base_C_NewFunction_0 Parms{};

	Parms.IsKillshot = IsKillshot;
	Parms.Critical = Critical;
	Parms.FontScaleOffset = FontScaleOffset;

	UObject::ProcessEvent(Func, &Parms);
}

}

