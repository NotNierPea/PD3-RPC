#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LivingWorld_BoatSpawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LivingWorld_BoatSpawn.BP_LivingWorld_BoatSpawn_C
// 0x0058 (0x0300 - 0x02A8)
class ABP_LivingWorld_BoatSpawn_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh_3;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh_2;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh_1;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MoveBoat_Alpha_D8F65878410320566AA6569A8EBC35A7;   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MoveBoat__Direction_D8F65878410320566AA6569A8EBC35A7; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MoveBoat;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASBZTrafficSpline*                      Spline;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInt;                                         // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlternateStartBoat_;                               // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_LivingWorld_BoatSpawn(int32 EntryPoint);
	void MoveBoat__UpdateFunc();
	void MoveBoat__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LivingWorld_BoatSpawn_C">();
	}
	static class ABP_LivingWorld_BoatSpawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LivingWorld_BoatSpawn_C>();
	}
};
static_assert(alignof(ABP_LivingWorld_BoatSpawn_C) == 0x000008, "Wrong alignment on ABP_LivingWorld_BoatSpawn_C");
static_assert(sizeof(ABP_LivingWorld_BoatSpawn_C) == 0x000300, "Wrong size on ABP_LivingWorld_BoatSpawn_C");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LivingWorld_BoatSpawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, StaticMesh_3) == 0x0002B0, "Member 'ABP_LivingWorld_BoatSpawn_C::StaticMesh_3' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, StaticMesh_2) == 0x0002B8, "Member 'ABP_LivingWorld_BoatSpawn_C::StaticMesh_2' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, StaticMesh_1) == 0x0002C0, "Member 'ABP_LivingWorld_BoatSpawn_C::StaticMesh_1' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, StaticMesh) == 0x0002C8, "Member 'ABP_LivingWorld_BoatSpawn_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_LivingWorld_BoatSpawn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, MoveBoat_Alpha_D8F65878410320566AA6569A8EBC35A7) == 0x0002D8, "Member 'ABP_LivingWorld_BoatSpawn_C::MoveBoat_Alpha_D8F65878410320566AA6569A8EBC35A7' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, MoveBoat__Direction_D8F65878410320566AA6569A8EBC35A7) == 0x0002DC, "Member 'ABP_LivingWorld_BoatSpawn_C::MoveBoat__Direction_D8F65878410320566AA6569A8EBC35A7' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, MoveBoat) == 0x0002E0, "Member 'ABP_LivingWorld_BoatSpawn_C::MoveBoat' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, Spline) == 0x0002E8, "Member 'ABP_LivingWorld_BoatSpawn_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, RandomInt) == 0x0002F0, "Member 'ABP_LivingWorld_BoatSpawn_C::RandomInt' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, PlayRate) == 0x0002F4, "Member 'ABP_LivingWorld_BoatSpawn_C::PlayRate' has a wrong offset!");
static_assert(offsetof(ABP_LivingWorld_BoatSpawn_C, AlternateStartBoat_) == 0x0002F8, "Member 'ABP_LivingWorld_BoatSpawn_C::AlternateStartBoat_' has a wrong offset!");

}

