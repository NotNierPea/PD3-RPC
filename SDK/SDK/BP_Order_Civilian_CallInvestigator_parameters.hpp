#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Order_Civilian_CallInvestigator

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_Order_Civilian_CallInvestigator.BP_Order_Civilian_CallInvestigator_C.ExecuteUbergraph_BP_Order_Civilian_CallInvestigator
// 0x0028 (0x0028 - 0x0000)
struct BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator) == 0x000008, "Wrong alignment on BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator");
static_assert(sizeof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator) == 0x000028, "Wrong size on BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator, EntryPoint) == 0x000000, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator, K2Node_Event_Pawn) == 0x000008, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator, K2Node_DynamicCast_AsAIController) == 0x000018, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecuteUbergraph_BP_Order_Civilian_CallInvestigator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Order_Civilian_CallInvestigator.BP_Order_Civilian_CallInvestigator_C.OnStartedBP
// 0x0008 (0x0008 - 0x0000)
struct BP_Order_Civilian_CallInvestigator_C_OnStartedBP final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Order_Civilian_CallInvestigator_C_OnStartedBP) == 0x000008, "Wrong alignment on BP_Order_Civilian_CallInvestigator_C_OnStartedBP");
static_assert(sizeof(BP_Order_Civilian_CallInvestigator_C_OnStartedBP) == 0x000008, "Wrong size on BP_Order_Civilian_CallInvestigator_C_OnStartedBP");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_OnStartedBP, Pawn) == 0x000000, "Member 'BP_Order_Civilian_CallInvestigator_C_OnStartedBP::Pawn' has a wrong offset!");

// Function BP_Order_Civilian_CallInvestigator.BP_Order_Civilian_CallInvestigator_C.ExecPredicate
// 0x0040 (0x0040 - 0x0000)
struct BP_Order_Civilian_CallInvestigator_C_ExecPredicate final
{
public:
	const class UObject*                          Owner;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZAIController*                       K2Node_DynamicCast_AsSBZAIController;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZStealthBranch                             CallFunc_StealthBranch_OutputPins;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                CallFunc_StealthBranch_ReturnValue;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetCurrentEnemy_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZAISearchManager*                    CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingInvestigationFor_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecPredicate_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate) == 0x000008, "Wrong alignment on BP_Order_Civilian_CallInvestigator_C_ExecPredicate");
static_assert(sizeof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate) == 0x000040, "Wrong size on BP_Order_Civilian_CallInvestigator_C_ExecPredicate");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, Owner) == 0x000000, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::Owner' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, ReturnValue) == 0x000008, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, K2Node_DynamicCast_AsSBZAIController) == 0x000010, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::K2Node_DynamicCast_AsSBZAIController' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_StealthBranch_OutputPins) == 0x000019, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_StealthBranch_OutputPins' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_StealthBranch_ReturnValue) == 0x00001A, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_StealthBranch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_GetCurrentEnemy_ReturnValue) == 0x000020, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_GetCurrentEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_Get_ReturnValue) == 0x000030, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_HasPendingInvestigationFor_ReturnValue) == 0x000038, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_HasPendingInvestigationFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_ExecPredicate_ReturnValue) == 0x000039, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_ExecPredicate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Order_Civilian_CallInvestigator_C_ExecPredicate, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'BP_Order_Civilian_CallInvestigator_C_ExecPredicate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

