#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_NeonTube_Little_Blue

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BPL_NeonTube_Little_Blue.BPL_NeonTube_Little_Blue_C.ExecuteUbergraph_BPL_NeonTube_Little_Blue
// 0x0030 (0x0030 - 0x0000)
struct BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_PoolComponent;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Hits;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bDoCosmetics;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  K2Node_ComponentBoundEvent_DamageContext;          // 0x0018(0x0018)(ConstParm, NoDestructor)
};
static_assert(alignof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue) == 0x000008, "Wrong alignment on BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue");
static_assert(sizeof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue) == 0x000030, "Wrong size on BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue, EntryPoint) == 0x000000, "Member 'BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue, K2Node_ComponentBoundEvent_PoolComponent) == 0x000008, "Member 'BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue::K2Node_ComponentBoundEvent_PoolComponent' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue, K2Node_ComponentBoundEvent_Hits) == 0x000010, "Member 'BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue::K2Node_ComponentBoundEvent_Hits' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue, K2Node_ComponentBoundEvent_bDoCosmetics) == 0x000014, "Member 'BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue::K2Node_ComponentBoundEvent_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue, K2Node_ComponentBoundEvent_DamageContext) == 0x000018, "Member 'BPL_NeonTube_Little_Blue_C_ExecuteUbergraph_BPL_NeonTube_Little_Blue::K2Node_ComponentBoundEvent_DamageContext' has a wrong offset!");

// Function BPL_NeonTube_Little_Blue.BPL_NeonTube_Little_Blue_C.BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature final
{
public:
	class UActorComponent*                        PoolComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hits;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  DamageContext;                                     // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature) == 0x000008, "Wrong alignment on BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(sizeof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature) == 0x000028, "Wrong size on BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature, PoolComponent) == 0x000000, "Member 'BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature::PoolComponent' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature, Hits) == 0x000008, "Member 'BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature::Hits' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature, bDoCosmetics) == 0x00000C, "Member 'BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature, DamageContext) == 0x000010, "Member 'BPL_NeonTube_Little_Blue_C_BndEvt__BP_LGT_ArtCielingLamp_a_02_SBZPropDamage_K2Node_ComponentBoundEvent_0_SBZPropDamageHitsSignature__DelegateSignature::DamageContext' has a wrong offset!");

}

