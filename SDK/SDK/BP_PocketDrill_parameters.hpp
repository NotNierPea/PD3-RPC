#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PocketDrill

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PocketDrill.BP_PocketDrill_C.ExecuteUbergraph_BP_PocketDrill
// 0x0230 (0x0230 - 0x0000)
struct BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreachingEquipmentState                   K2Node_Event_OldState;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreachingEquipmentState                   K2Node_Event_NewState;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x0028(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x00C8(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult_1;  // 0x0164(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZBreachingEquipmentState                   CallFunc_GetCurrentState_ReturnValue;              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZCharacter*                          K2Node_DynamicCast_AsSBZCharacter;                 // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill) == 0x000008, "Wrong alignment on BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill");
static_assert(sizeof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill) == 0x000230, "Wrong size on BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, EntryPoint) == 0x000000, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, Temp_byte_Variable) == 0x000004, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, Temp_byte_Variable_1) == 0x000005, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_Event_OldState) == 0x000006, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_Event_NewState) == 0x000007, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_Event_bDoCosmetics) == 0x000008, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_SwitchEnum_CmpSuccess) == 0x00000B, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, Temp_bool_Variable) == 0x00000C, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_Select_Default) == 0x00000D, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x000028, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_MakeRotator_ReturnValue) == 0x0000B8, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x0000C8, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_MakeRotator_ReturnValue_1) == 0x000158, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_K2_AddRelativeRotation_SweepHitResult_1) == 0x000164, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_K2_AddRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001F4, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_ComponentBoundEvent_Interactable) == 0x0001F8, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_ComponentBoundEvent_Interactor) == 0x000200, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000208, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_GetCurrentState_ReturnValue) == 0x000209, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, CallFunc_GetOwner_ReturnValue) == 0x000210, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_SwitchEnum_CmpSuccess_1) == 0x000218, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_DynamicCast_AsSBZCharacter) == 0x000220, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_DynamicCast_AsSBZCharacter' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'BP_PocketDrill_C_ExecuteUbergraph_BP_PocketDrill::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PocketDrill.BP_PocketDrill_C.BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_PocketDrill_C_BndEvt__BP_PocketDrill_ActivationInteraction_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_PocketDrill.BP_PocketDrill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PocketDrill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketDrill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PocketDrill_C_ReceiveTick");
static_assert(sizeof(BP_PocketDrill_C_ReceiveTick) == 0x000004, "Wrong size on BP_PocketDrill_C_ReceiveTick");
static_assert(offsetof(BP_PocketDrill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PocketDrill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PocketDrill.BP_PocketDrill_C.BP_OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_PocketDrill_C_BP_OnStateChanged final
{
public:
	ESBZBreachingEquipmentState                   OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreachingEquipmentState                   NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PocketDrill_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_PocketDrill_C_BP_OnStateChanged");
static_assert(sizeof(BP_PocketDrill_C_BP_OnStateChanged) == 0x000003, "Wrong size on BP_PocketDrill_C_BP_OnStateChanged");
static_assert(offsetof(BP_PocketDrill_C_BP_OnStateChanged, OldState) == 0x000000, "Member 'BP_PocketDrill_C_BP_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_BP_OnStateChanged, NewState) == 0x000001, "Member 'BP_PocketDrill_C_BP_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_PocketDrill_C_BP_OnStateChanged, bDoCosmetics) == 0x000002, "Member 'BP_PocketDrill_C_BP_OnStateChanged::bDoCosmetics' has a wrong offset!");

}

