#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_Reticle

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_Reticle.WBP_UI_Widget_Reticle_C.ExecuteUbergraph_WBP_UI_Widget_Reticle
// 0x0048 (0x0048 - 0x0000)
struct WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentSpread;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZCrosshairSettings                  K2Node_Event_CrosshairSettings;                    // 0x000C(0x003C)(ConstParm, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle) == 0x000004, "Wrong alignment on WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle");
static_assert(sizeof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle) == 0x000048, "Wrong size on WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle, K2Node_Event_CurrentSpread) == 0x000004, "Member 'WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle::K2Node_Event_CurrentSpread' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle, K2Node_Event_bIsVisible) == 0x000008, "Member 'WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle, K2Node_Event_CrosshairSettings) == 0x00000C, "Member 'WBP_UI_Widget_Reticle_C_ExecuteUbergraph_WBP_UI_Widget_Reticle::K2Node_Event_CrosshairSettings' has a wrong offset!");

// Function WBP_UI_Widget_Reticle.WBP_UI_Widget_Reticle_C.OnCrosshairSettingsChanged
// 0x003C (0x003C - 0x0000)
struct WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged final
{
public:
	struct FSBZCrosshairSettings                  CrosshairSettings;                                 // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged");
static_assert(sizeof(WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged) == 0x00003C, "Wrong size on WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged, CrosshairSettings) == 0x000000, "Member 'WBP_UI_Widget_Reticle_C_OnCrosshairSettingsChanged::CrosshairSettings' has a wrong offset!");

// Function WBP_UI_Widget_Reticle.WBP_UI_Widget_Reticle_C.OnCrossHairVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged) == 0x000001, "Wrong alignment on WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged");
static_assert(sizeof(WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged) == 0x000001, "Wrong size on WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged, bIsVisible) == 0x000000, "Member 'WBP_UI_Widget_Reticle_C_OnCrossHairVisibilityChanged::bIsVisible' has a wrong offset!");

// Function WBP_UI_Widget_Reticle.WBP_UI_Widget_Reticle_C.OnCrossHairScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged final
{
public:
	float                                         CurrentSpread;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged");
static_assert(sizeof(WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged) == 0x000004, "Wrong size on WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged");
static_assert(offsetof(WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged, CurrentSpread) == 0x000000, "Member 'WBP_UI_Widget_Reticle_C_OnCrossHairScaleChanged::CurrentSpread' has a wrong offset!");

}

