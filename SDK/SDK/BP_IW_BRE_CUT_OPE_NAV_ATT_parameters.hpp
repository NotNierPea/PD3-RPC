#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IW_BRE_CUT_OPE_NAV_ATT

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BPS_GlassHit_VFXData_structs.hpp"


namespace SDK::Params
{

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT
// 0x01A0 (0x01A0 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_Event_OldState;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 K2Node_Event_NewState;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInitialStateChange;                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZGateState                                 Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UActorComponent*                        K2Node_ComponentBoundEvent_PoolComponent;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Hits;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bDoCosmetics;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  K2Node_ComponentBoundEvent_DamageContext;          // 0x00F0(0x0018)(ConstParm, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_GlassHit_VFXData                  K2Node_MakeStruct_BPS_GlassHit_VFXData;            // 0x0128(0x0030)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FBPS_GlassHit_VFXData                  K2Node_MakeStruct_BPS_GlassHit_VFXData_1;          // 0x0158(0x0030)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBPS_GlassHit_VFXData>          K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SetState_ReturnValue;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT) == 0x0001A0, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, EntryPoint) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable) == 0x000004, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_1) == 0x000008, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_2) == 0x00000C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_3) == 0x000010, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_4) == 0x000014, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_5) == 0x000018, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_GetTimelineLength_ReturnValue) == 0x00001C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_float_Variable_6) == 0x000020, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_Event_OldState) == 0x000024, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_Event_NewState) == 0x000025, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_Event_bIsInitialStateChange) == 0x000026, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_Event_bIsInitialStateChange' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_Not_PreBool_ReturnValue) == 0x000027, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, Temp_byte_Variable) == 0x000029, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_Select_Default) == 0x00002C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_BreakVector_Y) == 0x000034, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_ComponentBoundEvent_PoolComponent) == 0x0000E0, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_ComponentBoundEvent_PoolComponent' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_ComponentBoundEvent_Hits) == 0x0000E8, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_ComponentBoundEvent_Hits' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_ComponentBoundEvent_bDoCosmetics) == 0x0000EC, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_ComponentBoundEvent_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_ComponentBoundEvent_DamageContext) == 0x0000F0, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_ComponentBoundEvent_DamageContext' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_SwitchInteger_CmpSuccess) == 0x000108, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00010C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000118, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_MakeStruct_BPS_GlassHit_VFXData) == 0x000128, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_MakeStruct_BPS_GlassHit_VFXData' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_MakeStruct_BPS_GlassHit_VFXData_1) == 0x000158, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_MakeStruct_BPS_GlassHit_VFXData_1' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, K2Node_MakeArray_Array) == 0x000188, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_SetState_ReturnValue) == 0x000198, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_SetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT, CallFunc_IsDedicatedServer_ReturnValue) == 0x000199, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_ExecuteUbergraph_BP_IW_BRE_CUT_OPE_NAV_ATT::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature final
{
public:
	class UActorComponent*                        PoolComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hits;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  DamageContext;                                     // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature) == 0x000028, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, PoolComponent) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::PoolComponent' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, Hits) == 0x000008, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::Hits' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, bDoCosmetics) == 0x00000C, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, DamageContext) == 0x000010, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_BndEvt__SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::DamageContext' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged final
{
public:
	ESBZGateState                                 OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZGateState                                 NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitialStateChange;                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged) == 0x000003, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged, OldState) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged, NewState) == 0x000001, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged, bIsInitialStateChange) == 0x000002, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_OnStateChanged::bIsInitialStateChange' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.GetCuttableComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent final
{
public:
	class USBZCuttableComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent) == 0x000008, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent, ReturnValue) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableComponent::ReturnValue' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.GetCuttableSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent final
{
public:
	class USBZCuttableSplineComponent*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent) == 0x000008, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent, ReturnValue) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetCuttableSplineComponent::ReturnValue' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.GetMeltingMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh final
{
public:
	class UStaticMeshComponent*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh) == 0x000008, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh, ReturnValue) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetMeltingMesh::ReturnValue' has a wrong offset!");

// Function BP_IW_BRE_CUT_OPE_NAV_ATT.BP_IW_BRE_CUT_OPE_NAV_ATT_C.GetNiagaraComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent final
{
public:
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent) == 0x000008, "Wrong alignment on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent");
static_assert(sizeof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent) == 0x000008, "Wrong size on BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent");
static_assert(offsetof(BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent, ReturnValue) == 0x000000, "Member 'BP_IW_BRE_CUT_OPE_NAV_ATT_C_GetNiagaraComponent::ReturnValue' has a wrong offset!");

}

