#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_WarmBounceWindow

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_WarmBounceWindow.BPL_WarmBounceWindow_C
// 0x0010 (0x02B8 - 0x02A8)
class ABPL_WarmBounceWindow_C final : public AActor
{
public:
	class URectLightComponent*                    RectLight;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_WarmBounceWindow_C">();
	}
	static class ABPL_WarmBounceWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPL_WarmBounceWindow_C>();
	}
};
static_assert(alignof(ABPL_WarmBounceWindow_C) == 0x000008, "Wrong alignment on ABPL_WarmBounceWindow_C");
static_assert(sizeof(ABPL_WarmBounceWindow_C) == 0x0002B8, "Wrong size on ABPL_WarmBounceWindow_C");
static_assert(offsetof(ABPL_WarmBounceWindow_C, RectLight) == 0x0002A8, "Member 'ABPL_WarmBounceWindow_C::RectLight' has a wrong offset!");
static_assert(offsetof(ABPL_WarmBounceWindow_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABPL_WarmBounceWindow_C::DefaultSceneRoot' has a wrong offset!");

}

