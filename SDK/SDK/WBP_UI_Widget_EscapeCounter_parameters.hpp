#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_EscapeCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.ExecuteUbergraph_WBP_UI_Widget_EscapeCounter
// 0x0060 (0x0060 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_PlayersInVolumeOnLeft;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPlayers_2;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayersInVolumeOnEntered;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPlayers_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayersInVolumeOnChanged;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalPlayers;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewTime;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter) == 0x000008, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter) == 0x000060, "Wrong size on WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, Temp_byte_Variable) == 0x000005, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_PlayersInVolumeOnLeft) == 0x000008, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_PlayersInVolumeOnLeft' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_TotalPlayers_2) == 0x00000C, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_TotalPlayers_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_PlayersInVolumeOnEntered) == 0x000010, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_PlayersInVolumeOnEntered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_TotalPlayers_1) == 0x000014, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_TotalPlayers_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_PlayersInVolumeOnChanged) == 0x000018, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_PlayersInVolumeOnChanged' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_TotalPlayers) == 0x00001C, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_TotalPlayers' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Select_Default) == 0x000030, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000038, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, K2Node_Event_NewTime) == 0x000040, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::K2Node_Event_NewTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'WBP_UI_Widget_EscapeCounter_C_ExecuteUbergraph_WBP_UI_Widget_EscapeCounter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.OnEscapeTimerChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged final
{
public:
	int32                                         NewTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged) == 0x000004, "Wrong size on WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged, NewTime) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_OnEscapeTimerChanged::NewTime' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.OnPlayerCountChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged final
{
public:
	int32                                         PlayersInVolumeOnChanged;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPlayers;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged) == 0x000008, "Wrong size on WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged, PlayersInVolumeOnChanged) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged::PlayersInVolumeOnChanged' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged, TotalPlayers) == 0x000004, "Member 'WBP_UI_Widget_EscapeCounter_C_OnPlayerCountChanged::TotalPlayers' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.OnPlayersEnteredVolume
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume final
{
public:
	int32                                         PlayersInVolumeOnEntered;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPlayers;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume) == 0x000004, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume) == 0x000008, "Wrong size on WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume, PlayersInVolumeOnEntered) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume::PlayersInVolumeOnEntered' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume, TotalPlayers) == 0x000004, "Member 'WBP_UI_Widget_EscapeCounter_C_OnPlayersEnteredVolume::TotalPlayers' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.OnAllPlayersLeftVolume
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume final
{
public:
	int32                                         PlayersInVolumeOnLeft;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPlayers;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume) == 0x000004, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume) == 0x000008, "Wrong size on WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume, PlayersInVolumeOnLeft) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume::PlayersInVolumeOnLeft' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume, TotalPlayers) == 0x000004, "Member 'WBP_UI_Widget_EscapeCounter_C_OnAllPlayersLeftVolume::TotalPlayers' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_PreConstruct");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Widget_EscapeCounter_C_PreConstruct");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_EscapeCounter.WBP_UI_Widget_EscapeCounter_C.UpdateEscapeWidgetText
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText final
{
public:
	int32                                         InPlayersInVolume;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTotalPlayers;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText) == 0x000008, "Wrong alignment on WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText");
static_assert(sizeof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText) == 0x0000B0, "Wrong size on WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, InPlayersInVolume) == 0x000000, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::InPlayersInVolume' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, InTotalPlayers) == 0x000004, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::InTotalPlayers' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000048, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WBP_UI_Widget_EscapeCounter_C_UpdateEscapeWidgetText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

