#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedBinaryActor_Skylight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReplicatedBinaryActor_Skylight.BP_ReplicatedBinaryActor_Skylight_C
// 0x00D0 (0x03A8 - 0x02D8)
class ABP_ReplicatedBinaryActor_Skylight_C final : public ASBZReplicatedBinaryStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZAIObjectiveComponent*               SBZAIObjective;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal__2;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal__________12;                                 // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_________11;                                  // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal________10;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_______9;                                     // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal______8;                                      // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_____7;                                       // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal____6;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal___5;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal__4;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal__3;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NC_Upper_DanceFloor_Floor_01;                      // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_1;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_Exp_HighPressure;                               // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dummy_1;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dummy_3;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dummy_2;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZPropDamageComponent*                SBZPropDamage;                                     // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable;                                   // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   secret_stash_vent_7;                               // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SkylightDestroyed;                                 // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         HitAmount;                                         // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ReplicatedBinaryActor_Skylight(int32 EntryPoint);
	void OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics);
	void BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature(class UActorComponent* PoolComponent, int32 Hits, bool bDoCosmetics, const struct FSBZPropDamageContext& DamageContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReplicatedBinaryActor_Skylight_C">();
	}
	static class ABP_ReplicatedBinaryActor_Skylight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReplicatedBinaryActor_Skylight_C>();
	}
};
static_assert(alignof(ABP_ReplicatedBinaryActor_Skylight_C) == 0x000008, "Wrong alignment on ABP_ReplicatedBinaryActor_Skylight_C");
static_assert(sizeof(ABP_ReplicatedBinaryActor_Skylight_C) == 0x0003A8, "Wrong size on ABP_ReplicatedBinaryActor_Skylight_C");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, SBZAIObjective) == 0x0002E0, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::SBZAIObjective' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal__2) == 0x0002E8, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal__2' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal__________12) == 0x0002F0, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal__________12' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal_________11) == 0x0002F8, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal_________11' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal________10) == 0x000300, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal________10' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal_______9) == 0x000308, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal_______9' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal______8) == 0x000310, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal______8' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal_____7) == 0x000318, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal_____7' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal____6) == 0x000320, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal____6' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal___5) == 0x000328, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal___5' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal__4) == 0x000330, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal__4' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal__3) == 0x000338, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal__3' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, NC_Upper_DanceFloor_Floor_01) == 0x000340, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::NC_Upper_DanceFloor_Floor_01' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Decal_1) == 0x000348, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Decal_1' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, FX_Exp_HighPressure) == 0x000350, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::FX_Exp_HighPressure' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Dummy_1) == 0x000358, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Dummy_1' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Dummy_3) == 0x000360, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Dummy_3' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, Dummy_2) == 0x000368, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::Dummy_2' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, SBZPropDamage) == 0x000370, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::SBZPropDamage' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, SBZInteractable) == 0x000378, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::SBZInteractable' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, secret_stash_vent_7) == 0x000380, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::secret_stash_vent_7' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, DefaultSceneRoot) == 0x000388, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, SkylightDestroyed) == 0x000390, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::SkylightDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_Skylight_C, HitAmount) == 0x0003A0, "Member 'ABP_ReplicatedBinaryActor_Skylight_C::HitAmount' has a wrong offset!");

}

