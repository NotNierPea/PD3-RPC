#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_ArmorChunkButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.ExecuteUbergraph_WBP_UI_ArmorChunkButton
// 0x0108 (0x0108 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZArmorChunkType                            Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	ESBZArmorChunkType                            Temp_byte_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZArmorChunkTypeData                 K2Node_Event_InArmorChunkData;                     // 0x0084(0x0054)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_bInIsEquipped;                        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton) == 0x000008, "Wrong alignment on WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton) == 0x000108, "Wrong size on WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, EntryPoint) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_byte_Variable) == 0x000004, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_text_Variable) == 0x000008, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_text_Variable_1) == 0x000020, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_text_Variable_2) == 0x000038, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_byte_Variable_2) == 0x000050, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_object_Variable) == 0x000058, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_object_Variable_1) == 0x000060, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_object_Variable_2) == 0x000068, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Event_IsDesignTime) == 0x000070, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000078, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Event_bInHasFocus) == 0x000080, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Event_InArmorChunkData) == 0x000084, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Event_InArmorChunkData' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Event_bInIsEquipped) == 0x0000D8, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Event_bInIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Select_Default_1) == 0x0000F8, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_byte_Variable_3) == 0x000100, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, Temp_bool_Variable) == 0x000101, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, K2Node_Select_Default_2) == 0x000102, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000103, "Member 'WBP_UI_ArmorChunkButton_C_ExecuteUbergraph_WBP_UI_ArmorChunkButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.OnEquippedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_OnEquippedChanged final
{
public:
	bool                                          bInIsEquipped;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_OnEquippedChanged) == 0x000001, "Wrong alignment on WBP_UI_ArmorChunkButton_C_OnEquippedChanged");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_OnEquippedChanged) == 0x000001, "Wrong size on WBP_UI_ArmorChunkButton_C_OnEquippedChanged");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_OnEquippedChanged, bInIsEquipped) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_OnEquippedChanged::bInIsEquipped' has a wrong offset!");

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.ArmorChunkInitialized
// 0x0054 (0x0054 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized final
{
public:
	struct FSBZArmorChunkTypeData                 InArmorChunkData;                                  // 0x0000(0x0054)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized) == 0x000004, "Wrong alignment on WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized) == 0x000054, "Wrong size on WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized, InArmorChunkData) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_ArmorChunkInitialized::InArmorChunkData' has a wrong offset!");

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_ArmorChunkButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_ArmorChunkButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_ArmorChunkButton.WBP_UI_ArmorChunkButton_C.OnFocusChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_ArmorChunkButton_C_OnFocusChanged final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_ArmorChunkButton_C_OnFocusChanged) == 0x000008, "Wrong alignment on WBP_UI_ArmorChunkButton_C_OnFocusChanged");
static_assert(sizeof(WBP_UI_ArmorChunkButton_C_OnFocusChanged) == 0x000028, "Wrong size on WBP_UI_ArmorChunkButton_C_OnFocusChanged");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_OnFocusChanged, bIsFocused) == 0x000000, "Member 'WBP_UI_ArmorChunkButton_C_OnFocusChanged::bIsFocused' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_OnFocusChanged, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_UI_ArmorChunkButton_C_OnFocusChanged::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_OnFocusChanged, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_UI_ArmorChunkButton_C_OnFocusChanged::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_ArmorChunkButton_C_OnFocusChanged, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'WBP_UI_ArmorChunkButton_C_OnFocusChanged::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

}

