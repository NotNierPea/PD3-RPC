#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FOR_USBDrive

#include "Basic.hpp"

#include "BP_FOR_USBDrive_classes.hpp"
#include "BP_FOR_USBDrive_parameters.hpp"


namespace SDK
{

// Function BP_FOR_USBDrive.BP_FOR_USBDrive_C.ExecuteUbergraph_BP_FOR_USBDrive
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FOR_USBDrive_C::ExecuteUbergraph_BP_FOR_USBDrive(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FOR_USBDrive_C", "ExecuteUbergraph_BP_FOR_USBDrive");

	Params::BP_FOR_USBDrive_C_ExecuteUbergraph_BP_FOR_USBDrive Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FOR_USBDrive.BP_FOR_USBDrive_C.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDoCosmetics                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FOR_USBDrive_C::OnStateChanged(int32 OldState, int32 NewState, bool bDoCosmetics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FOR_USBDrive_C", "OnStateChanged");

	Params::BP_FOR_USBDrive_C_OnStateChanged Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;
	Parms.bDoCosmetics = bDoCosmetics;

	UObject::ProcessEvent(Func, &Parms);
}

}

