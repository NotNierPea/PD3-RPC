#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssetReward

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_AssetReward.WBP_AssetReward_C.ExecuteUbergraph_WBP_AssetReward
// 0x0058 (0x0058 - 0x0000)
struct WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward) == 0x000008, "Wrong alignment on WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward");
static_assert(sizeof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward) == 0x000058, "Wrong size on WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, EntryPoint) == 0x000000, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, K2Node_Event_IsDesignTime) == 0x000024, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, K2Node_DynamicCast_AsPaper_Sprite) == 0x000030, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, Temp_object_Variable) == 0x000040, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WBP_AssetReward_C_ExecuteUbergraph_WBP_AssetReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AssetReward_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_AssetReward_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AssetReward_C_PreConstruct");
static_assert(sizeof(WBP_AssetReward_C_PreConstruct) == 0x000001, "Wrong size on WBP_AssetReward_C_PreConstruct");
static_assert(offsetof(WBP_AssetReward_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AssetReward_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA) == 0x000008, "Wrong alignment on WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA");
static_assert(sizeof(WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA) == 0x000008, "Wrong size on WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA");
static_assert(offsetof(WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA, Loaded) == 0x000000, "Member 'WBP_AssetReward_C_OnLoaded_BA88526C4084A77CB124FAB91DC3BFBA::Loaded' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.UpdateAssetCount
// 0x0080 (0x0080 - 0x0000)
struct WBP_AssetReward_C_UpdateAssetCount final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssetReward_C_UpdateAssetCount) == 0x000008, "Wrong alignment on WBP_AssetReward_C_UpdateAssetCount");
static_assert(sizeof(WBP_AssetReward_C_UpdateAssetCount) == 0x000080, "Wrong size on WBP_AssetReward_C_UpdateAssetCount");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, InCount) == 0x000000, "Member 'WBP_AssetReward_C_UpdateAssetCount::InCount' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, Temp_byte_Variable) == 0x000004, "Member 'WBP_AssetReward_C_UpdateAssetCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_AssetReward_C_UpdateAssetCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, K2Node_MakeArray_Array) == 0x000048, "Member 'WBP_AssetReward_C_UpdateAssetCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'WBP_AssetReward_C_UpdateAssetCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, CallFunc_Format_ReturnValue) == 0x000060, "Member 'WBP_AssetReward_C_UpdateAssetCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, Temp_byte_Variable_1) == 0x000078, "Member 'WBP_AssetReward_C_UpdateAssetCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000079, "Member 'WBP_AssetReward_C_UpdateAssetCount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, Temp_bool_Variable) == 0x00007A, "Member 'WBP_AssetReward_C_UpdateAssetCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateAssetCount, K2Node_Select_Default) == 0x00007B, "Member 'WBP_AssetReward_C_UpdateAssetCount::K2Node_Select_Default' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.UpdateRewardIconDimensions
// 0x0038 (0x0038 - 0x0000)
struct WBP_AssetReward_C_UpdateRewardIconDimensions final
{
public:
	class UPaperSprite*                           Sprite;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPaperSpriteSourceSize_ReturnValue;     // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssetReward_C_UpdateRewardIconDimensions) == 0x000008, "Wrong alignment on WBP_AssetReward_C_UpdateRewardIconDimensions");
static_assert(sizeof(WBP_AssetReward_C_UpdateRewardIconDimensions) == 0x000038, "Wrong size on WBP_AssetReward_C_UpdateRewardIconDimensions");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, Sprite) == 0x000000, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::Sprite' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, Temp_bool_Variable) == 0x000008, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_GetPaperSpriteSourceSize_ReturnValue) == 0x00000C, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_GetPaperSpriteSourceSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_X) == 0x000014, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_UpdateRewardIconDimensions, K2Node_Select_Default) == 0x000030, "Member 'WBP_AssetReward_C_UpdateRewardIconDimensions::K2Node_Select_Default' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.AddToAssetCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssetReward_C_AddToAssetCount final
{
public:
	int32                                         AddAmount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssetReward_C_AddToAssetCount) == 0x000004, "Wrong alignment on WBP_AssetReward_C_AddToAssetCount");
static_assert(sizeof(WBP_AssetReward_C_AddToAssetCount) == 0x000008, "Wrong size on WBP_AssetReward_C_AddToAssetCount");
static_assert(offsetof(WBP_AssetReward_C_AddToAssetCount, AddAmount) == 0x000000, "Member 'WBP_AssetReward_C_AddToAssetCount::AddAmount' has a wrong offset!");
static_assert(offsetof(WBP_AssetReward_C_AddToAssetCount, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_AssetReward_C_AddToAssetCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_AssetReward.WBP_AssetReward_C.PlayAppearAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssetReward_C_PlayAppearAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssetReward_C_PlayAppearAnim) == 0x000008, "Wrong alignment on WBP_AssetReward_C_PlayAppearAnim");
static_assert(sizeof(WBP_AssetReward_C_PlayAppearAnim) == 0x000008, "Wrong size on WBP_AssetReward_C_PlayAppearAnim");
static_assert(offsetof(WBP_AssetReward_C_PlayAppearAnim, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_AssetReward_C_PlayAppearAnim::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

