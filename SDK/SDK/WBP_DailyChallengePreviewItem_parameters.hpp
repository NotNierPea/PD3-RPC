#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengePreviewItem

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_DailyChallengePreviewItem.WBP_DailyChallengePreviewItem_C.ExecuteUbergraph_WBP_DailyChallengePreviewItem
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZColorStyle*                         Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZChallengeData                      K2Node_CustomEvent_InData;                         // 0x0010(0x00A8)()
	int32                                         K2Node_CustomEvent_InCurrentVal;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InMaxValue;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	class USBZColorStyle*                         Temp_object_Variable_1;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZColorStyle*                         K2Node_Select_Default;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetChallengeNameText_ReturnValue;         // 0x0198(0x0018)()
};
static_assert(alignof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem) == 0x000008, "Wrong alignment on WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem");
static_assert(sizeof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem) == 0x0001B0, "Wrong size on WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, EntryPoint) == 0x000000, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, Temp_object_Variable) == 0x000008, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_CustomEvent_InData) == 0x000010, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_CustomEvent_InData' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_CustomEvent_InCurrentVal) == 0x0000B8, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_CustomEvent_InCurrentVal' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_CustomEvent_InMaxValue) == 0x0000BC, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_CustomEvent_InMaxValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000100, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_MakeArray_Array) == 0x000148, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, CallFunc_SelectInt_ReturnValue) == 0x000158, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, CallFunc_Format_ReturnValue) == 0x000160, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, Temp_object_Variable_1) == 0x000178, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, Temp_bool_Variable) == 0x000180, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, K2Node_Select_Default) == 0x000188, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, CallFunc_GetChallengeManager_ReturnValue) == 0x000190, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem, CallFunc_GetChallengeNameText_ReturnValue) == 0x000198, "Member 'WBP_DailyChallengePreviewItem_C_ExecuteUbergraph_WBP_DailyChallengePreviewItem::CallFunc_GetChallengeNameText_ReturnValue' has a wrong offset!");

// Function WBP_DailyChallengePreviewItem.WBP_DailyChallengePreviewItem_C.UpdateProgress
// 0x0008 (0x0008 - 0x0000)
struct WBP_DailyChallengePreviewItem_C_UpdateProgress final
{
public:
	int32                                         InCurrentVal;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMaxValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DailyChallengePreviewItem_C_UpdateProgress) == 0x000004, "Wrong alignment on WBP_DailyChallengePreviewItem_C_UpdateProgress");
static_assert(sizeof(WBP_DailyChallengePreviewItem_C_UpdateProgress) == 0x000008, "Wrong size on WBP_DailyChallengePreviewItem_C_UpdateProgress");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_UpdateProgress, InCurrentVal) == 0x000000, "Member 'WBP_DailyChallengePreviewItem_C_UpdateProgress::InCurrentVal' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_UpdateProgress, InMaxValue) == 0x000004, "Member 'WBP_DailyChallengePreviewItem_C_UpdateProgress::InMaxValue' has a wrong offset!");

// Function WBP_DailyChallengePreviewItem.WBP_DailyChallengePreviewItem_C.InitItem
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_DailyChallengePreviewItem_C_InitItem final
{
public:
	struct FSBZChallengeData                      InData;                                            // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_DailyChallengePreviewItem_C_InitItem) == 0x000008, "Wrong alignment on WBP_DailyChallengePreviewItem_C_InitItem");
static_assert(sizeof(WBP_DailyChallengePreviewItem_C_InitItem) == 0x0000A8, "Wrong size on WBP_DailyChallengePreviewItem_C_InitItem");
static_assert(offsetof(WBP_DailyChallengePreviewItem_C_InitItem, InData) == 0x000000, "Member 'WBP_DailyChallengePreviewItem_C_InitItem::InData' has a wrong offset!");

}

