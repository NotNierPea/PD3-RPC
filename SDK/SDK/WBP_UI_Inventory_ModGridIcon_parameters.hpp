#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Inventory_ModGridIcon

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_UI_Inventory_ModGridIcon.WBP_UI_Inventory_ModGridIcon_C.ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0008(0x0018)()
	const class USBZInventoryBaseData*            K2Node_CustomEvent_InItem;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon");
static_assert(sizeof(WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon) == 0x000028, "Wrong size on WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon");
static_assert(offsetof(WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon, EntryPoint) == 0x000000, "Member 'WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon, K2Node_CustomEvent_InText) == 0x000008, "Member 'WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon, K2Node_CustomEvent_InItem) == 0x000020, "Member 'WBP_UI_Inventory_ModGridIcon_C_ExecuteUbergraph_WBP_UI_Inventory_ModGridIcon::K2Node_CustomEvent_InItem' has a wrong offset!");

// Function WBP_UI_Inventory_ModGridIcon.WBP_UI_Inventory_ModGridIcon_C.SetAndDisplayText
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText");
static_assert(sizeof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText) == 0x000018, "Wrong size on WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText");
static_assert(offsetof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText, InText) == 0x000000, "Member 'WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayText::InText' has a wrong offset!");

// Function WBP_UI_Inventory_ModGridIcon.WBP_UI_Inventory_ModGridIcon_C.SetAndDisplayIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon final
{
public:
	const class USBZInventoryBaseData*            InItem;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon) == 0x000008, "Wrong alignment on WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon");
static_assert(sizeof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon) == 0x000008, "Wrong size on WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon");
static_assert(offsetof(WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon, InItem) == 0x000000, "Member 'WBP_UI_Inventory_ModGridIcon_C_SetAndDisplayIcon::InItem' has a wrong offset!");

}

