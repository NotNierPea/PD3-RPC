#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_NetInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_NetInfo.WBP_HUD_NetInfo_C.ExecuteUbergraph_WBP_HUD_NetInfo
// 0x0078 (0x0078 - 0x0000)
struct WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PingValue;                            // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
};
static_assert(alignof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo) == 0x000008, "Wrong alignment on WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo");
static_assert(sizeof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo) == 0x000078, "Wrong size on WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, EntryPoint) == 0x000000, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, Temp_bool_Variable) == 0x000004, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, Temp_byte_Variable) == 0x000005, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, K2Node_Select_Default) == 0x000007, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, K2Node_Event_PingValue) == 0x000008, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::K2Node_Event_PingValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo, CallFunc_Format_ReturnValue) == 0x000060, "Member 'WBP_HUD_NetInfo_C_ExecuteUbergraph_WBP_HUD_NetInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_HUD_NetInfo.WBP_HUD_NetInfo_C.OnPingValueChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUD_NetInfo_C_OnPingValueChanged final
{
public:
	int32                                         PingValue_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_NetInfo_C_OnPingValueChanged) == 0x000004, "Wrong alignment on WBP_HUD_NetInfo_C_OnPingValueChanged");
static_assert(sizeof(WBP_HUD_NetInfo_C_OnPingValueChanged) == 0x000004, "Wrong size on WBP_HUD_NetInfo_C_OnPingValueChanged");
static_assert(offsetof(WBP_HUD_NetInfo_C_OnPingValueChanged, PingValue_0) == 0x000000, "Member 'WBP_HUD_NetInfo_C_OnPingValueChanged::PingValue_0' has a wrong offset!");

}

