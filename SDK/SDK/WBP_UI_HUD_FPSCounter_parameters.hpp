#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_HUD_FPSCounter

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_HUD_FPSCounter.WBP_UI_HUD_FPSCounter_C.ExecuteUbergraph_WBP_UI_HUD_FPSCounter
// 0x000C (0x000C - 0x0000)
struct WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsDisplaying;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter) == 0x000004, "Wrong alignment on WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter");
static_assert(sizeof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter) == 0x00000C, "Wrong size on WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, EntryPoint) == 0x000000, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, Temp_bool_Variable) == 0x000004, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, Temp_byte_Variable) == 0x000005, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, K2Node_Event_bInIsDisplaying) == 0x000007, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::K2Node_Event_bInIsDisplaying' has a wrong offset!");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter, K2Node_Select_Default) == 0x000008, "Member 'WBP_UI_HUD_FPSCounter_C_ExecuteUbergraph_WBP_UI_HUD_FPSCounter::K2Node_Select_Default' has a wrong offset!");

// Function WBP_UI_HUD_FPSCounter.WBP_UI_HUD_FPSCounter_C.OnDisplayedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged final
{
public:
	bool                                          bInIsDisplaying;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged) == 0x000001, "Wrong alignment on WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged");
static_assert(sizeof(WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged) == 0x000001, "Wrong size on WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged");
static_assert(offsetof(WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged, bInIsDisplaying) == 0x000000, "Member 'WBP_UI_HUD_FPSCounter_C_OnDisplayedChanged::bInIsDisplaying' has a wrong offset!");

}

