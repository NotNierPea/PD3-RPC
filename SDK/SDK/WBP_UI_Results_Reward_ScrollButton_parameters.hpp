#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Results_Reward_ScrollButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Results_Reward_ScrollButton.WBP_UI_Results_Reward_ScrollButton_C.ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsDisabled;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton) == 0x000004, "Wrong alignment on WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton");
static_assert(sizeof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton) == 0x000010, "Wrong size on WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton, EntryPoint) == 0x000000, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton, K2Node_Event_bInHasFocus) == 0x000005, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton, K2Node_Event_bInIsDisabled) == 0x00000C, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ExecuteUbergraph_WBP_UI_Results_Reward_ScrollButton::K2Node_Event_bInIsDisabled' has a wrong offset!");

// Function WBP_UI_Results_Reward_ScrollButton.WBP_UI_Results_Reward_ScrollButton_C.ButtonDisabledChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged final
{
public:
	bool                                          bInIsDisabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged) == 0x000001, "Wrong alignment on WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged");
static_assert(sizeof(WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged) == 0x000001, "Wrong size on WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged, bInIsDisabled) == 0x000000, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ButtonDisabledChanged::bInIsDisabled' has a wrong offset!");

// Function WBP_UI_Results_Reward_ScrollButton.WBP_UI_Results_Reward_ScrollButton_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_UI_Results_Reward_ScrollButton_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_UI_Results_Reward_ScrollButton.WBP_UI_Results_Reward_ScrollButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Results_Reward_ScrollButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Results_Reward_ScrollButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Results_Reward_ScrollButton_C_PreConstruct");
static_assert(sizeof(WBP_UI_Results_Reward_ScrollButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Results_Reward_ScrollButton_C_PreConstruct");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Results_Reward_ScrollButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Results_Reward_ScrollButton.WBP_UI_Results_Reward_ScrollButton_C.SetStateColors
// 0x0068 (0x0068 - 0x0000)
struct WBP_UI_Results_Reward_ScrollButton_C_SetStateColors final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors) == 0x000004, "Wrong alignment on WBP_UI_Results_Reward_ScrollButton_C_SetStateColors");
static_assert(sizeof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors) == 0x000068, "Wrong size on WBP_UI_Results_Reward_ScrollButton_C_SetStateColors");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_struct_Variable) == 0x000000, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_struct_Variable_1) == 0x000010, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_bool_Variable) == 0x000020, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000044, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, Temp_bool_Variable_1) == 0x000045, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, K2Node_Select_Default) == 0x000048, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Results_Reward_ScrollButton_C_SetStateColors, K2Node_Select_Default_1) == 0x000058, "Member 'WBP_UI_Results_Reward_ScrollButton_C_SetStateColors::K2Node_Select_Default_1' has a wrong offset!");

}

