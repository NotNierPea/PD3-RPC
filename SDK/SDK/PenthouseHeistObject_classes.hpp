#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PenthouseHeistObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MoreHeistAtmoVarObjectHeist_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PenthouseHeistObject.PenthouseHeistObject_C
// 0x0040 (0x0348 - 0x0308)
class APenthouseHeistObject_C final : public AMoreHeistAtmoVarObjectHeist_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PenthouseHeistObject_C;             // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ADirectionalLight*                      DirectionalLight;                                  // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirLightTargetValue;                               // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CloudMat_Night;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CloudMat_NightRain;                                // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CloudMat_Day;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CloudMat_DayRain;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      SelectedCloudMat;                                  // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PenthouseHeistObject(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void TimeSet(const struct FTimeSettings& TimeSettings);
	void ReceiveBeginPlay();
	void TickExec_D530E90D4C53879745BB24846681CA28(const class UDelegateTimer* Timer, float ElapsedTime, float TimeSinceLast);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PenthouseHeistObject_C">();
	}
	static class APenthouseHeistObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APenthouseHeistObject_C>();
	}
};
static_assert(alignof(APenthouseHeistObject_C) == 0x000008, "Wrong alignment on APenthouseHeistObject_C");
static_assert(sizeof(APenthouseHeistObject_C) == 0x000348, "Wrong size on APenthouseHeistObject_C");
static_assert(offsetof(APenthouseHeistObject_C, UberGraphFrame_PenthouseHeistObject_C) == 0x000308, "Member 'APenthouseHeistObject_C::UberGraphFrame_PenthouseHeistObject_C' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, DirectionalLight) == 0x000310, "Member 'APenthouseHeistObject_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, DirLightTargetValue) == 0x000318, "Member 'APenthouseHeistObject_C::DirLightTargetValue' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, CloudMat_Night) == 0x000320, "Member 'APenthouseHeistObject_C::CloudMat_Night' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, CloudMat_NightRain) == 0x000328, "Member 'APenthouseHeistObject_C::CloudMat_NightRain' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, CloudMat_Day) == 0x000330, "Member 'APenthouseHeistObject_C::CloudMat_Day' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, CloudMat_DayRain) == 0x000338, "Member 'APenthouseHeistObject_C::CloudMat_DayRain' has a wrong offset!");
static_assert(offsetof(APenthouseHeistObject_C, SelectedCloudMat) == 0x000340, "Member 'APenthouseHeistObject_C::SelectedCloudMat' has a wrong offset!");

}

