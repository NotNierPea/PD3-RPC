#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MethIngredientBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MethIngredientBase.BP_MethIngredientBase_C.ExecuteUbergraph_BP_MethIngredientBase
// 0x0028 (0x0028 - 0x0000)
struct BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OldState;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewState;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase) == 0x000008, "Wrong alignment on BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase");
static_assert(sizeof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase) == 0x000028, "Wrong size on BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, EntryPoint) == 0x000000, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_ComponentBoundEvent_Interactable) == 0x000008, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_ComponentBoundEvent_Interactor) == 0x000010, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000018, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_Event_OldState) == 0x00001C, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_Event_NewState) == 0x000020, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_Event_bDoCosmetics) == 0x000024, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase, K2Node_SwitchInteger_CmpSuccess) == 0x000025, "Member 'BP_MethIngredientBase_C_ExecuteUbergraph_BP_MethIngredientBase::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_MethIngredientBase.BP_MethIngredientBase_C.OnStateChanged
// 0x000C (0x000C - 0x0000)
struct BP_MethIngredientBase_C_OnStateChanged final
{
public:
	int32                                         OldState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MethIngredientBase_C_OnStateChanged) == 0x000004, "Wrong alignment on BP_MethIngredientBase_C_OnStateChanged");
static_assert(sizeof(BP_MethIngredientBase_C_OnStateChanged) == 0x00000C, "Wrong size on BP_MethIngredientBase_C_OnStateChanged");
static_assert(offsetof(BP_MethIngredientBase_C_OnStateChanged, OldState) == 0x000000, "Member 'BP_MethIngredientBase_C_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_OnStateChanged, NewState) == 0x000004, "Member 'BP_MethIngredientBase_C_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_OnStateChanged, bDoCosmetics) == 0x000008, "Member 'BP_MethIngredientBase_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_MethIngredientBase.BP_MethIngredientBase_C.BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_MethIngredientBase_C_BndEvt__BP_MethIngredientBase_SBZInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_MethIngredientBase.BP_MethIngredientBase_C.setObjectState
// 0x0010 (0x0010 - 0x0000)
struct BP_MethIngredientBase_C_setObjectState final
{
public:
	bool                                          interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          visible;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MethIngredientBase_C_setObjectState) == 0x000004, "Wrong alignment on BP_MethIngredientBase_C_setObjectState");
static_assert(sizeof(BP_MethIngredientBase_C_setObjectState) == 0x000010, "Wrong size on BP_MethIngredientBase_C_setObjectState");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, interactable) == 0x000000, "Member 'BP_MethIngredientBase_C_setObjectState::interactable' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, visible) == 0x000001, "Member 'BP_MethIngredientBase_C_setObjectState::visible' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, Temp_bool_Variable) == 0x000002, "Member 'BP_MethIngredientBase_C_setObjectState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, Temp_int_Variable) == 0x000004, "Member 'BP_MethIngredientBase_C_setObjectState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, Temp_int_Variable_1) == 0x000008, "Member 'BP_MethIngredientBase_C_setObjectState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MethIngredientBase_C_setObjectState, K2Node_Select_Default) == 0x00000C, "Member 'BP_MethIngredientBase_C_setObjectState::K2Node_Select_Default' has a wrong offset!");

}

