#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_TwoChoiceButton_RinoHud

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud
// 0x0040 (0x0040 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USBZMenuMouseButton* Button)> K2Node_CreateDelegate_OutputDelegate;         // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(class USBZMenuMouseButton* Button)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bInIsDisabled;                        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasFocus;                          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsHovered;                         // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZMenuMouseButton*                    K2Node_CustomEvent_Button_1;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZMenuMouseButton*                    K2Node_CustomEvent_Button;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud) == 0x000008, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud) == 0x000040, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, EntryPoint) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_Event_bInIsDisabled) == 0x00002C, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_Event_bInIsDisabled' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_Event_bInHasFocus) == 0x00002D, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_Event_bInHasFocus' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_Event_bInIsHovered) == 0x00002E, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_Event_bInIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_CustomEvent_Button_1) == 0x000030, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud, K2Node_CustomEvent_Button) == 0x000038, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ExecuteUbergraph_WBP_Settings_TwoChoiceButton_RinoHud::K2Node_CustomEvent_Button' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.NoButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected final
{
public:
	class USBZMenuMouseButton*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected) == 0x000008, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected) == 0x000008, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected, Button) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_NoButtonSelected::Button' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.YesButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected final
{
public:
	class USBZMenuMouseButton*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected) == 0x000008, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected) == 0x000008, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected, Button) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_YesButtonSelected::Button' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.ButtonHoveredChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged final
{
public:
	bool                                          bInIsHovered;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged) == 0x000001, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged) == 0x000001, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged, bInIsHovered) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonHoveredChanged::bInIsHovered' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.ButtonFocusedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged final
{
public:
	bool                                          bInHasFocus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged) == 0x000001, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged) == 0x000001, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged, bInHasFocus) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonFocusedChanged::bInHasFocus' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.ButtonDisabledChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged final
{
public:
	bool                                          bInIsDisabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged) == 0x000001, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged) == 0x000001, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged, bInIsDisabled) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_ButtonDisabledChanged::bInIsDisabled' has a wrong offset!");

// Function WBP_Settings_TwoChoiceButton_RinoHud.WBP_Settings_TwoChoiceButton_RinoHud_C.Set Toggle Value
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value final
{
public:
	bool                                          Input;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value) == 0x000001, "Wrong alignment on WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value");
static_assert(sizeof(WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value) == 0x000001, "Wrong size on WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value");
static_assert(offsetof(WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value, Input) == 0x000000, "Member 'WBP_Settings_TwoChoiceButton_RinoHud_C_Set_Toggle_Value::Input' has a wrong offset!");

}

