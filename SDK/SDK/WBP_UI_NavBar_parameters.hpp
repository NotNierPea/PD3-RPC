#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_NavBar

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_NavBar.WBP_UI_NavBar_C.ExecuteUbergraph_WBP_UI_NavBar
// 0x0050 (0x0050 - 0x0000)
struct WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Play2DSound_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Play2DSound_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FSBZUIStackChangedEvent& StackEvent)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	struct FSBZUIStackChangedEvent                K2Node_CustomEvent_StackEvent;                     // 0x002C(0x001C)(NoDestructor)
	bool                                          CallFunc_HasStackFocus_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar) == 0x000008, "Wrong alignment on WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar");
static_assert(sizeof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar) == 0x000050, "Wrong size on WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, EntryPoint) == 0x000000, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, CallFunc_Play2DSound_ReturnValue) == 0x000004, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::CallFunc_Play2DSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, CallFunc_Play2DSound_ReturnValue_1) == 0x000008, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::CallFunc_Play2DSound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, CallFunc_GetUIManager_ReturnValue) == 0x000010, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, K2Node_CustomEvent_StackEvent) == 0x00002C, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::K2Node_CustomEvent_StackEvent' has a wrong offset!");
static_assert(offsetof(WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar, CallFunc_HasStackFocus_ReturnValue) == 0x000048, "Member 'WBP_UI_NavBar_C_ExecuteUbergraph_WBP_UI_NavBar::CallFunc_HasStackFocus_ReturnValue' has a wrong offset!");

// Function WBP_UI_NavBar.WBP_UI_NavBar_C.OnStackChanged
// 0x001C (0x001C - 0x0000)
struct WBP_UI_NavBar_C_OnStackChanged final
{
public:
	struct FSBZUIStackChangedEvent                StackEvent;                                        // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_UI_NavBar_C_OnStackChanged) == 0x000004, "Wrong alignment on WBP_UI_NavBar_C_OnStackChanged");
static_assert(sizeof(WBP_UI_NavBar_C_OnStackChanged) == 0x00001C, "Wrong size on WBP_UI_NavBar_C_OnStackChanged");
static_assert(offsetof(WBP_UI_NavBar_C_OnStackChanged, StackEvent) == 0x000000, "Member 'WBP_UI_NavBar_C_OnStackChanged::StackEvent' has a wrong offset!");

}

