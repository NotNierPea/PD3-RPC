#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CuttingTool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CuttingTool.BP_CuttingTool_C
// 0x0070 (0x05F0 - 0x0580)
class ABP_CuttingTool_C final : public ASBZCuttingTool
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSBZControlsReference                  In_Controls_Reference_Activated;                   // 0x0590(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ControlID;                                         // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZControlsReference                  In_Controls_Reference_Idle;                        // 0x05C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_CuttingTool(int32 EntryPoint);
	void OnActivatedIdle();
	void OnReady();
	void OnActivatedUsing();
	void OnCanceled();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CuttingTool_C">();
	}
	static class ABP_CuttingTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CuttingTool_C>();
	}
};
static_assert(alignof(ABP_CuttingTool_C) == 0x000010, "Wrong alignment on ABP_CuttingTool_C");
static_assert(sizeof(ABP_CuttingTool_C) == 0x0005F0, "Wrong size on ABP_CuttingTool_C");
static_assert(offsetof(ABP_CuttingTool_C, UberGraphFrame) == 0x000580, "Member 'ABP_CuttingTool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CuttingTool_C, Ak) == 0x000588, "Member 'ABP_CuttingTool_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_CuttingTool_C, In_Controls_Reference_Activated) == 0x000590, "Member 'ABP_CuttingTool_C::In_Controls_Reference_Activated' has a wrong offset!");
static_assert(offsetof(ABP_CuttingTool_C, ControlID) == 0x0005B8, "Member 'ABP_CuttingTool_C::ControlID' has a wrong offset!");
static_assert(offsetof(ABP_CuttingTool_C, In_Controls_Reference_Idle) == 0x0005C0, "Member 'ABP_CuttingTool_C::In_Controls_Reference_Idle' has a wrong offset!");

}

