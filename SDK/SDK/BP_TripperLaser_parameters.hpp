#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TripperLaser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_TripperLaser.BP_TripperLaser_C.ExecuteUbergraph_BP_TripperLaser
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0070(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_2;                       // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser) == 0x000010, "Wrong alignment on BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser");
static_assert(sizeof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser) == 0x0000C0, "Wrong size on BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, EntryPoint) == 0x000000, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, Temp_struct_Variable) == 0x000008, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, Temp_delegate_Variable) == 0x000018, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, K2Node_MakeStruct_Vector4) == 0x000030, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, K2Node_MakeStruct_Vector4_1) == 0x000040, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, K2Node_MakeStruct_LinearColor) == 0x000050, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, Temp_struct_Variable_1) == 0x000060, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, Temp_delegate_Variable_1) == 0x000070, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, K2Node_MakeStruct_Vector4_2) == 0x000090, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::K2Node_MakeStruct_Vector4_2' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, K2Node_MakeStruct_LinearColor_1) == 0x0000A0, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, CallFunc_PostEvent_ReturnValue) == 0x0000B0, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser, CallFunc_PostEvent_ReturnValue_1) == 0x0000B4, "Member 'BP_TripperLaser_C_ExecuteUbergraph_BP_TripperLaser::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");

}

