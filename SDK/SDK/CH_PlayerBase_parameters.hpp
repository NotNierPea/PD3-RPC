#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CH_PlayerBase

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CH_PlayerBase.CH_PlayerBase_C.ExecuteUbergraph_CH_PlayerBase
// 0x003C (0x003C - 0x0000)
struct CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimationDuration_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZMaskType                                  K2Node_Event_MaskType;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_MorphTargetName_1;                    // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimationDuration;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_MorphTargetName;                      // 0x002C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase) == 0x000004, "Wrong alignment on CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase");
static_assert(sizeof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase) == 0x00003C, "Wrong size on CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, EntryPoint) == 0x000000, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, Temp_byte_Variable) == 0x000005, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, Temp_float_Variable) == 0x000008, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, Temp_float_Variable_1) == 0x00000C, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Select_Default) == 0x000010, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Event_AnimationDuration_1) == 0x000014, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Event_AnimationDuration_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Event_MaskType) == 0x000018, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Event_MaskType' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Event_MorphTargetName_1) == 0x00001C, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Event_MorphTargetName_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Event_AnimationDuration) == 0x000028, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Event_AnimationDuration' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_Event_MorphTargetName) == 0x00002C, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_Event_MorphTargetName' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x000039, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'CH_PlayerBase_C_ExecuteUbergraph_CH_PlayerBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function CH_PlayerBase.CH_PlayerBase_C.BP_MaskOff
// 0x0010 (0x0010 - 0x0000)
struct CH_PlayerBase_C_BP_MaskOff final
{
public:
	float                                         AnimationDuration;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MorphTargetName;                                   // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CH_PlayerBase_C_BP_MaskOff) == 0x000004, "Wrong alignment on CH_PlayerBase_C_BP_MaskOff");
static_assert(sizeof(CH_PlayerBase_C_BP_MaskOff) == 0x000010, "Wrong size on CH_PlayerBase_C_BP_MaskOff");
static_assert(offsetof(CH_PlayerBase_C_BP_MaskOff, AnimationDuration) == 0x000000, "Member 'CH_PlayerBase_C_BP_MaskOff::AnimationDuration' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_BP_MaskOff, MorphTargetName) == 0x000004, "Member 'CH_PlayerBase_C_BP_MaskOff::MorphTargetName' has a wrong offset!");

// Function CH_PlayerBase.CH_PlayerBase_C.BP_MaskOn
// 0x0014 (0x0014 - 0x0000)
struct CH_PlayerBase_C_BP_MaskOn final
{
public:
	float                                         AnimationDuration;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZMaskType                                  MaskType_0;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MorphTargetName;                                   // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CH_PlayerBase_C_BP_MaskOn) == 0x000004, "Wrong alignment on CH_PlayerBase_C_BP_MaskOn");
static_assert(sizeof(CH_PlayerBase_C_BP_MaskOn) == 0x000014, "Wrong size on CH_PlayerBase_C_BP_MaskOn");
static_assert(offsetof(CH_PlayerBase_C_BP_MaskOn, AnimationDuration) == 0x000000, "Member 'CH_PlayerBase_C_BP_MaskOn::AnimationDuration' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_BP_MaskOn, MaskType_0) == 0x000004, "Member 'CH_PlayerBase_C_BP_MaskOn::MaskType_0' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_BP_MaskOn, MorphTargetName) == 0x000008, "Member 'CH_PlayerBase_C_BP_MaskOn::MorphTargetName' has a wrong offset!");

// Function CH_PlayerBase.CH_PlayerBase_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct CH_PlayerBase_C_UserConstructionScript final
{
public:
	class USBZModularCharacterComponent*          K2Node_DynamicCast_AsSBZModular_Character_Component; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CH_PlayerBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on CH_PlayerBase_C_UserConstructionScript");
static_assert(sizeof(CH_PlayerBase_C_UserConstructionScript) == 0x000010, "Wrong size on CH_PlayerBase_C_UserConstructionScript");
static_assert(offsetof(CH_PlayerBase_C_UserConstructionScript, K2Node_DynamicCast_AsSBZModular_Character_Component) == 0x000000, "Member 'CH_PlayerBase_C_UserConstructionScript::K2Node_DynamicCast_AsSBZModular_Character_Component' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'CH_PlayerBase_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CH_PlayerBase.CH_PlayerBase_C.SetMaskAnimation
// 0x002C (0x002C - 0x0000)
struct CH_PlayerBase_C_SetMaskAnimation final
{
public:
	float                                         InDuration;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZMaskType                                  InMaskType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InMorphTarget;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CH_PlayerBase_C_SetMaskAnimation) == 0x000004, "Wrong alignment on CH_PlayerBase_C_SetMaskAnimation");
static_assert(sizeof(CH_PlayerBase_C_SetMaskAnimation) == 0x00002C, "Wrong size on CH_PlayerBase_C_SetMaskAnimation");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, InDuration) == 0x000000, "Member 'CH_PlayerBase_C_SetMaskAnimation::InDuration' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, InMaskType) == 0x000004, "Member 'CH_PlayerBase_C_SetMaskAnimation::InMaskType' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, InMorphTarget) == 0x000008, "Member 'CH_PlayerBase_C_SetMaskAnimation::InMorphTarget' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000016, "Member 'CH_PlayerBase_C_SetMaskAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_GetTimelineLength_ReturnValue) == 0x00001C, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_GetTimelineLength_ReturnValue_1) == 0x000024, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_GetTimelineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000028, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CH_PlayerBase_C_SetMaskAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'CH_PlayerBase_C_SetMaskAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

