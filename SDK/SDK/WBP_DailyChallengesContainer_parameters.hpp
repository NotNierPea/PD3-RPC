#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DailyChallengesContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.ExecuteUbergraph_WBP_DailyChallengesContainer
// 0x0160 (0x0160 - 0x0000)
struct WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DailyChallengeItem_C*              CallFunc_CreateChallengeButton_OutChallengeButtonWidget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFeatureToggleValue_ReturnValue;        // 0x015C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer");
static_assert(sizeof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer) == 0x000160, "Wrong size on WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, EntryPoint) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_byte_Variable) == 0x000004, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_Event_IsDesignTime) == 0x000006, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_CreateChallengeButton_OutChallengeButtonWidget) == 0x000008, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_CreateChallengeButton_OutChallengeButtonWidget' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_int_Variable) == 0x000010, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_bool_Variable) == 0x000024, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_Select_Default) == 0x000026, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_byte_Variable_2) == 0x000027, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_byte_Variable_3) == 0x000028, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_GetChallengeManager_ReturnValue) == 0x000030, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_MakeLiteralInt_ReturnValue) == 0x00004C, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000050, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x0000D8, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, Temp_bool_Variable_1) == 0x0000DC, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_MakeArray_Array) == 0x000120, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, K2Node_Select_Default_1) == 0x000130, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Format_ReturnValue) == 0x000138, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_K2_SetTimer_ReturnValue) == 0x000150, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000158, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_GetFeatureToggleValue_ReturnValue) == 0x00015C, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_GetFeatureToggleValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00015D, "Member 'WBP_DailyChallengesContainer_C_ExecuteUbergraph_WBP_DailyChallengesContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_DailyChallengesContainer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_DailyChallengesContainer_C_PreConstruct");
static_assert(sizeof(WBP_DailyChallengesContainer_C_PreConstruct) == 0x000001, "Wrong size on WBP_DailyChallengesContainer_C_PreConstruct");
static_assert(offsetof(WBP_DailyChallengesContainer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.CreateChallengeButton
// 0x0050 (0x0050 - 0x0000)
struct WBP_DailyChallengesContainer_C_CreateChallengeButton final
{
public:
	class UWBP_DailyChallengeItem_C*              OutChallengeButtonWidget;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_DailyChallengeItem_C* ChallengeButton)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x001C(0x0008)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DailyChallengeItem_C*              CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_CreateChallengeButton) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_CreateChallengeButton");
static_assert(sizeof(WBP_DailyChallengesContainer_C_CreateChallengeButton) == 0x000050, "Wrong size on WBP_DailyChallengesContainer_C_CreateChallengeButton");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, OutChallengeButtonWidget) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::OutChallengeButtonWidget' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, K2Node_MakeStruct_SlateChildSize) == 0x00001C, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, CallFunc_AddChild_ReturnValue) == 0x000030, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000038, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_CreateChallengeButton, K2Node_MakeStruct_Margin) == 0x000040, "Member 'WBP_DailyChallengesContainer_C_CreateChallengeButton::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.OnChallengeRerollPressed
// 0x0120 (0x0120 - 0x0000)
struct WBP_DailyChallengesContainer_C_OnChallengeRerollPressed final
{
public:
	class UWBP_DailyChallengeItem_C*              ChallengeButton;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName ClosingActionName)> K2Node_CreateDelegate_OutputDelegate;             // 0x0008(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference;       // 0x0020(0x0030)()
	struct FSBZButtonControlReference             K2Node_MakeStruct_SBZButtonControlReference_1;     // 0x0050(0x0030)()
	class USBZUIManager*                          CallFunc_GetUIManager_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSBZButtonControlReference>     K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	struct FSBZButtonControlsReference            K2Node_MakeStruct_SBZButtonControlsReference;      // 0x0098(0x0028)()
	struct FSBZUIPopupData                        K2Node_MakeStruct_SBZUIPopupData;                  // 0x00C0(0x0060)(ContainsInstancedReference)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_OnChallengeRerollPressed");
static_assert(sizeof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed) == 0x000120, "Wrong size on WBP_DailyChallengesContainer_C_OnChallengeRerollPressed");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, ChallengeButton) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::ChallengeButton' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_MakeStruct_SBZButtonControlReference) == 0x000020, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_MakeStruct_SBZButtonControlReference' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_MakeStruct_SBZButtonControlReference_1) == 0x000050, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_MakeStruct_SBZButtonControlReference_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, CallFunc_GetUIManager_ReturnValue) == 0x000080, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::CallFunc_GetUIManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_MakeStruct_SBZButtonControlsReference) == 0x000098, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_MakeStruct_SBZButtonControlsReference' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPressed, K2Node_MakeStruct_SBZUIPopupData) == 0x0000C0, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPressed::K2Node_MakeStruct_SBZUIPopupData' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.OnChallengeRerollPopupClosed
// 0x0020 (0x0020 - 0x0000)
struct WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed final
{
public:
	class FName                                   ClosingActionName;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed");
static_assert(sizeof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed) == 0x000020, "Wrong size on WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed, ClosingActionName) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed::ClosingActionName' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed, K2Node_SwitchName_CmpSuccess) == 0x00000C, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed, CallFunc_GetChallengeManager_ReturnValue) == 0x000010, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'WBP_DailyChallengesContainer_C_OnChallengeRerollPopupClosed::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.InitializeDailyChallenges
// 0x0040 (0x0040 - 0x0000)
struct WBP_DailyChallengesContainer_C_InitializeDailyChallenges final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZChallengeManager*                   CallFunc_GetChallengeManager_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_DailyChallengeItem_C*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSBZChallengeData>              CallFunc_GetDailyChallengesArray_ReturnValue;      // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_InitializeDailyChallenges");
static_assert(sizeof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges) == 0x000040, "Wrong size on WBP_DailyChallengesContainer_C_InitializeDailyChallenges");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, Temp_byte_Variable) == 0x00000C, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, Temp_bool_Variable) == 0x00000E, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_GetChallengeManager_ReturnValue) == 0x000010, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_GetDailyChallengesArray_ReturnValue) == 0x000020, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_GetDailyChallengesArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_InitializeDailyChallenges, K2Node_Select_Default) == 0x00003D, "Member 'WBP_DailyChallengesContainer_C_InitializeDailyChallenges::K2Node_Select_Default' has a wrong offset!");

// Function WBP_DailyChallengesContainer.WBP_DailyChallengesContainer_C.UpdateTimer
// 0x0138 (0x0138 - 0x0000)
struct WBP_DailyChallengesContainer_C_UpdateTimer final
{
public:
	class USBZTimeEventManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNextResetTime_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days_1;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours_1;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
};
static_assert(alignof(WBP_DailyChallengesContainer_C_UpdateTimer) == 0x000008, "Wrong alignment on WBP_DailyChallengesContainer_C_UpdateTimer");
static_assert(sizeof(WBP_DailyChallengesContainer_C_UpdateTimer) == 0x000138, "Wrong size on WBP_DailyChallengesContainer_C_UpdateTimer");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_Get_ReturnValue) == 0x000000, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_GetNextResetTime_ReturnValue) == 0x000008, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_GetNextResetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_FromSeconds_ReturnValue) == 0x000010, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Days) == 0x000018, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Hours) == 0x00001C, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Minutes) == 0x000020, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Seconds) == 0x000024, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Milliseconds) == 0x000028, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_MakeTimespan_ReturnValue) == 0x000030, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Days_1) == 0x000038, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Days_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Hours_1) == 0x00003C, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Hours_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Minutes_1) == 0x000040, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Minutes_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Seconds_1) == 0x000044, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Seconds_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_BreakTimespan_Milliseconds_1) == 0x000048, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_BreakTimespan_Milliseconds_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, K2Node_MakeArray_Array) == 0x000110, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_DailyChallengesContainer_C_UpdateTimer, CallFunc_Format_ReturnValue) == 0x000120, "Member 'WBP_DailyChallengesContainer_C_UpdateTimer::CallFunc_Format_ReturnValue' has a wrong offset!");

}

